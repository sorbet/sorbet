suggest_static.rb:11: Method `foo` does not exist on `A` https://srb.help/7003
    11 |A.new.foo
              ^^^
  Got `A` originating from:
    suggest_static.rb:11:
    11 |A.new.foo
        ^^^^^
  There is a singleton class method with the same name:
    suggest_static.rb:3: Defined here
     3 |  def self.foo
          ^^^^^^^^^^^^
    Either:
    - use `.class` to call it, or
    - remove `self.` from its definition to make it an instance method
  Autocorrect: Done
    suggest_static.rb:11: Inserted `.class`
    11 |A.new.foo
             ^

suggest_static.rb:21: Method `on_both` does not exist on `Left` component of `T.any(Left, Right)` https://srb.help/7003
    21 |left_or_right.on_both
                      ^^^^^^^
  Got `T.any(Left, Right)` originating from:
    suggest_static.rb:20:
    20 |left_or_right = T.let(Left.new, T.any(Left, Right))
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  There is a singleton class method with the same name:
    suggest_static.rb:14: Defined here
    14 |  def self.on_both; end
          ^^^^^^^^^^^^^^^^
    Either:
    - use `.class` to call it, or
    - remove `self.` from its definition to make it an instance method
  Autocorrect: Done
    suggest_static.rb:21: Inserted `.class`
    21 |left_or_right.on_both
                     ^

suggest_static.rb:21: Method `on_both` does not exist on `Right` component of `T.any(Left, Right)` https://srb.help/7003
    21 |left_or_right.on_both
                      ^^^^^^^
  Got `T.any(Left, Right)` originating from:
    suggest_static.rb:20:
    20 |left_or_right = T.let(Left.new, T.any(Left, Right))
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  There is a singleton class method with the same name:
    suggest_static.rb:17: Defined here
    17 |  def self.on_both; end
          ^^^^^^^^^^^^^^^^
    Either:
    - use `.class` to call it, or
    - remove `self.` from its definition to make it an instance method
  Autocorrect: Done
    suggest_static.rb:21: Inserted `.class`
    21 |left_or_right.on_both
                     ^

suggest_static.rb:7: Method `foo` does not exist on `A` https://srb.help/7003
     7 |    foo
            ^^^
  There is a singleton class method with the same name:
    suggest_static.rb:3: Defined here
     3 |  def self.foo
          ^^^^^^^^^^^^
    Either:
    - use `.class` to call it,
    - remove `self.` from its definition to make it an instance method, or
    - define the current method as a singleton class method using `def self.`
  Autocorrect: Done
    suggest_static.rb:7: Inserted `self.class.`
     7 |    foo
            ^
Errors: 4

--------------------------------------------------------------------------

# typed: true
class A
  def self.foo
  end

  def bar
    self.class.foo
  end
end

A.new.class.foo

class Left
  def self.on_both; end
end
class Right
  def self.on_both; end
end

left_or_right = T.let(Left.new, T.any(Left, Right))
left_or_right.class.on_both
