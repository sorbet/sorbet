suggest_static.rb:11: Method `foo` does not exist on `A` https://srb.help/7003
    11 |A.new.foo
              ^^^
  Got `A` originating from:
    suggest_static.rb:11:
    11 |A.new.foo
        ^^^^^
  Note:
    Did you mean to call `A.foo` which is a singleton class method?
  Autocorrect: Done
    suggest_static.rb:11: Inserted `.class`
    11 |A.new.foo
             ^
    suggest_static.rb:3: `foo` defined here
     3 |  def self.foo
          ^^^^^^^^^^^^

suggest_static.rb:21: Method `on_both` does not exist on `Left` component of `T.any(Left, Right)` https://srb.help/7003
    21 |left_or_right.on_both
                      ^^^^^^^
  Got `T.any(Left, Right)` originating from:
    suggest_static.rb:20:
    20 |left_or_right = T.let(Left.new, T.any(Left, Right))
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Note:
    Did you mean to call `Left.on_both` which is a singleton class method?
  Autocorrect: Done
    suggest_static.rb:21: Inserted `.class`
    21 |left_or_right.on_both
                     ^
    suggest_static.rb:14: `on_both` defined here
    14 |  def self.on_both; end
          ^^^^^^^^^^^^^^^^

suggest_static.rb:21: Method `on_both` does not exist on `Right` component of `T.any(Left, Right)` https://srb.help/7003
    21 |left_or_right.on_both
                      ^^^^^^^
  Got `T.any(Left, Right)` originating from:
    suggest_static.rb:20:
    20 |left_or_right = T.let(Left.new, T.any(Left, Right))
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Note:
    Did you mean to call `Right.on_both` which is a singleton class method?
  Autocorrect: Done
    suggest_static.rb:21: Inserted `.class`
    21 |left_or_right.on_both
                     ^
    suggest_static.rb:17: `on_both` defined here
    17 |  def self.on_both; end
          ^^^^^^^^^^^^^^^^

suggest_static.rb:7: Method `foo` does not exist on `A` https://srb.help/7003
     7 |    foo
            ^^^
  Note:
    Did you mean to call `A.foo` which is a singleton class method?
  Autocorrect: Done
    suggest_static.rb:7: Inserted `self.class.`
     7 |    foo
            ^
    suggest_static.rb:3: `foo` defined here
     3 |  def self.foo
          ^^^^^^^^^^^^
Errors: 4

--------------------------------------------------------------------------

# typed: true
class A
  def self.foo
  end

  def bar
    self.class.foo
  end
end

A.new.class.foo

class Left
  def self.on_both; end
end
class Right
  def self.on_both; end
end

left_or_right = T.let(Left.new, T.any(Left, Right))
left_or_right.class.on_both
