-- sanity-checking package with --stripe-packages
family/family.rb:21: `WhoKnows` resolves but is not exported from `External` https://srb.help/3717
    21 |    sig {returns(::WhoKnows)}
                         ^^^^^^^^^^
  Consider marking this RBI file `# packaged: false` if it is meant to declare unpackaged constants
    external/who_knows.rbi:3:
     3 |class ::WhoKnows; end
        ^^^^^^^^^^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    external/__package.rb:3: Insert `export WhoKnows`
     3 |class External < PackageSpec
                                    ^

family/family.rb:23: `WhoKnows` resolves but is not exported from `External` https://srb.help/3717
    23 |      WhoKnows.new
              ^^^^^^^^
  Consider marking this RBI file `# packaged: false` if it is meant to declare unpackaged constants
    external/who_knows.rbi:3:
     3 |class ::WhoKnows; end
        ^^^^^^^^^^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    external/__package.rb:3: Insert `export WhoKnows`
     3 |class External < PackageSpec
                                    ^

family/__package.rb:13: Invalid expression in package: Arguments to functions must be literals https://srb.help/3710
    13 |  export_for_test Family::Flanders
                          ^^^^^^^^^^^^^^^^

family/__package.rb:15: Invalid expression in package: Arguments to functions must be literals https://srb.help/3710
    15 |  export_for_test Family::Krabappel
                          ^^^^^^^^^^^^^^^^^

family/__package.rb:13: Method `export_for_test` does not exist on `T.class_of(Family)` https://srb.help/7003
    13 |  export_for_test Family::Flanders
          ^^^^^^^^^^^^^^^

family/__package.rb:15: Method `export_for_test` does not exist on `T.class_of(Family)` https://srb.help/7003
    15 |  export_for_test Family::Krabappel
          ^^^^^^^^^^^^^^^
Errors: 6
-- ./test/cli/rbi-gen-single/external/__package.rb (External)
family/__package.rb:13: Invalid expression in package: Arguments to functions must be literals https://srb.help/3710
    13 |  export_for_test Family::Flanders
                          ^^^^^^^^^^^^^^^^

family/__package.rb:15: Invalid expression in package: Arguments to functions must be literals https://srb.help/3710
    15 |  export_for_test Family::Krabappel
                          ^^^^^^^^^^^^^^^^^
Errors: 2
-- ./test/cli/rbi-gen-single/family/__package.rb (Family)
family/__package.rb:13: Invalid expression in package: Arguments to functions must be literals https://srb.help/3710
    13 |  export_for_test Family::Flanders
                          ^^^^^^^^^^^^^^^^

family/__package.rb:15: Invalid expression in package: Arguments to functions must be literals https://srb.help/3710
    15 |  export_for_test Family::Krabappel
                          ^^^^^^^^^^^^^^^^^
Errors: 2
-- RBI (Family)
# typed: true

class Family::Simpsons
  sig {returns(Family::Bart::Character)}
  def bart; end
  sig {returns(WhoKnows)}
  def make_something; end
  sig {returns(T.nilable(Family::Bart::Character))}
  def no_bart; end
  extend T::Sig
end
Family::Simpsons::RelativeBart = Family::Bart::Character
Family::Simpsons::MaybeBartFull = T.type_alias {T.nilable(Family::Bart::Character)}
Family::Simpsons::MaybeBart = T.type_alias {T.nilable(Family::Bart::Character)}
Family::Simpsons::FullyQualifiedBart = Family::Bart::Character
class Family::Belcher
end
-- RBI Deps (Family)
{"packageRefs":["Family::Bart"], "rbiRefs":[]}
-- Test RBI (Family)
# typed: true

class Test::Family::TestFamily < Test::Util::Testing::TestCase
  sig {params(fam: Family::Flanders).void}
  def test_flanders(fam); end
  sig {returns(Object)}
  def test_krabappel; end
  sig {params(fam: Family::Simpsons).void}
  def test_simpsons(fam); end
  extend T::Sig
end
class Family::Flanders
  extend T::Sig
end
-- Test RBI Deps (Family)
{"packageRefs":["Family::Bart","Test::Util::Testing"], "rbiRefs":[]}
-- ./test/cli/rbi-gen-single/family/bart/__package.rb (Family::Bart)
family/__package.rb:13: Invalid expression in package: Arguments to functions must be literals https://srb.help/3710
    13 |  export_for_test Family::Flanders
                          ^^^^^^^^^^^^^^^^

family/__package.rb:15: Invalid expression in package: Arguments to functions must be literals https://srb.help/3710
    15 |  export_for_test Family::Krabappel
                          ^^^^^^^^^^^^^^^^^
Errors: 2
-- ./test/cli/rbi-gen-single/family/bart/slingshot/__package.rb (Family::Bart::Slingshot)
family/__package.rb:13: Invalid expression in package: Arguments to functions must be literals https://srb.help/3710
    13 |  export_for_test Family::Flanders
                          ^^^^^^^^^^^^^^^^

family/__package.rb:15: Invalid expression in package: Arguments to functions must be literals https://srb.help/3710
    15 |  export_for_test Family::Krabappel
                          ^^^^^^^^^^^^^^^^^
Errors: 2
-- ./test/cli/rbi-gen-single/util/__package.rb (Util)
family/__package.rb:13: Invalid expression in package: Arguments to functions must be literals https://srb.help/3710
    13 |  export_for_test Family::Flanders
                          ^^^^^^^^^^^^^^^^

family/__package.rb:15: Invalid expression in package: Arguments to functions must be literals https://srb.help/3710
    15 |  export_for_test Family::Krabappel
                          ^^^^^^^^^^^^^^^^^
Errors: 2
-- RBI (Util)
# typed: true

class Util::GenericMessage
  Elem = type_member()
  sig {params(x: Elem).void}
  def initialize(x)
    @x = T.let(T.unsafe(nil), Elem)
  end
  sig {returns(Elem)}
  def x; end
  extend T::Generic
  extend T::Helpers
  extend T::Sig
end
class Util::Messages
  extend T::Sig
  sig {type_parameters(:T).params(msg: GenericMessage[T.type_parameter(:T)]).void}
  def self.print_message(msg); end
  sig {params(msg: String).void}
  def self.say(msg); end
end
-- RBI Deps (Util)
{"packageRefs":[], "rbiRefs":[]}
-- ./test/cli/rbi-gen-single/util/testing/__package.rb (Util::Testing)
family/__package.rb:13: Invalid expression in package: Arguments to functions must be literals https://srb.help/3710
    13 |  export_for_test Family::Flanders
                          ^^^^^^^^^^^^^^^^

family/__package.rb:15: Invalid expression in package: Arguments to functions must be literals https://srb.help/3710
    15 |  export_for_test Family::Krabappel
                          ^^^^^^^^^^^^^^^^^
Errors: 2
