No errors! Great job.
class ::<root> < ::<todo sym> ()
  class ::<Class:<root>>[<AttachedClass>] < ::<todo sym> ()
    method ::<Class:<root>>#<static-init> (<blk>) @ test/cli/stop-after-namer/stop-after-namer.rb:3
      argument <blk><block> @ Loc {file=test/cli/stop-after-namer/stop-after-namer.rb start=??? end=???}
  class ::A < ::<todo sym> () @ test/cli/stop-after-namer/stop-after-namer.rb:3
    method ::A#method (method_arg, <blk>) @ test/cli/stop-after-namer/stop-after-namer.rb:4
      argument method_arg<> @ Loc {file=test/cli/stop-after-namer/stop-after-namer.rb start=4:14 end=4:24}
      argument <blk><block> @ Loc {file=test/cli/stop-after-namer/stop-after-namer.rb start=??? end=???}
  class ::<Class:A>[<AttachedClass>] < ::<todo sym> () @ test/cli/stop-after-namer/stop-after-namer.rb:3
    type-member(+) ::<Class:A>::<AttachedClass> -> T.attached_class (of A) @ test/cli/stop-after-namer/stop-after-namer.rb:3
    method ::<Class:A>#<static-init> (<blk>) @ test/cli/stop-after-namer/stop-after-namer.rb:3
      argument <blk><block> @ Loc {file=test/cli/stop-after-namer/stop-after-namer.rb start=??? end=???}
    method ::<Class:A>#singleton_method (singleton_method_arg, <blk>) @ test/cli/stop-after-namer/stop-after-namer.rb:10
      argument singleton_method_arg<> @ Loc {file=test/cli/stop-after-namer/stop-after-namer.rb start=10:29 end=10:49}
      argument <blk><block> @ Loc {file=test/cli/stop-after-namer/stop-after-namer.rb start=??? end=???}

