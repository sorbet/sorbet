literal-type-syntax.rb:3: Unsupported literal in type syntax https://srb.help/5077
     3 |T.let(0, 0)
                 ^
  Autocorrect: Done
    literal-type-syntax.rb:3: Replaced with `Integer`
     3 |T.let(0, 0)
                 ^
  Note:
    Sorbet does not allow literal values in types. Consider defining a `T::Enum` instead.

literal-type-syntax.rb:4: Unsupported literal in type syntax https://srb.help/5077
     4 |T.let(0.0, 0.0)
                   ^^^
  Autocorrect: Done
    literal-type-syntax.rb:4: Replaced with `Float`
     4 |T.let(0.0, 0.0)
                   ^^^
  Note:
    Sorbet does not allow literal values in types. Consider defining a `T::Enum` instead.

literal-type-syntax.rb:5: Unsupported literal in type syntax https://srb.help/5077
     5 |T.let('', '')
                  ^^
  Autocorrect: Done
    literal-type-syntax.rb:5: Replaced with `String`
     5 |T.let('', '')
                  ^^
  Note:
    Sorbet does not allow literal values in types. Consider defining a `T::Enum` instead.

literal-type-syntax.rb:6: Unsupported literal in type syntax https://srb.help/5077
     6 |T.let(:'', :'')
                   ^^^
  Autocorrect: Done
    literal-type-syntax.rb:6: Replaced with `Symbol`
     6 |T.let(:'', :'')
                   ^^^
  Note:
    Sorbet does not allow literal values in types. Consider defining a `T::Enum` instead.

literal-type-syntax.rb:7: Unsupported literal in type syntax https://srb.help/5077
     7 |T.let(true, true)
                    ^^^^
  Autocorrect: Done
    literal-type-syntax.rb:7: Replaced with `TrueClass`
     7 |T.let(true, true)
                    ^^^^
  Note:
    Sorbet does not allow literal values in types. Consider defining a `T::Enum` instead.

literal-type-syntax.rb:8: Unsupported literal in type syntax https://srb.help/5077
     8 |T.let(false, false)
                     ^^^^^
  Autocorrect: Done
    literal-type-syntax.rb:8: Replaced with `FalseClass`
     8 |T.let(false, false)
                     ^^^^^
  Note:
    Sorbet does not allow literal values in types. Consider defining a `T::Enum` instead.

literal-type-syntax.rb:9: Unsupported literal in type syntax https://srb.help/5077
     9 |T.let(nil, nil)
                   ^^^
  Autocorrect: Done
    literal-type-syntax.rb:9: Replaced with `NilClass`
     9 |T.let(nil, nil)
                   ^^^
  Note:
    Sorbet does not allow literal values in types. Consider defining a `T::Enum` instead.

literal-type-syntax.rb:11: Unsupported literal in type syntax https://srb.help/5077
    11 |T.let(true, T.any(true, false))
                          ^^^^
  Autocorrect: Done
    literal-type-syntax.rb:11: Replaced with `TrueClass`
    11 |T.let(true, T.any(true, false))
                          ^^^^
  Note:
    Sorbet does not allow literal values in types. Consider defining a `T::Enum` instead.

literal-type-syntax.rb:11: Unsupported literal in type syntax https://srb.help/5077
    11 |T.let(true, T.any(true, false))
                                ^^^^^
  Autocorrect: Done
    literal-type-syntax.rb:11: Replaced with `FalseClass`
    11 |T.let(true, T.any(true, false))
                                ^^^^^
  Note:
    Sorbet does not allow literal values in types. Consider defining a `T::Enum` instead.

literal-type-syntax.rb:11: Unexpected bare `TrueClass` value found in type position https://srb.help/7009
    11 |T.let(true, T.any(true, false))
                          ^^^^

literal-type-syntax.rb:11: Unexpected bare `FalseClass` value found in type position https://srb.help/7009
    11 |T.let(true, T.any(true, false))
                                ^^^^^
Errors: 11

--------------------------------------------------------------------------

# typed: true

T.let(0, Integer)
T.let(0.0, Float)
T.let('', String)
T.let(:'', Symbol)
T.let(true, TrueClass)
T.let(false, FalseClass)
T.let(nil, NilClass)

T.let(true, T.any(TrueClass, FalseClass))
