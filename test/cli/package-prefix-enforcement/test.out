nested/nested.rb:5: Class or method definition must match enclosing package namespace `Root::Nested` https://srb.help/3713
     5 |module Wrong
               ^^^^^

nested/nested.rb:40: Class or method behavior may not be defined outside of the enclosing package namespace `Root::Nested` https://srb.help/3713
    40 |  sig {returns(NilClass)}
          ^^^^^^^^^^^^^^^^^^^^^^^
  Note:
    Constant `Root` should either be defined in directory `./nested/` to match its package, or re-namespaced to be within `Root::Nested`

nested/nested.rb:41: Class or method behavior may not be defined outside of the enclosing package namespace `Root::Nested` https://srb.help/3713
    41 |  def self.method
          ^^^^^^^^^^^^^^^
  Note:
    Constant `Root` should either be defined in directory `./nested/` to match its package, or re-namespaced to be within `Root::Nested`

nested/nested.rb:37: Class or method behavior may not be defined outside of the enclosing package namespace `Root::Nested` https://srb.help/3713
    37 |  extend T::Sig
          ^^^^^^^^^^^^^
  Note:
    Constant `Root` should either be defined in directory `./nested/` to match its package, or re-namespaced to be within `Root::Nested`

nested/nested.rb:38: Constants may not be defined outside of the enclosing package namespace `Root::Nested` https://srb.help/3713
    38 |  NOT_IN_PACKAGE = T.let(1, Integer)
          ^^^^^^^^^^^^^^
  Note:
    Constant `Root::NOT_IN_PACKAGE` should either be defined in directory `./nested/` to match its package, or re-namespaced to be within `Root::Nested`

nested/nested.rb:41: Class or method behavior may not be defined outside of the enclosing package namespace `Root::Nested` https://srb.help/3713
    41 |  def self.method
          ^^^^^^^^^^^^^^^
  Note:
    Constant `Root` should either be defined in directory `./nested/` to match its package, or re-namespaced to be within `Root::Nested`

nested/nested.rb:54: Class or method definition must match enclosing package namespace `Root::Nested` https://srb.help/3713
    54 |module Root::ModNotInPackage
               ^^^^^^^^^^^^^^^^^^^^^
  Note:
    Constant `Root::ModNotInPackage` should either be defined in directory `./nested/` to match its package, or re-namespaced to be within `Root::Nested`

nested/nested.rb:57: Class or method definition must match enclosing package namespace `Root::Nested` https://srb.help/3713
    57 |class Root::ClassNotInPackage
              ^^^^^^^^^^^^^^^^^^^^^^^
  Note:
    Constant `Root::ClassNotInPackage` should either be defined in directory `./nested/` to match its package, or re-namespaced to be within `Root::Nested`

nested/nested.test.rb:9: Constants may not be defined outside of the enclosing package namespace `Test::Root::Nested` https://srb.help/3713
     9 |  NOT_IN_MODULE = nil
          ^^^^^^^^^^^^^
  Note:
    Constant `Root::NOT_IN_MODULE` should either be defined in directory `./nested/` to match its package, or re-namespaced to be within `Test::Root::Nested`

nested/nested.test.rb:16: Class or method definition must match enclosing package namespace `Test::Root::Nested` https://srb.help/3713
    16 |module Root::Nested::ShouldBeInTestPrefix
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

critic_prefix/real.test.rb:13: Constants may not be defined outside of the enclosing package namespace `Critic::SomePkg` https://srb.help/3713
    13 |SomeOtherNamespace::SomePkg::SomeConst = 4
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Errors: 11
