autocorrect_array_plus.rb:6: Expected `T::Enumerable[Integer]` but found `T::Array[String]` for argument `arg0` https://srb.help/7002
     6 |ints + strings
        ^^^^^^^^^^^^^^
  Expected `T::Enumerable[Integer]` for argument `arg0` of method `Array#+`:
    https://github.com/sorbet/sorbet/tree/master/rbi/core/array.rbi#L448:
     448 |        arg0: T::Enumerable[Elem],
                  ^^^^
  Got `T::Array[String]` originating from:
    autocorrect_array_plus.rb:4:
     4 |strings = T::Array[String].new
                  ^^^^^^^^^^^^^^^^^^^^
  Note:
    If the desired behavior is to widen the type to `T::Array[T.any(Integer, String)]`, use `Array#concat` instead
  Autocorrect: Done
    autocorrect_array_plus.rb:6: Replaced with `.concat(strings)`
     6 |ints + strings
            ^^^^^^^^^^

autocorrect_array_plus.rb:8: Expected `T::Enumerable[Integer]` but found `T::Array[String]` for argument `arg0` https://srb.help/7002
     8 |ints + (strings)
        ^^^^^^^^^^^^^^^^
  Expected `T::Enumerable[Integer]` for argument `arg0` of method `Array#+`:
    https://github.com/sorbet/sorbet/tree/master/rbi/core/array.rbi#L448:
     448 |        arg0: T::Enumerable[Elem],
                  ^^^^
  Got `T::Array[String]` originating from:
    autocorrect_array_plus.rb:4:
     4 |strings = T::Array[String].new
                  ^^^^^^^^^^^^^^^^^^^^
  Note:
    If the desired behavior is to widen the type to `T::Array[T.any(Integer, String)]`, use `Array#concat` instead
  Autocorrect: Done
    autocorrect_array_plus.rb:8: Replaced with `.concat(strings)`
     8 |ints + (strings)
            ^^^^^^^^^^^^

autocorrect_array_plus.rb:9: Expected `T::Enumerable[Integer]` but found `T::Array[String]` for argument `arg0` https://srb.help/7002
     9 |ints + ((strings))
        ^^^^^^^^^^^^^^^^^^
  Expected `T::Enumerable[Integer]` for argument `arg0` of method `Array#+`:
    https://github.com/sorbet/sorbet/tree/master/rbi/core/array.rbi#L448:
     448 |        arg0: T::Enumerable[Elem],
                  ^^^^
  Got `T::Array[String]` originating from:
    autocorrect_array_plus.rb:4:
     4 |strings = T::Array[String].new
                  ^^^^^^^^^^^^^^^^^^^^
  Note:
    If the desired behavior is to widen the type to `T::Array[T.any(Integer, String)]`, use `Array#concat` instead
  Autocorrect: Done
    autocorrect_array_plus.rb:9: Replaced with `.concat(strings)`
     9 |ints + ((strings))
            ^^^^^^^^^^^^^^

autocorrect_array_plus.rb:10: Expected `T::Enumerable[Integer]` but found `T::Array[String]` for argument `arg0` https://srb.help/7002
    10 |ints.+(strings)
        ^^^^^^^^^^^^^^^
  Expected `T::Enumerable[Integer]` for argument `arg0` of method `Array#+`:
    https://github.com/sorbet/sorbet/tree/master/rbi/core/array.rbi#L448:
     448 |        arg0: T::Enumerable[Elem],
                  ^^^^
  Got `T::Array[String]` originating from:
    autocorrect_array_plus.rb:4:
     4 |strings = T::Array[String].new
                  ^^^^^^^^^^^^^^^^^^^^
  Note:
    If the desired behavior is to widen the type to `T::Array[T.any(Integer, String)]`, use `Array#concat` instead
  Autocorrect: Done
    autocorrect_array_plus.rb:10: Replaced with `.concat(strings)`
    10 |ints.+(strings)
            ^^^^^^^^^^^

autocorrect_array_plus.rb:12: Expected `T::Enumerable[Integer]` but found `T::Array[String]` for argument `arg0` https://srb.help/7002
    12 |ints.+(
    13 |  strings
    14 |)
  Expected `T::Enumerable[Integer]` for argument `arg0` of method `Array#+`:
    https://github.com/sorbet/sorbet/tree/master/rbi/core/array.rbi#L448:
     448 |        arg0: T::Enumerable[Elem],
                  ^^^^
  Got `T::Array[String]` originating from:
    autocorrect_array_plus.rb:4:
     4 |strings = T::Array[String].new
                  ^^^^^^^^^^^^^^^^^^^^
  Note:
    If the desired behavior is to widen the type to `T::Array[T.any(Integer, String)]`, use `Array#concat` instead
  Autocorrect: Done
    autocorrect_array_plus.rb:12: Replaced with `.concat(strings)`
    12 |ints.+(
    13 |  strings
    14 |)

autocorrect_array_plus.rb:16: Expected `T::Enumerable[Integer]` but found `T::Array[String]` for argument `arg0` https://srb.help/7002
    16 |ints +
    17 |  strings
  Expected `T::Enumerable[Integer]` for argument `arg0` of method `Array#+`:
    https://github.com/sorbet/sorbet/tree/master/rbi/core/array.rbi#L448:
     448 |        arg0: T::Enumerable[Elem],
                  ^^^^
  Got `T::Array[String]` originating from:
    autocorrect_array_plus.rb:4:
     4 |strings = T::Array[String].new
                  ^^^^^^^^^^^^^^^^^^^^
  Note:
    If the desired behavior is to widen the type to `T::Array[T.any(Integer, String)]`, use `Array#concat` instead
  Autocorrect: Done
    autocorrect_array_plus.rb:16: Replaced with `.concat(strings)`
    16 |ints +
    17 |  strings

autocorrect_array_plus.rb:19: Expected `T::Enumerable[Integer]` but found `T::Array[String]` for argument `arg0` https://srb.help/7002
    19 |ints += strings
        ^^^^^^^^^^^^^^^
  Expected `T::Enumerable[Integer]` for argument `arg0` of method `Array#+`:
    https://github.com/sorbet/sorbet/tree/master/rbi/core/array.rbi#L448:
     448 |        arg0: T::Enumerable[Elem],
                  ^^^^
  Got `T::Array[String]` originating from:
    autocorrect_array_plus.rb:4:
     4 |strings = T::Array[String].new
                  ^^^^^^^^^^^^^^^^^^^^
  Note:
    If the desired behavior is to widen the type to `T::Array[T.any(Integer, String)]`, use `Array#concat` instead
  Autocorrect: Done
    autocorrect_array_plus.rb:19: Replaced with ` = ints.concat(strings)`
    19 |ints += strings
            ^^^^^^^^^^^

autocorrect_array_plus.rb:20: Expected `T::Enumerable[Integer]` but found `T::Array[String]` for argument `arg0` https://srb.help/7002
    20 |ints+=strings
        ^^^^^^^^^^^^^
  Expected `T::Enumerable[Integer]` for argument `arg0` of method `Array#+`:
    https://github.com/sorbet/sorbet/tree/master/rbi/core/array.rbi#L448:
     448 |        arg0: T::Enumerable[Elem],
                  ^^^^
  Got `T::Array[String]` originating from:
    autocorrect_array_plus.rb:4:
     4 |strings = T::Array[String].new
                  ^^^^^^^^^^^^^^^^^^^^
  Note:
    If the desired behavior is to widen the type to `T::Array[T.any(Integer, String)]`, use `Array#concat` instead
  Autocorrect: Done
    autocorrect_array_plus.rb:20: Replaced with ` = ints.concat(strings)`
    20 |ints+=strings
            ^^^^^^^^^

autocorrect_array_plus.rb:21: Expected `T::Enumerable[Integer]` but found `T::Array[String]` for argument `arg0` https://srb.help/7002
    21 |ints +=
    22 |    strings
  Expected `T::Enumerable[Integer]` for argument `arg0` of method `Array#+`:
    https://github.com/sorbet/sorbet/tree/master/rbi/core/array.rbi#L448:
     448 |        arg0: T::Enumerable[Elem],
                  ^^^^
  Got `T::Array[String]` originating from:
    autocorrect_array_plus.rb:4:
     4 |strings = T::Array[String].new
                  ^^^^^^^^^^^^^^^^^^^^
  Note:
    If the desired behavior is to widen the type to `T::Array[T.any(Integer, String)]`, use `Array#concat` instead
  Autocorrect: Done
    autocorrect_array_plus.rb:21: Replaced with ` = ints.concat(strings)`
    21 |ints +=
    22 |    strings
Errors: 9

--------------------------------------------------------------------------

# typed: true

ints = T::Array[Integer].new
strings = T::Array[String].new

ints.concat(strings)

ints.concat(strings)
ints.concat(strings)
ints.concat(strings)

ints.concat(strings)

ints.concat(strings)

ints = ints.concat(strings)
ints = ints.concat(strings)
ints = ints.concat(strings)
