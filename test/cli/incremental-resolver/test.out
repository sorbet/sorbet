----- test/cli/incremental-resolver/type-member.rb ---------------------
No errors! Great job.
----- test/cli/incremental-resolver/type-template.rb ---------------------
No errors! Great job.
----- test/cli/incremental-resolver/expect-failures/abstract_impl.rb ---------------------
test/cli/incremental-resolver/expect-failures/abstract_impl.rb:5: Malformed `sig`. Type not specified for argument `foo` https://srb.help/5003
     5 |  def foo(*foo)end
                   ^^^
    test/cli/incremental-resolver/expect-failures/abstract_impl.rb:4: Signature
     4 |  sig { overridable.void }
          ^^^^^^^^^^^^^^^^^^^^^^^^

test/cli/incremental-resolver/expect-failures/abstract_impl.rb:123: Malformed `sig`. Type not specified for argument `foo` https://srb.help/5003
     123 |  def foo(*foo)end
                     ^^^
    test/cli/incremental-resolver/expect-failures/abstract_impl.rb:122: Signature
     122 |  sig { overridable.void }
            ^^^^^^^^^^^^^^^^^^^^^^^^

test/cli/incremental-resolver/expect-failures/abstract_impl.rb:126: Implementation of overridable method `A#foo` must accept *`foo` https://srb.help/5035
     126 | def foo; end
           ^^^^^^^
    test/cli/incremental-resolver/expect-failures/abstract_impl.rb:123: Base method defined here
     123 |  def foo(*foo)end
            ^^^^^^^^^^^^^
Errors: 3
----- test/cli/incremental-resolver/expect-failures/constant_override.rb ---------------------
test/cli/incremental-resolver/expect-failures/constant_override.rb:2: Cannot initialize the module `B` by constant assignment https://srb.help/4022
     2 |B = e
        ^^^^^
    test/cli/incremental-resolver/expect-failures/constant_override.rb:3: Previously defined as a module here
     3 |module B
        ^^^^^^^^
  Note:
    Sorbet does not allow treating constant assignments as class or module definitions,
    even if the initializer computes a `Module` object at runtime. See the docs for more.

test/cli/incremental-resolver/expect-failures/constant_override.rb:5: Constant `B` is not a class or type alias https://srb.help/5004
     5 |  sig { returns(T.all(B,T)) }
                              ^
    test/cli/incremental-resolver/expect-failures/constant_override.rb:2: If you are trying to define a type alias, you should use `T.type_alias` here
     2 |B = e
        ^

test/cli/incremental-resolver/expect-failures/constant_override.rb:110: Cannot initialize the module `B` by constant assignment https://srb.help/4022
     110 |B = e
          ^^^^^
    test/cli/incremental-resolver/expect-failures/constant_override.rb:111: Previously defined as a module here
     111 |module B
          ^^^^^^^^
  Note:
    Sorbet does not allow treating constant assignments as class or module definitions,
    even if the initializer computes a `Module` object at runtime. See the docs for more.

test/cli/incremental-resolver/expect-failures/constant_override.rb:113: Constant `B` is not a class or type alias https://srb.help/5004
     113 |  sig { returns(T.all(B,T)) }
                                ^
    test/cli/incremental-resolver/expect-failures/constant_override.rb:13: If you are trying to define a type alias, you should use `T.type_alias` here
    13 |
    14 |

test/cli/incremental-resolver/expect-failures/constant_override.rb:110: Method `e` does not exist on `T.class_of(<root>)` https://srb.help/7003
     110 |B = e
              ^
Errors: 5
----- test/cli/incremental-resolver/expect-failures/constant_redefinition.rb ---------------------
test/cli/incremental-resolver/expect-failures/constant_redefinition.rb:4: Cannot initialize the class `A` by constant assignment https://srb.help/4022
     4 |  A = nil
          ^^^^^^^
    test/cli/incremental-resolver/expect-failures/constant_redefinition.rb:3: Previously defined as a class here
     3 |  class A; end
          ^^^^^^^
  Note:
    Sorbet does not allow treating constant assignments as class or module definitions,
    even if the initializer computes a `Module` object at runtime. See the docs for more.

test/cli/incremental-resolver/expect-failures/constant_redefinition.rb:59: Cannot initialize the class `A` by constant assignment https://srb.help/4022
    59 |  A = nil
          ^^^^^^^
    test/cli/incremental-resolver/expect-failures/constant_redefinition.rb:58: Previously defined as a class here
    58 |  class A; end
          ^^^^^^^
  Note:
    Sorbet does not allow treating constant assignments as class or module definitions,
    even if the initializer computes a `Module` object at runtime. See the docs for more.
Errors: 2
----- test/cli/incremental-resolver/expect-failures/multiple_sigs.rb ---------------------
test/cli/incremental-resolver/expect-failures/multiple_sigs.rb:3: Unused type annotation. No method def before next annotation https://srb.help/5040
     3 |  sig {void}
          ^^^^^^^^^^
    test/cli/incremental-resolver/expect-failures/multiple_sigs.rb:4: Type annotation that will be used instead
     4 |  sig {void}
          ^^^^^^^^^^

test/cli/incremental-resolver/expect-failures/multiple_sigs.rb:5: Malformed `sig`. Type not specified for argument `f` https://srb.help/5003
     5 |  def-f
              ^
    test/cli/incremental-resolver/expect-failures/multiple_sigs.rb:3: Signature
     3 |  sig {void}
          ^^^^^^^^^^

test/cli/incremental-resolver/expect-failures/multiple_sigs.rb:5: Malformed `sig`. Type not specified for argument `f` https://srb.help/5003
     5 |  def-f
              ^
    test/cli/incremental-resolver/expect-failures/multiple_sigs.rb:4: Signature
     4 |  sig {void}
          ^^^^^^^^^^

test/cli/incremental-resolver/expect-failures/multiple_sigs.rb:68: Unused type annotation. No method def before next annotation https://srb.help/5040
    68 |  sig {void}
          ^^^^^^^^^^
    test/cli/incremental-resolver/expect-failures/multiple_sigs.rb:69: Type annotation that will be used instead
    69 |  sig {void}
          ^^^^^^^^^^

test/cli/incremental-resolver/expect-failures/multiple_sigs.rb:70: Malformed `sig`. Type not specified for argument `f` https://srb.help/5003
    70 |  def-f
              ^
    test/cli/incremental-resolver/expect-failures/multiple_sigs.rb:68: Signature
    68 |  sig {void}
          ^^^^^^^^^^

test/cli/incremental-resolver/expect-failures/multiple_sigs.rb:70: Malformed `sig`. Type not specified for argument `f` https://srb.help/5003
    70 |  def-f
              ^
    test/cli/incremental-resolver/expect-failures/multiple_sigs.rb:69: Signature
    69 |  sig {void}
          ^^^^^^^^^^

test/cli/incremental-resolver/expect-failures/multiple_sigs.rb:68: Method `sig` does not exist on `T.class_of(<root>)` https://srb.help/7003
    68 |  sig {void}
          ^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/incremental-resolver/expect-failures/multiple_sigs.rb:68: Insert `extend T::Sig`
    68 |  sig {void}
        ^

test/cli/incremental-resolver/expect-failures/multiple_sigs.rb:68: Method `void` does not exist on `T.class_of(<root>)` https://srb.help/7003
    68 |  sig {void}
               ^^^^
  Did you mean `load`? Use `-a` to autocorrect
    test/cli/incremental-resolver/expect-failures/multiple_sigs.rb:68: Replace with `load`
    68 |  sig {void}
               ^^^^
    https://github.com/sorbet/sorbet/tree/master/rbi/core/kernel.rbi#LCENSORED: Defined here
      NN |  def load(filename, arg0=T.unsafe(nil)); end
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

test/cli/incremental-resolver/expect-failures/multiple_sigs.rb:69: Method `sig` does not exist on `T.class_of(<root>)` https://srb.help/7003
    69 |  sig {void}
          ^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/incremental-resolver/expect-failures/multiple_sigs.rb:69: Insert `extend T::Sig`
    69 |  sig {void}
        ^

test/cli/incremental-resolver/expect-failures/multiple_sigs.rb:69: Method `void` does not exist on `T.class_of(<root>)` https://srb.help/7003
    69 |  sig {void}
               ^^^^
  Did you mean `load`? Use `-a` to autocorrect
    test/cli/incremental-resolver/expect-failures/multiple_sigs.rb:69: Replace with `load`
    69 |  sig {void}
               ^^^^
    https://github.com/sorbet/sorbet/tree/master/rbi/core/kernel.rbi#LCENSORED: Defined here
      NN |  def load(filename, arg0=T.unsafe(nil)); end
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Errors: 10
