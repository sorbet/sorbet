test/cli/suggest_initialize_sig/suggest_initialize_sig.rb:6: The initialize method should always return void https://srb.help/3510
     6 |  sig {params(x: Integer).returns(Integer).on_failure(:soft, notify: 'sorbet')}
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest_initialize_sig/suggest_initialize_sig.rb:6: Replace with `params(x: Integer).void.on_failure(:soft, notify: 'sorbet')`
     6 |  sig {params(x: Integer).returns(Integer).on_failure(:soft, notify: 'sorbet')}
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

test/cli/suggest_initialize_sig/suggest_initialize_sig.rb:16: The initialize method should always return void https://srb.help/3510
    16 |    params(
    17 |      x: Integer
    18 |    )
    19 |    .returns(Integer)
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest_initialize_sig/suggest_initialize_sig.rb:16: Replace with `params(
      x: Integer
    )
    .void`
    16 |    params(
    17 |      x: Integer
    18 |    )
    19 |    .returns(Integer)

test/cli/suggest_initialize_sig/suggest_initialize_sig.rb:30: The initialize method should always return void https://srb.help/3510
    30 |    params(
    31 |      x: T::Array[T.any(String, T::Enum)]
    32 |    )
    33 |    .returns(T::Array[T.any(String, T::Enum)])
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest_initialize_sig/suggest_initialize_sig.rb:30: Replace with `params(
      x: T::Array[T.any(String, T::Enum)]
    )
    .void`
    30 |    params(
    31 |      x: T::Array[T.any(String, T::Enum)]
    32 |    )
    33 |    .returns(T::Array[T.any(String, T::Enum)])

test/cli/suggest_initialize_sig/suggest_initialize_sig.rb:43: The initialize method should always return void https://srb.help/3510
    43 |  sig {params(x: T.nilable(Integer)).returns(T.nilable(Integer)).on_failure(:soft, notify: 'sorbet')}
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest_initialize_sig/suggest_initialize_sig.rb:43: Replace with `params(x: T.nilable(Integer)).void.on_failure(:soft, notify: 'sorbet')`
    43 |  sig {params(x: T.nilable(Integer)).returns(T.nilable(Integer)).on_failure(:soft, notify: 'sorbet')}
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

test/cli/suggest_initialize_sig/suggest_initialize_sig.rb:52: The initialize method should always return void https://srb.help/3510
    52 |  sig {params(x: T.any(Integer, String)).returns(T.any(Integer, String))}
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest_initialize_sig/suggest_initialize_sig.rb:52: Replace with `params(x: T.any(Integer, String)).void`
    52 |  sig {params(x: T.any(Integer, String)).returns(T.any(Integer, String))}
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

test/cli/suggest_initialize_sig/suggest_initialize_sig.rb:71: The initialize method should always return void https://srb.help/3510
    71 |    params(
    72 |      path: String,
    73 |      key: String
    74 |    )
    75 |    .returns(T.self_type)
    76 |    .checked(:tests)
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest_initialize_sig/suggest_initialize_sig.rb:71: Replace with `params(
      path: String,
      key: String
    )
    .void
    .checked(:tests)`
    71 |    params(
    72 |      path: String,
    73 |      key: String
    74 |    )
    75 |    .returns(T.self_type)
    76 |    .checked(:tests)

test/cli/suggest_initialize_sig/suggest_initialize_sig.rb:86: The initialize method should always return void https://srb.help/3510
    86 |    params(
    87 |      path: String,
    88 |      key: String
    89 |    )
    90 |    .returns(T.self_type).checked(:tests)
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest_initialize_sig/suggest_initialize_sig.rb:86: Replace with `params(
      path: String,
      key: String
    )
    .void.checked(:tests)`
    86 |    params(
    87 |      path: String,
    88 |      key: String
    89 |    )
    90 |    .returns(T.self_type).checked(:tests)

test/cli/suggest_initialize_sig/suggest_initialize_sig.rb:79: Expected `LineBreakAfterReturns` but found `NilClass` for method result type https://srb.help/7005
    79 |  end
          ^^^
  Expected `LineBreakAfterReturns` for result type of method `initialize`:
    test/cli/suggest_initialize_sig/suggest_initialize_sig.rb:78:
    78 |  def initialize(path, key)
          ^^^^^^^^^^^^^^^^^^^^^^^^^
  Got `NilClass` originating from:
    test/cli/suggest_initialize_sig/suggest_initialize_sig.rb:78: Possibly uninitialized (`NilClass`) in:
    78 |  def initialize(path, key)
          ^^^^^^^^^^^^^^^^^^^^^^^^^

test/cli/suggest_initialize_sig/suggest_initialize_sig.rb:93: Expected `LineBreakOnlyAtEnd` but found `NilClass` for method result type https://srb.help/7005
    93 |  end
          ^^^
  Expected `LineBreakOnlyAtEnd` for result type of method `initialize`:
    test/cli/suggest_initialize_sig/suggest_initialize_sig.rb:92:
    92 |  def initialize(path, key)
          ^^^^^^^^^^^^^^^^^^^^^^^^^
  Got `NilClass` originating from:
    test/cli/suggest_initialize_sig/suggest_initialize_sig.rb:92: Possibly uninitialized (`NilClass`) in:
    92 |  def initialize(path, key)
          ^^^^^^^^^^^^^^^^^^^^^^^^^
Errors: 9
