foo_class.rb:21: Unable to resolve constant `MyClass` https://srb.help/5002
    21 |  Foo::Bar::MyClass::SUBCLASSES # resolves via root
          ^^^^^^^^^^^^^^^^^
  Autocorrect: Done
    foo_class.rb:21: Replaced with `Class`
    21 |  Foo::Bar::MyClass::SUBCLASSES # resolves via root
          ^^^^^^^^^^^^^^^^^
    https://github.com/sorbet/sorbet/tree/master/rbi/core/class.rbi#LCENSORED: `Class` defined here
    NN |class Class < Module
        ^^^^^^^^^^^^^^^^^^^^
  Autocorrect: Done
    foo_class.rb:21: Replaced with `T::Class`
    21 |  Foo::Bar::MyClass::SUBCLASSES # resolves via root
          ^^^^^^^^^^^^^^^^^
    https://github.com/sorbet/sorbet/tree/master/rbi/sorbet/t.rbi#LCENSORED: `T::Class` defined here
      NN |module T::Class
          ^^^^^^^^^^^^^^^
  Autocorrect: Done
    foo_class.rb:21: Replaced with `Digest::Class`
    21 |  Foo::Bar::MyClass::SUBCLASSES # resolves via root
          ^^^^^^^^^^^^^^^^^
    https://github.com/sorbet/sorbet/tree/master/rbi/stdlib/digest.rbi#LCENSORED: `Digest::Class` defined here
      NN |class Digest::Class
          ^^^^^^^^^^^^^^^^^^^

foo_class.rb:7: `Foo::Bar::OtherPackage::OtherClass` resolves but its package is not imported https://srb.help/3718
     7 |      Foo::Bar::OtherPackage::OtherClass # resolves via root
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    other/__package.rb:3: Exported from package here
     3 |class Foo::Bar::OtherPackage < PackageSpec
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Autocorrect: Done
    __package.rb:8: Inserted `import Foo::Bar::OtherPackage`
     8 |  # import Foo::Bar::OtherPackage ## MISSING!
                                                     ^

foo_class.rb:8: `Foo::Bar::OtherPackage::OtherClass` resolves but its package is not imported https://srb.help/3718
     8 |      Bar::OtherPackage::OtherClass # resolves via `module Foo`
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    other/__package.rb:3: Exported from package here
     3 |class Foo::Bar::OtherPackage < PackageSpec
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Autocorrect: Done
    __package.rb:8: Inserted `import Foo::Bar::OtherPackage`
     8 |  # import Foo::Bar::OtherPackage ## MISSING!
                                                     ^

foo_class.rb:9: `Foo::Bar::AppPackage::OtherClass` resolves but its package is not imported. However, it cannot be automatically imported because importing it would cause a layering violation https://srb.help/3718
     9 |      Foo::Bar::AppPackage::OtherClass # resolves via root
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    app_package/__package.rb:4: Package `Foo::Bar::AppPackage` must be at most layer `lib` (to match package `Foo::MyPackage`) but is currently layer `app`
     4 |  layer 'app'
                ^^^^^

foo_class.rb:10: `Foo::Bar::AppPackage::OtherClass` resolves but its package is not imported. However, it cannot be automatically imported because importing it would cause a layering violation https://srb.help/3718
    10 |      Bar::AppPackage::OtherClass # resolves via `module Foo`
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    app_package/__package.rb:4: Package `Foo::Bar::AppPackage` must be at most layer `lib` (to match package `Foo::MyPackage`) but is currently layer `app`
     4 |  layer 'app'
                ^^^^^

foo_class.rb:11: `Foo::Bar::FalsePackage::OtherClass` resolves but its package is not imported. However, it cannot be automatically imported because its `strict_dependencies` is too low https://srb.help/3718
    11 |      Foo::Bar::FalsePackage::OtherClass # resolves via root
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    false_package/__package.rb:5: `Foo::Bar::FalsePackage` must be at least `strict_dependencies 'layered'` but is currently `strict_dependencies 'false'`
     5 |  strict_dependencies 'false'
                              ^^^^^^^

foo_class.rb:12: `Foo::Bar::FalsePackage::OtherClass` resolves but its package is not imported. However, it cannot be automatically imported because its `strict_dependencies` is too low https://srb.help/3718
    12 |      Bar::FalsePackage::OtherClass # resolves via `module Foo`
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    false_package/__package.rb:5: `Foo::Bar::FalsePackage` must be at least `strict_dependencies 'layered'` but is currently `strict_dependencies 'false'`
     5 |  strict_dependencies 'false'
                              ^^^^^^^

foo_class.rb:13: `Foo::Bar::FalseAndAppPackage::OtherClass` resolves but its package is not imported. However, it cannot be automatically imported because importing it would cause a layering violation and its `strict_dependencies` is too low https://srb.help/3718
    13 |      Foo::Bar::FalseAndAppPackage::OtherClass # resolves via root
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    false_and_app_package/__package.rb:4: Package `Foo::Bar::FalseAndAppPackage` must be at most layer `lib` (to match package `Foo::MyPackage`) but is currently layer `app`
     4 |  layer 'app'
                ^^^^^
    false_and_app_package/__package.rb:5: `Foo::Bar::FalseAndAppPackage` must be at least `strict_dependencies 'layered'` but is currently `strict_dependencies 'false'`
     5 |  strict_dependencies 'false'
                              ^^^^^^^

foo_class.rb:14: `Foo::Bar::FalseAndAppPackage::OtherClass` resolves but its package is not imported. However, it cannot be automatically imported because importing it would cause a layering violation and its `strict_dependencies` is too low https://srb.help/3718
    14 |      Bar::FalseAndAppPackage::OtherClass # resolves via `module Foo`
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    false_and_app_package/__package.rb:4: Package `Foo::Bar::FalseAndAppPackage` must be at most layer `lib` (to match package `Foo::MyPackage`) but is currently layer `app`
     4 |  layer 'app'
                ^^^^^
    false_and_app_package/__package.rb:5: `Foo::Bar::FalseAndAppPackage` must be at least `strict_dependencies 'layered'` but is currently `strict_dependencies 'false'`
     5 |  strict_dependencies 'false'
                              ^^^^^^^

foo_class.rb:20: `Foo::Bar::OtherPackage::OtherClass` resolves but its package is not imported https://srb.help/3718
    20 |  Foo::Bar::OtherPackage::OtherClass # resolves via root
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    other/__package.rb:3: Exported from package here
     3 |class Foo::Bar::OtherPackage < PackageSpec
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Autocorrect: Done
    __package.rb:8: Inserted `import Foo::Bar::OtherPackage`
     8 |  # import Foo::Bar::OtherPackage ## MISSING!
                                                     ^

foo_class.rb:23: `Test::Foo::Bar::OtherPackage::TestUtil` is defined in a test namespace and cannot be referenced in a non-test file https://srb.help/3720
    23 |  Test::Foo::Bar::OtherPackage::TestUtil
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

foo_class.rb:25: `Foo::Bar::AppPackage::OtherClass` resolves but its package is not imported. However, it cannot be automatically imported because importing it would cause a layering violation https://srb.help/3718
    25 |  Foo::Bar::AppPackage::OtherClass # resolves via root
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    app_package/__package.rb:4: Package `Foo::Bar::AppPackage` must be at most layer `lib` (to match package `Foo::MyPackage`) but is currently layer `app`
     4 |  layer 'app'
                ^^^^^

foo_class.rb:27: `Test::Foo::Bar::AppPackage::TestUtil` is defined in a test namespace and cannot be referenced in a non-test file https://srb.help/3720
    27 |  Test::Foo::Bar::AppPackage::TestUtil
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

foo_class.rb:29: `Foo::Bar::FalsePackage::OtherClass` resolves but its package is not imported. However, it cannot be automatically imported because its `strict_dependencies` is too low https://srb.help/3718
    29 |  Foo::Bar::FalsePackage::OtherClass # resolves via root
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    false_package/__package.rb:5: `Foo::Bar::FalsePackage` must be at least `strict_dependencies 'layered'` but is currently `strict_dependencies 'false'`
     5 |  strict_dependencies 'false'
                              ^^^^^^^

foo_class.rb:31: `Test::Foo::Bar::FalsePackage::TestUtil` is defined in a test namespace and cannot be referenced in a non-test file https://srb.help/3720
    31 |  Test::Foo::Bar::FalsePackage::TestUtil
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

foo_class.rb:33: `Foo::Bar::FalseAndAppPackage::OtherClass` resolves but its package is not imported. However, it cannot be automatically imported because importing it would cause a layering violation and its `strict_dependencies` is too low https://srb.help/3718
    33 |  Foo::Bar::FalseAndAppPackage::OtherClass # resolves via root
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    false_and_app_package/__package.rb:4: Package `Foo::Bar::FalseAndAppPackage` must be at most layer `lib` (to match package `Foo::MyPackage`) but is currently layer `app`
     4 |  layer 'app'
                ^^^^^
    false_and_app_package/__package.rb:5: `Foo::Bar::FalseAndAppPackage` must be at least `strict_dependencies 'layered'` but is currently `strict_dependencies 'false'`
     5 |  strict_dependencies 'false'
                              ^^^^^^^

foo_class.rb:35: `Test::Foo::Bar::FalseAndAppPackage::TestUtil` is defined in a test namespace and cannot be referenced in a non-test file https://srb.help/3720
    35 |  Test::Foo::Bar::FalseAndAppPackage::TestUtil
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

foo.test.rb:4: `Test::Foo::Bar::OtherPackage::TestUtil` resolves but its package is not imported https://srb.help/3718
     4 |  Test::Foo::Bar::OtherPackage::TestUtil
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    other/__package.rb:3: Exported from package here
     3 |class Foo::Bar::OtherPackage < PackageSpec
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Autocorrect: Done
    __package.rb:8: Inserted `test_import Foo::Bar::OtherPackage`
     8 |  # import Foo::Bar::OtherPackage ## MISSING!
                                                     ^

foo.test.rb:6: `Foo::Bar::OtherPackage::ImportMeTestOnly` resolves but its package is not imported https://srb.help/3718
     6 |  Foo::Bar::OtherPackage::ImportMeTestOnly
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    other/__package.rb:3: Exported from package here
     3 |class Foo::Bar::OtherPackage < PackageSpec
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Autocorrect: Done
    __package.rb:8: Inserted `test_import Foo::Bar::OtherPackage`
     8 |  # import Foo::Bar::OtherPackage ## MISSING!
                                                     ^

foo.test.rb:8: `Test::Foo::Bar::AppPackage::TestUtil` resolves but its package is not imported https://srb.help/3718
     8 |  Test::Foo::Bar::AppPackage::TestUtil
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    app_package/__package.rb:3: Exported from package here
     3 |class Foo::Bar::AppPackage < PackageSpec
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Autocorrect: Done
    __package.rb:8: Inserted `test_import Foo::Bar::AppPackage`
     8 |  # import Foo::Bar::OtherPackage ## MISSING!
                                                     ^

foo.test.rb:10: `Foo::Bar::AppPackage::ImportMeTestOnly` resolves but its package is not imported https://srb.help/3718
    10 |  Foo::Bar::AppPackage::ImportMeTestOnly
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    app_package/__package.rb:3: Exported from package here
     3 |class Foo::Bar::AppPackage < PackageSpec
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Autocorrect: Done
    __package.rb:8: Inserted `test_import Foo::Bar::AppPackage`
     8 |  # import Foo::Bar::OtherPackage ## MISSING!
                                                     ^

foo.test.rb:12: `Test::Foo::Bar::FalsePackage::TestUtil` resolves but its package is not imported https://srb.help/3718
    12 |  Test::Foo::Bar::FalsePackage::TestUtil
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    false_package/__package.rb:3: Exported from package here
     3 |class Foo::Bar::FalsePackage < PackageSpec
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Autocorrect: Done
    __package.rb:8: Inserted `test_import Foo::Bar::FalsePackage`
     8 |  # import Foo::Bar::OtherPackage ## MISSING!
                                                     ^

foo.test.rb:14: `Foo::Bar::FalsePackage::ImportMeTestOnly` resolves but its package is not imported https://srb.help/3718
    14 |  Foo::Bar::FalsePackage::ImportMeTestOnly
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    false_package/__package.rb:3: Exported from package here
     3 |class Foo::Bar::FalsePackage < PackageSpec
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Autocorrect: Done
    __package.rb:8: Inserted `test_import Foo::Bar::FalsePackage`
     8 |  # import Foo::Bar::OtherPackage ## MISSING!
                                                     ^

foo.test.rb:16: `Test::Foo::Bar::FalseAndAppPackage::TestUtil` resolves but its package is not imported https://srb.help/3718
    16 |  Test::Foo::Bar::FalseAndAppPackage::TestUtil
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    false_and_app_package/__package.rb:3: Exported from package here
     3 |class Foo::Bar::FalseAndAppPackage < PackageSpec
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Autocorrect: Done
    __package.rb:8: Inserted `test_import Foo::Bar::FalseAndAppPackage`
     8 |  # import Foo::Bar::OtherPackage ## MISSING!
                                                     ^

foo.test.rb:18: `Foo::Bar::FalseAndAppPackage::ImportMeTestOnly` resolves but its package is not imported https://srb.help/3718
    18 |  Foo::Bar::FalseAndAppPackage::ImportMeTestOnly
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    false_and_app_package/__package.rb:3: Exported from package here
     3 |class Foo::Bar::FalseAndAppPackage < PackageSpec
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Autocorrect: Done
    __package.rb:8: Inserted `test_import Foo::Bar::FalseAndAppPackage`
     8 |  # import Foo::Bar::OtherPackage ## MISSING!
                                                     ^
Errors: 25

--------------------------------------------------------------------------

# frozen_string_literal: true
# typed: strict
# enable-packager: true

class Foo::MyPackage < PackageSpec
  layer 'lib'
  strict_dependencies 'layered'
  # import Foo::Bar::OtherPackage ## MISSING!
  import Foo::Bar::OtherPackage
end
