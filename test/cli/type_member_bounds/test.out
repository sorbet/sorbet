test.rb:24: The `fixed:` type bound `Child1` is lower than the `fixed:` type bound of `Parent1` for type_member `A1` https://srb.help/5053
    24 |  A1 = type_member {{fixed: Child1}}
                                    ^^^^^^
    test.rb:10: `Parent2::A1` defined in parent here
    10 |  A1 = type_member {{fixed: Parent1}}
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Note:
    Because `Parent2::A1` specified `fixed:`, `Child2::A1` must specify an equivalent type
  Autocorrect: Done
    test.rb:24: Replaced with `Parent1`
    24 |  A1 = type_member {{fixed: Child1}}
                                    ^^^^^^

test.rb:25: The `fixed:` type bound `GrandParent1` is higher than the `fixed:` type bound of `Parent1` for type_member `A2` https://srb.help/5053
    25 |  A2 = type_member {{fixed: GrandParent1}}
                                    ^^^^^^^^^^^^
    test.rb:11: `Parent2::A2` defined in parent here
    11 |  A2 = type_member {{fixed: Parent1}}
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Note:
    Because `Parent2::A2` specified `fixed:`, `Child2::A2` must specify an equivalent type
  Autocorrect: Done
    test.rb:25: Replaced with `Parent1`
    25 |  A2 = type_member {{fixed: GrandParent1}}
                                    ^^^^^^^^^^^^

test.rb:27: The `lower:` type bound `Child1` is lower than the `lower:` type bound of `Parent1` for type_member `B` https://srb.help/5053
    27 |  B = type_member {{lower: Child1}}
                                   ^^^^^^
    test.rb:13: `Parent2::B` defined in parent here
    13 |  B = type_member {{lower: Parent1}}
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Autocorrect: Done
    test.rb:27: Replaced with `Parent1`
    27 |  B = type_member {{lower: Child1}}
                                   ^^^^^^

test.rb:29: The `upper:` type bound `GrandParent1` is higher than the `upper:` type bound of `Parent1` for type_member `C` https://srb.help/5053
    29 |  C = type_member {{upper: GrandParent1}}
                                   ^^^^^^^^^^^^
    test.rb:15: `Parent2::C` defined in parent here
    15 |  C = type_member {{upper: Parent1}}
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Autocorrect: Done
    test.rb:29: Replaced with `Parent1`
    29 |  C = type_member {{upper: GrandParent1}}
                                   ^^^^^^^^^^^^

test.rb:31: The `lower:` type bound `Child1` is lower than the `fixed:` type bound of `Parent1` for type_template `D1` https://srb.help/5053
    31 |  D1 = type_template {{lower: Child1, upper: Parent1}}
                                      ^^^^^^
    test.rb:17: `T.class_of(Parent2)::D1` defined in parent here
    17 |  D1 = type_template {{fixed: Parent1}}
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Note:
    Because `T.class_of(Parent2)::D1` specified `fixed:`, `T.class_of(Child2)::D1` must specify an equivalent type
  Autocorrect: Done
    test.rb:31: Replaced with `Parent1`
    31 |  D1 = type_template {{lower: Child1, upper: Parent1}}
                                      ^^^^^^

test.rb:32: The `upper:` type bound `GrandParent1` is higher than the `fixed:` type bound of `Parent1` for type_template `D2` https://srb.help/5053
    32 |  D2 = type_template {{lower: Parent1, upper: GrandParent1}}
                                                      ^^^^^^^^^^^^
    test.rb:18: `T.class_of(Parent2)::D2` defined in parent here
    18 |  D2 = type_template {{fixed: Parent1}}
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Note:
    Because `T.class_of(Parent2)::D2` specified `fixed:`, `T.class_of(Child2)::D2` must specify an equivalent type
  Autocorrect: Done
    test.rb:32: Replaced with `Parent1`
    32 |  D2 = type_template {{lower: Parent1, upper: GrandParent1}}
                                                      ^^^^^^^^^^^^
Errors: 6

--------------------------------------------------------------------------

# typed: true

class GrandParent1; end
class Parent1 < GrandParent1; end
class Child1 < Parent1; end

class Parent2
  extend T::Generic

  A1 = type_member {{fixed: Parent1}}
  A2 = type_member {{fixed: Parent1}}

  B = type_member {{lower: Parent1}}

  C = type_member {{upper: Parent1}}

  D1 = type_template {{fixed: Parent1}}
  D2 = type_template {{fixed: Parent1}}
end

class Child2 < Parent2
  extend T::Generic

  A1 = type_member {{fixed: Parent1}}
  A2 = type_member {{fixed: Parent1}}

  B = type_member {{lower: Parent1}}

  C = type_member {{upper: Parent1}}

  D1 = type_template {{lower: Parent1, upper: Parent1}}
  D2 = type_template {{lower: Parent1, upper: Parent1}}
end

--------------------------------------------------------------------------

test.rb:24: The `fixed:` type bound `Child1` is lower than the `fixed:` type bound of `Parent1` for type_member `A1` https://srb.help/5053
    24 |  A1 = type_member {{fixed: Child1}}
                                    ^^^^^^
    test.rb:10: `Parent2::A1` defined in parent here
    10 |  A1 = type_member {{fixed: Parent1}}
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Note:
    Because `Parent2::A1` specified `fixed:`, `Child2::A1` must specify an equivalent type
  Autocorrect: Done
    test.rb:24: Replaced with `T.untyped`
    24 |  A1 = type_member {{fixed: Child1}}
                                    ^^^^^^

test.rb:25: The `fixed:` type bound `GrandParent1` is higher than the `fixed:` type bound of `Parent1` for type_member `A2` https://srb.help/5053
    25 |  A2 = type_member {{fixed: GrandParent1}}
                                    ^^^^^^^^^^^^
    test.rb:11: `Parent2::A2` defined in parent here
    11 |  A2 = type_member {{fixed: Parent1}}
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Note:
    Because `Parent2::A2` specified `fixed:`, `Child2::A2` must specify an equivalent type
  Autocorrect: Done
    test.rb:25: Replaced with `T.untyped`
    25 |  A2 = type_member {{fixed: GrandParent1}}
                                    ^^^^^^^^^^^^

test.rb:27: The `lower:` type bound `Child1` is lower than the `lower:` type bound of `Parent1` for type_member `B` https://srb.help/5053
    27 |  B = type_member {{lower: Child1}}
                                   ^^^^^^
    test.rb:13: `Parent2::B` defined in parent here
    13 |  B = type_member {{lower: Parent1}}
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Autocorrect: Done
    test.rb:27: Replaced with `T.untyped`
    27 |  B = type_member {{lower: Child1}}
                                   ^^^^^^

test.rb:29: The `upper:` type bound `GrandParent1` is higher than the `upper:` type bound of `Parent1` for type_member `C` https://srb.help/5053
    29 |  C = type_member {{upper: GrandParent1}}
                                   ^^^^^^^^^^^^
    test.rb:15: `Parent2::C` defined in parent here
    15 |  C = type_member {{upper: Parent1}}
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Autocorrect: Done
    test.rb:29: Replaced with `T.untyped`
    29 |  C = type_member {{upper: GrandParent1}}
                                   ^^^^^^^^^^^^

test.rb:31: The `lower:` type bound `Child1` is lower than the `fixed:` type bound of `Parent1` for type_template `D1` https://srb.help/5053
    31 |  D1 = type_template {{lower: Child1, upper: Parent1}}
                                      ^^^^^^
    test.rb:17: `T.class_of(Parent2)::D1` defined in parent here
    17 |  D1 = type_template {{fixed: Parent1}}
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Note:
    Because `T.class_of(Parent2)::D1` specified `fixed:`, `T.class_of(Child2)::D1` must specify an equivalent type
  Autocorrect: Done
    test.rb:31: Replaced with `T.untyped`
    31 |  D1 = type_template {{lower: Child1, upper: Parent1}}
                                      ^^^^^^

test.rb:32: The `upper:` type bound `GrandParent1` is higher than the `fixed:` type bound of `Parent1` for type_template `D2` https://srb.help/5053
    32 |  D2 = type_template {{lower: Parent1, upper: GrandParent1}}
                                                      ^^^^^^^^^^^^
    test.rb:18: `T.class_of(Parent2)::D2` defined in parent here
    18 |  D2 = type_template {{fixed: Parent1}}
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Note:
    Because `T.class_of(Parent2)::D2` specified `fixed:`, `T.class_of(Child2)::D2` must specify an equivalent type
  Autocorrect: Done
    test.rb:32: Replaced with `T.untyped`
    32 |  D2 = type_template {{lower: Parent1, upper: GrandParent1}}
                                                      ^^^^^^^^^^^^
Errors: 6

--------------------------------------------------------------------------

# typed: true

class GrandParent1; end
class Parent1 < GrandParent1; end
class Child1 < Parent1; end

class Parent2
  extend T::Generic

  A1 = type_member {{fixed: Parent1}}
  A2 = type_member {{fixed: Parent1}}

  B = type_member {{lower: Parent1}}

  C = type_member {{upper: Parent1}}

  D1 = type_template {{fixed: Parent1}}
  D2 = type_template {{fixed: Parent1}}
end

class Child2 < Parent2
  extend T::Generic

  A1 = type_member {{fixed: T.untyped}}
  A2 = type_member {{fixed: T.untyped}}

  B = type_member {{lower: T.untyped}}

  C = type_member {{upper: T.untyped}}

  D1 = type_template {{lower: T.untyped, upper: Parent1}}
  D2 = type_template {{lower: Parent1, upper: T.untyped}}
end
