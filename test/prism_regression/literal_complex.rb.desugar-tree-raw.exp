ClassDef{
  kind = class
  name = EmptyTree
  symbol = <C <U <root>>>
  ancestors = [ConstantLit{
      symbol = (class ::<todo sym>)
      orig = nullptr
    }]
  rhs = [
    Send{
      flags = {}
      recv = ConstantLit{
        symbol = (module ::Kernel)
        orig = nullptr
      }
      fun = <U Complex>
      block = nullptr
      pos_args = 2
      args = [
        Literal{ value = 0 }
        Literal{ value = "1" }
      ]
    }

    Send{
      flags = {}
      recv = Send{
        flags = {}
        recv = ConstantLit{
          symbol = (module ::Kernel)
          orig = nullptr
        }
        fun = <U Complex>
        block = nullptr
        pos_args = 2
        args = [
          Literal{ value = 0 }
          Literal{ value = "1" }
        ]
      }
      fun = <U +@>
      block = nullptr
      pos_args = 0
      args = [
      ]
    }

    Send{
      flags = {}
      recv = Send{
        flags = {}
        recv = ConstantLit{
          symbol = (module ::Kernel)
          orig = nullptr
        }
        fun = <U Complex>
        block = nullptr
        pos_args = 2
        args = [
          Literal{ value = 0 }
          Literal{ value = "1.0" }
        ]
      }
      fun = <U +@>
      block = nullptr
      pos_args = 0
      args = [
      ]
    }

    Send{
      flags = {}
      recv = Send{
        flags = {}
        recv = ConstantLit{
          symbol = (module ::Kernel)
          orig = nullptr
        }
        fun = <U Complex>
        block = nullptr
        pos_args = 2
        args = [
          Literal{ value = 0 }
          Literal{ value = "1" }
        ]
      }
      fun = <U -@>
      block = nullptr
      pos_args = 0
      args = [
      ]
    }

    Send{
      flags = {}
      recv = Send{
        flags = {}
        recv = ConstantLit{
          symbol = (module ::Kernel)
          orig = nullptr
        }
        fun = <U Complex>
        block = nullptr
        pos_args = 2
        args = [
          Literal{ value = 0 }
          Literal{ value = "1.0" }
        ]
      }
      fun = <U -@>
      block = nullptr
      pos_args = 0
      args = [
      ]
    }

    Send{
      flags = {}
      recv = Send{
        flags = {}
        recv = ConstantLit{
          symbol = (module ::Kernel)
          orig = nullptr
        }
        fun = <U Complex>
        block = nullptr
        pos_args = 2
        args = [
          Literal{ value = 0 }
          Literal{ value = "1" }
        ]
      }
      fun = <U ~>
      block = nullptr
      pos_args = 0
      args = [
      ]
    }

    Send{
      flags = {}
      recv = Send{
        flags = {}
        recv = ConstantLit{
          symbol = (module ::Kernel)
          orig = nullptr
        }
        fun = <U Complex>
        block = nullptr
        pos_args = 2
        args = [
          Literal{ value = 0 }
          Literal{ value = "1.0" }
        ]
      }
      fun = <U ~>
      block = nullptr
      pos_args = 0
      args = [
      ]
    }
  ]
}
