ClassDef{
  kind = class
  name = EmptyTree
  symbol = <C <U <root>>>
  ancestors = [ConstantLit{
      symbol = (class ::<todo sym>)
      orig = nullptr
    }]
  rhs = [
    MethodDef{
      flags = {}
      name = <U it><<U <todo method>>>
      params = [BlockParam{ expr = UnresolvedIdent{
          kind = Local
          name = <U <blk>>
        } }]
      rhs = Literal{ value = "method_value" }
    }

    Assign{
      lhs = UnresolvedIdent{
        kind = Local
        name = <U result>
      }
      rhs = Send{
        flags = {}
        recv = Array{
          elems = [
            Literal{ value = 1 }
            Literal{ value = 2 }
            Literal{ value = 3 }
          ]
        }
        fun = <U map>
        block = Block {
          params = [
            UnresolvedIdent{
              kind = Local
              name = <U it>
            }
          ]
          body = Send{
            flags = {}
            recv = UnresolvedIdent{
              kind = Local
              name = <U it>
            }
            fun = <U *>
            block = nullptr
            pos_args = 1
            args = [
              Literal{ value = 2 }
            ]
          }
        }
        pos_args = 0
        args = [
        ]
      }
    }
  ]
}
