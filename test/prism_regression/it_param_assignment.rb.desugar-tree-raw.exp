ClassDef{
  kind = class
  name = EmptyTree
  symbol = <C <U <root>>>
  ancestors = [ConstantLit{
      symbol = (class ::<todo sym>)
      orig = nullptr
    }]
  rhs = [
    Send{
      flags = {}
      recv = Array{
        elems = [
          Literal{ value = 1 }
          Literal{ value = 2 }
          Literal{ value = 3 }
        ]
      }
      fun = <U each>
      block = Block {
        params = [
          UnresolvedIdent{
            kind = Local
            name = <U it>
          }
        ]
        body = InsSeq{
          stats = [
            Assign{
              lhs = UnresolvedIdent{
                kind = Local
                name = <U x>
              }
              rhs = UnresolvedIdent{
                kind = Local
                name = <U it>
              }
            }
            Assign{
              lhs = UnresolvedIdent{
                kind = Local
                name = <U it>
              }
              rhs = Send{
                flags = {}
                recv = UnresolvedIdent{
                  kind = Local
                  name = <U x>
                }
                fun = <U +>
                block = nullptr
                pos_args = 1
                args = [
                  Literal{ value = 1 }
                ]
              }
            }
          ],
          expr = Send{
            flags = {privateOk}
            recv = Self
            fun = <U puts>
            block = nullptr
            pos_args = 1
            args = [
              UnresolvedIdent{
                kind = Local
                name = <U it>
              }
            ]
          }
        }
      }
      pos_args = 0
      args = [
      ]
    }
  ]
}
