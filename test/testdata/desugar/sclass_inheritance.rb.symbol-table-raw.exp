class <C <U <root>>> < <C <U Object>> ()
  class <S <C <U <root>>> $1>[<C <U <AttachedClass>>>] < <S <C <U Object>> $1> ()
    method <S <C <U <root>>> $1>#<N <U <static-init>> $CENSORED> (<blk>) @ Loc {file=test/testdata/desugar/sclass_inheritance.rb start=2:1 end=35:5}
      argument <blk><block> @ Loc {file=test/testdata/desugar/sclass_inheritance.rb start=??? end=???}
  class <C <U A>> < <C <U Object>> () @ Loc {file=test/testdata/desugar/sclass_inheritance.rb start=4:1 end=4:8}
  class <S <C <U A>> $1>[<C <U <AttachedClass>>>] < <S <C <U Object>> $1> (<C <U MM>>) @ Loc {file=test/testdata/desugar/sclass_inheritance.rb start=5:5 end=5:10}
    type-member(+) <S <C <U A>> $1>::<C <U <AttachedClass>>> -> LambdaParam(<S <C <U A>> $1>::<C <U <AttachedClass>>>, lower=T.noreturn, upper=A) @ Loc {file=test/testdata/desugar/sclass_inheritance.rb start=4:1 end=4:8}
    method <S <C <U A>> $1>#<U <static-init>> (<blk>) @ Loc {file=test/testdata/desugar/sclass_inheritance.rb start=4:1 end=12:4}
      argument <blk><block> @ Loc {file=test/testdata/desugar/sclass_inheritance.rb start=??? end=???}
    method <S <C <U A>> $1>#<U newer> (<blk>) @ Loc {file=test/testdata/desugar/sclass_inheritance.rb start=8:9 end=8:18}
      argument <blk><block> @ Loc {file=test/testdata/desugar/sclass_inheritance.rb start=??? end=???}
  class <S <S <C <U A>> $1> $1>[<C <U <AttachedClass>>>] < <C <U Class>> () @ Loc {file=test/testdata/desugar/sclass_inheritance.rb start=5:5 end=5:10}
    type-member(+) <S <S <C <U A>> $1> $1>::<C <U <AttachedClass>>> -> LambdaParam(<S <S <C <U A>> $1> $1>::<C <U <AttachedClass>>>, lower=T.noreturn, upper=AppliedType {   klass = <S <C <U A>> $1>   targs = [     <C <U <AttachedClass>>> = A   ] }) @ Loc {file=test/testdata/desugar/sclass_inheritance.rb start=5:5 end=5:10}
    method <S <S <C <U A>> $1> $1>#<U <static-init>> (<blk>) @ Loc {file=test/testdata/desugar/sclass_inheritance.rb start=5:5 end=11:8}
      argument <blk><block> @ Loc {file=test/testdata/desugar/sclass_inheritance.rb start=??? end=???}
  class <C <U B>> < <C <U Object>> () @ Loc {file=test/testdata/desugar/sclass_inheritance.rb start=14:1 end=14:8}
  class <S <C <U B>> $1>[<C <U <AttachedClass>>>] < <S <C <U Object>> $1> (<C <U MM>>) @ Loc {file=test/testdata/desugar/sclass_inheritance.rb start=14:1 end=14:8}
    type-member(+) <S <C <U B>> $1>::<C <U <AttachedClass>>> -> LambdaParam(<S <C <U B>> $1>::<C <U <AttachedClass>>>, lower=T.noreturn, upper=B) @ Loc {file=test/testdata/desugar/sclass_inheritance.rb start=14:1 end=14:8}
    method <S <C <U B>> $1>#<U <static-init>> (<blk>) @ Loc {file=test/testdata/desugar/sclass_inheritance.rb start=14:1 end=20:4}
      argument <blk><block> @ Loc {file=test/testdata/desugar/sclass_inheritance.rb start=??? end=???}
    method <S <C <U B>> $1>#<U newer> (<blk>) @ Loc {file=test/testdata/desugar/sclass_inheritance.rb start=17:5 end=17:19}
      argument <blk><block> @ Loc {file=test/testdata/desugar/sclass_inheritance.rb start=??? end=???}
  class <C <U C>> < <C <U A>> () @ Loc {file=test/testdata/desugar/sclass_inheritance.rb start=22:1 end=22:12}
  class <S <C <U C>> $1>[<C <U <AttachedClass>>>] < <S <C <U A>> $1> () @ Loc {file=test/testdata/desugar/sclass_inheritance.rb start=23:4 end=23:9}
    type-member(+) <S <C <U C>> $1>::<C <U <AttachedClass>>> -> LambdaParam(<S <C <U C>> $1>::<C <U <AttachedClass>>>, lower=T.noreturn, upper=C) @ Loc {file=test/testdata/desugar/sclass_inheritance.rb start=22:1 end=22:12}
    method <S <C <U C>> $1>#<U <static-init>> (<blk>) @ Loc {file=test/testdata/desugar/sclass_inheritance.rb start=22:1 end=28:4}
      argument <blk><block> @ Loc {file=test/testdata/desugar/sclass_inheritance.rb start=??? end=???}
    method <S <C <U C>> $1>#<U newerer> (<blk>) @ Loc {file=test/testdata/desugar/sclass_inheritance.rb start=24:7 end=24:18}
      argument <blk><block> @ Loc {file=test/testdata/desugar/sclass_inheritance.rb start=??? end=???}
  class <S <S <C <U C>> $1> $1>[<C <U <AttachedClass>>>] < <S <S <C <U A>> $1> $1> () @ Loc {file=test/testdata/desugar/sclass_inheritance.rb start=23:4 end=23:9}
    type-member(+) <S <S <C <U C>> $1> $1>::<C <U <AttachedClass>>> -> LambdaParam(<S <S <C <U C>> $1> $1>::<C <U <AttachedClass>>>, lower=T.noreturn, upper=AppliedType {   klass = <S <C <U C>> $1>   targs = [     <C <U <AttachedClass>>> = C   ] }) @ Loc {file=test/testdata/desugar/sclass_inheritance.rb start=23:4 end=23:9}
    method <S <S <C <U C>> $1> $1>#<U <static-init>> (<blk>) @ Loc {file=test/testdata/desugar/sclass_inheritance.rb start=23:4 end=27:7}
      argument <blk><block> @ Loc {file=test/testdata/desugar/sclass_inheritance.rb start=??? end=???}
  module <C <U MM>> < <C <U Sorbet>>::<C <U Private>>::<C <U Static>>::<C <U ImplicitModuleSuperclass>> () @ Loc {file=test/testdata/desugar/sclass_inheritance.rb start=2:1 end=2:10}
  class <S <C <U MM>> $1> < <C <U Module>> () @ Loc {file=test/testdata/desugar/sclass_inheritance.rb start=2:1 end=2:10}
    method <S <C <U MM>> $1>#<U <static-init>> (<blk>) @ Loc {file=test/testdata/desugar/sclass_inheritance.rb start=2:1 end=2:15}
      argument <blk><block> @ Loc {file=test/testdata/desugar/sclass_inheritance.rb start=??? end=???}
  class <C <U Object>> < <C <U BasicObject>> (<C <U Object>>, <C <U Kernel>>) @ (Loc {file=https://github.com/sorbet/sorbet/tree/master/rbi/stdlib/json.rbi start=removed end=removed}, Loc {file=https://github.com/sorbet/sorbet/tree/master/rbi/core/object.rbi start=removed end=removed})
    method <C <U Object>>#<U main> : private (<blk>) @ Loc {file=test/testdata/desugar/sclass_inheritance.rb start=30:1 end=30:9}
      argument <blk><block> @ Loc {file=test/testdata/desugar/sclass_inheritance.rb start=??? end=???}

