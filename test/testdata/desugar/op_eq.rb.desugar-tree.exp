class <emptyTree><<C <root>>> < (::<todo sym>)
  class <emptyTree>::<C OpEq><<C <todo sym>>> < (::<todo sym>)
    def b<<todo method>>(&<blk>)
      <emptyTree>
    end

    def b=<<todo method>>(_, &<blk>)
      <emptyTree>
    end

    def y<<todo method>>(&<blk>)
      <emptyTree>
    end

    def z<<todo method>>(&<blk>)
      <emptyTree>
    end

    def example<<todo method>>(a, &<blk>)
      begin
        begin
          a$2 = a
          if a$2
            a$2 = :a
          else
            <emptyTree>
          end
          a = a$2
        end
        begin
          b$3 = <self>
          b$4 = b$3.b()
          if b$4
            b$3.b=(:b)
          else
            b$4
          end
        end
        begin
          []$5 = a
          []$6 = <self>.y()
          []$7 = <self>.z()
          []$8 = []$5.[]([]$6, []$7)
          if []$8
            []$5.[]=([]$6, []$7, 1)
          else
            []$8
          end
        end
        begin
          a$9 = a
          if a$9
            <emptyTree>
          else
            begin
              a$10 = :a
              a$9 = a$10
              a$9
            end
          end
          a = a$9
        end
        begin
          b$11 = <self>
          b$12 = b$11.b()
          if b$12
            b$12
          else
            b$11.b=(:b)
          end
        end
        begin
          []$13 = a
          []$14 = <self>.y()
          []$15 = <self>.z()
          []$16 = []$13.[]([]$14, []$15)
          if []$16
            []$16
          else
            []$13.[]=([]$14, []$15, 1)
          end
        end
      end
    end
  end
end
