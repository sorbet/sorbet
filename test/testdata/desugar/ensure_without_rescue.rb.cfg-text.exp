method ::Object#main {

bb0[rubyRegionId=0, firstDead=-1]():
    <self>: Object = cast(<self>: NilClass, Object);
    <magic>$5: T.class_of(<Magic>) = alias <C <Magic>>
    <exceptionValue>$3: T.nilable(Exception) = <get-current-exception>
    <exceptionValue>$3 -> (T.nilable(Exception) ? bb3 : bb4)

# backedges
# - bb6(rubyRegionId=3)
# - bb7(rubyRegionId=0)
bb1[rubyRegionId=0, firstDead=-1]():
    <unconditional> -> bb1

# backedges
# - bb0(rubyRegionId=0)
# - bb4(rubyRegionId=1)
bb3[rubyRegionId=2, firstDead=-1](<self>: Object, <returnMethodTemp>$2: T.untyped):
    <gotoDeadTemp>$6: TrueClass = true
    <unconditional> -> bb6

# backedges
# - bb0(rubyRegionId=0)
bb4[rubyRegionId=1, firstDead=-1](<self>: Object):
    <returnMethodTemp>$2: T.untyped = <self>: Object.a()
    <exceptionValue>$3: T.nilable(Exception) = <get-current-exception>
    <exceptionValue>$3 -> (T.nilable(Exception) ? bb3 : bb5)

# backedges
# - bb4(rubyRegionId=1)
bb5[rubyRegionId=4, firstDead=-1](<self>: Object, <returnMethodTemp>$2: T.untyped):
    <unconditional> -> bb6

# backedges
# - bb3(rubyRegionId=2)
# - bb5(rubyRegionId=4)
bb6[rubyRegionId=3, firstDead=-1](<self>: Object, <returnMethodTemp>$2: T.untyped, <gotoDeadTemp>$6: T.nilable(TrueClass)):
    <throwAwayTemp>$7: T.untyped = <self>: Object.b()
    <gotoDeadTemp>$6 -> (T.nilable(TrueClass) ? bb1 : bb7)

# backedges
# - bb6(rubyRegionId=3)
bb7[rubyRegionId=0, firstDead=1](<returnMethodTemp>$2: T.untyped):
    <finalReturn>: T.noreturn = return <returnMethodTemp>$2: T.untyped
    <unconditional> -> bb1

}

method ::Object#a {

bb0[rubyRegionId=0, firstDead=2]():
    <self>: Object = cast(<self>: NilClass, Object);
    <finalReturn>: T.noreturn = return <returnMethodTemp>$2: NilClass
    <unconditional> -> bb1

# backedges
# - bb0(rubyRegionId=0)
bb1[rubyRegionId=0, firstDead=-1]():
    <unconditional> -> bb1

}

method ::Object#b {

bb0[rubyRegionId=0, firstDead=2]():
    <self>: Object = cast(<self>: NilClass, Object);
    <finalReturn>: T.noreturn = return <returnMethodTemp>$2: NilClass
    <unconditional> -> bb1

# backedges
# - bb0(rubyRegionId=0)
bb1[rubyRegionId=0, firstDead=-1]():
    <unconditional> -> bb1

}

method ::<Class:<root>>#<static-init> {

bb0[rubyRegionId=0, firstDead=3]():
    <self>: T.class_of(<root>) = cast(<self>: NilClass, T.class_of(<root>));
    <statTemp>$6: T.untyped = <self>: T.class_of(<root>).main()
    <finalReturn>: T.noreturn = return <returnMethodTemp>$2: NilClass
    <unconditional> -> bb1

# backedges
# - bb0(rubyRegionId=0)
bb1[rubyRegionId=0, firstDead=-1]():
    <unconditional> -> bb1

}

