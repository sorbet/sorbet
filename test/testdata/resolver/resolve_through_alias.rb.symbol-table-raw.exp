class <C <U <root>>> < <C <U Object>> ()
  class <S <C <U <root>>> $1>[<C <U <AttachedClass>>>] < <S <C <U Object>> $1> ()
    method <S <C <U <root>>> $1>#<N <U <static-init>> $CENSORED> (<blk>) @ Loc {file=test/testdata/resolver/resolve_through_alias.rb start=3:1 end=11:4}
      argument <blk><block> @ Loc {file=test/testdata/resolver/resolve_through_alias.rb start=??? end=???}
  class <C <U A>> < <C <U Object>> () @ Loc {file=test/testdata/resolver/resolve_through_alias.rb start=8:1 end=8:8}
    static-field <C <U A>>::<C <U N>> -> AliasType { symbol = <C <U NS>> } @ Loc {file=test/testdata/resolver/resolve_through_alias.rb start=9:3 end=9:4}
  class <S <C <U A>> $1>[<C <U <AttachedClass>>>] < <S <C <U Object>> $1> () @ Loc {file=test/testdata/resolver/resolve_through_alias.rb start=8:1 end=8:8}
    type-member(+) <S <C <U A>> $1>::<C <U <AttachedClass>>> -> LambdaParam(<S <C <U A>> $1>::<C <U <AttachedClass>>>, lower=T.noreturn, upper=A) @ Loc {file=test/testdata/resolver/resolve_through_alias.rb start=8:1 end=8:8}
    method <S <C <U A>> $1>#<U <static-init>> (<blk>) @ Loc {file=test/testdata/resolver/resolve_through_alias.rb start=8:1 end=11:4}
      argument <blk><block> @ Loc {file=test/testdata/resolver/resolve_through_alias.rb start=??? end=???}
  module <C <U NS>> < <C <U Sorbet>>::<C <U Private>>::<C <U Static>>::<C <U ImplicitModuleSuperclass>> () @ Loc {file=test/testdata/resolver/resolve_through_alias.rb start=3:1 end=3:10}
    module <C <U NS>>::<C <U Inner>> < <C <U Sorbet>>::<C <U Private>>::<C <U Static>>::<C <U ImplicitModuleSuperclass>> () @ Loc {file=test/testdata/resolver/resolve_through_alias.rb start=4:3 end=4:15}
    class <C <U NS>>::<S <C <U Inner>> $1> < <C <U Module>> () @ Loc {file=test/testdata/resolver/resolve_through_alias.rb start=4:3 end=4:15}
      method <C <U NS>>::<S <C <U Inner>> $1>#<U <static-init>> (<blk>) @ Loc {file=test/testdata/resolver/resolve_through_alias.rb start=4:3 end=5:6}
        argument <blk><block> @ Loc {file=test/testdata/resolver/resolve_through_alias.rb start=??? end=???}
  class <S <C <U NS>> $1> < <C <U Module>> () @ Loc {file=test/testdata/resolver/resolve_through_alias.rb start=3:1 end=3:10}
    method <S <C <U NS>> $1>#<U <static-init>> (<blk>) @ Loc {file=test/testdata/resolver/resolve_through_alias.rb start=3:1 end=6:4}
      argument <blk><block> @ Loc {file=test/testdata/resolver/resolve_through_alias.rb start=??? end=???}

