class <C <U <root>>> < <C <U Object>> ()
  class <S <C <U <root>>> $1>[<C <U <AttachedClass>>>] < <S <C <U Object>> $1> ()
    method <S <C <U <root>>> $1>#<N <U <static-init>> $CENSORED> (<blk>) @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=2:1 end=67:4}
      argument <blk><block> @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=??? end=???}
  module <C <U Bad1>> < <C <U Sorbet>>::<C <U Private>>::<C <U Static>>::<C <U ImplicitModuleSuperclass>> () @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=25:1 end=25:12}
  class <S <C <U Bad1>> $1> < <C <U Module>> (<C <U Helpers>>, <C <U Sig>>) @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=25:1 end=25:12}
    method <S <C <U Bad1>> $1>#<U <static-init>> (<blk>) @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=25:1 end=29:4}
      argument <blk><block> @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=??? end=???}
  class <C <U Bad2>> < <C <U Object>> () @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=31:1 end=31:11}
    module <C <U Bad2>>::<C <U ClassMethods>> < <C <U Sorbet>>::<C <U Private>>::<C <U Static>>::<C <U ImplicitModuleSuperclass>> () @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=34:3 end=34:22}
    class <C <U Bad2>>::<S <C <U ClassMethods>> $1> < <C <U Module>> () @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=34:3 end=34:22}
      method <C <U Bad2>>::<S <C <U ClassMethods>> $1>#<U <static-init>> (<blk>) @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=34:3 end=34:27}
        argument <blk><block> @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=??? end=???}
  class <S <C <U Bad2>> $1>[<C <U <AttachedClass>>>] < <S <C <U Object>> $1> (<C <U Helpers>>, <C <U Sig>>) @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=31:1 end=31:11}
    type-member(+) <S <C <U Bad2>> $1>::<C <U <AttachedClass>>> -> LambdaParam(<S <C <U Bad2>> $1>::<C <U <AttachedClass>>>, lower=T.noreturn, upper=Bad2) @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=31:1 end=31:11}
    method <S <C <U Bad2>> $1>#<U <static-init>> (<blk>) @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=31:1 end=36:4}
      argument <blk><block> @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=??? end=???}
  module <C <U Bad3>> < <C <U Sorbet>>::<C <U Private>>::<C <U Static>>::<C <U ImplicitModuleSuperclass>> () @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=38:1 end=38:12}
    class <C <U Bad3>>::<C <U ClassMethods>> < <C <U Object>> () @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=42:3 end=42:21}
    class <C <U Bad3>>::<S <C <U ClassMethods>> $1>[<C <U <AttachedClass>>>] < <S <C <U Object>> $1> () @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=42:3 end=42:21}
      type-member(+) <C <U Bad3>>::<S <C <U ClassMethods>> $1>::<C <U <AttachedClass>>> -> LambdaParam(<C <U Bad3>>::<S <C <U ClassMethods>> $1>::<C <U <AttachedClass>>>, lower=T.noreturn, upper=Bad3::ClassMethods) @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=42:3 end=42:21}
      method <C <U Bad3>>::<S <C <U ClassMethods>> $1>#<U <static-init>> (<blk>) @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=42:3 end=42:26}
        argument <blk><block> @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=??? end=???}
  class <S <C <U Bad3>> $1> < <C <U Module>> (<C <U Helpers>>, <C <U Sig>>) @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=38:1 end=38:12}
    method <S <C <U Bad3>> $1>#<U <static-init>> (<blk>) @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=38:1 end=44:4}
      argument <blk><block> @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=??? end=???}
  module <C <U Bad4>> < <C <U Sorbet>>::<C <U Private>>::<C <U Static>>::<C <U ImplicitModuleSuperclass>> () @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=46:1 end=46:12}
  class <S <C <U Bad4>> $1> < <C <U Module>> (<C <U Helpers>>, <C <U Sig>>) @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=46:1 end=46:12}
    method <S <C <U Bad4>> $1>#<U <static-init>> (<blk>) @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=46:1 end=52:4}
      argument <blk><block> @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=??? end=???}
  module <C <U Bad5>> < <C <U Sorbet>>::<C <U Private>>::<C <U Static>>::<C <U ImplicitModuleSuperclass>> () @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=54:1 end=54:12}
    static-field <C <U Bad5>>::<C <U RUBY_CONSTANT>> -> Integer @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=58:3 end=58:16}
  class <S <C <U Bad5>> $1> < <C <U Module>> (<C <U Helpers>>, <C <U Sig>>) @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=54:1 end=54:12}
    method <S <C <U Bad5>> $1>#<U <static-init>> (<blk>) @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=54:1 end=61:4}
      argument <blk><block> @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=??? end=???}
  module <C <U Bad6>> < <C <U Sorbet>>::<C <U Private>>::<C <U Static>>::<C <U ImplicitModuleSuperclass>> () @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=63:1 end=63:12}
  class <S <C <U Bad6>> $1> < <C <U Module>> (<C <U Helpers>>, <C <U Sig>>) @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=63:1 end=63:12}
    method <S <C <U Bad6>> $1>#<U <static-init>> (<blk>) @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=63:1 end=67:4}
      argument <blk><block> @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=??? end=???}
  module <C <U Mixin>> < <C <U Sorbet>>::<C <U Private>>::<C <U Static>>::<C <U ImplicitModuleSuperclass>> () @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=2:1 end=2:13}
    module <C <U Mixin>>::<C <U ClassMethods>> < <C <U Sorbet>>::<C <U Private>>::<C <U Static>>::<C <U ImplicitModuleSuperclass>> () @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=6:3 end=6:22}
      method <C <U Mixin>>::<C <U ClassMethods>>#<U mixin_class_method> (<blk>) @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=7:5 end=7:27}
        argument <blk><block> @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=??? end=???}
    class <C <U Mixin>>::<S <C <U ClassMethods>> $1> < <C <U Module>> () @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=6:3 end=6:22}
      method <C <U Mixin>>::<S <C <U ClassMethods>> $1>#<U <static-init>> (<blk>) @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=6:3 end=9:6}
        argument <blk><block> @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=??? end=???}
    method <C <U Mixin>>#<U mixin_method> (<blk>) @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=13:3 end=13:19}
      argument <blk><block> @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=??? end=???}
  class <S <C <U Mixin>> $1> < <C <U Module>> (<C <U Helpers>>, <C <U Sig>>) @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=2:1 end=2:13}
    method <S <C <U Mixin>> $1>#<U <static-init>> (<blk>) @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=2:1 end=15:4}
      argument <blk><block> @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=??? end=???}
  class <C <U Test>> < <C <U Object>> (<C <U Mixin>>) @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=17:1 end=17:11}
  class <S <C <U Test>> $1>[<C <U <AttachedClass>>>] < <S <C <U Object>> $1> (<C <U ClassMethods>>) @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=17:1 end=17:11}
    type-member(+) <S <C <U Test>> $1>::<C <U <AttachedClass>>> -> LambdaParam(<S <C <U Test>> $1>::<C <U <AttachedClass>>>, lower=T.noreturn, upper=Test) @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=17:1 end=17:11}
    method <S <C <U Test>> $1>#<U <static-init>> (<blk>) @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=17:1 end=19:4}
      argument <blk><block> @ Loc {file=test/testdata/resolver/mixes_in_class_methods.rb start=??? end=???}

