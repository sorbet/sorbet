class <C <U <root>>> < <C <U Object>> ()
  class <S <C <U <root>>> $1>[<C <U <AttachedClass>>>] < <S <C <U Object>> $1> ()
    method <S <C <U <root>>> $1>#<N <U <static-init>> $CENSORED> (<blk>) @ Loc {file=test/testdata/resolver/stub_missing_class_alias.rb start=4:1 end=22:4}
      argument <blk><block> @ Loc {file=test/testdata/resolver/stub_missing_class_alias.rb start=??? end=???}
  module <C <U O>> < <C <U Sorbet>>::<C <U Private>>::<C <U Static>>::<C <U ImplicitModuleSuperclass>> () @ Loc {file=test/testdata/resolver/stub_missing_class_alias.rb start=4:7 end=4:8}
    class <C <U O>>::<C <U B>> < <C <U Object>> () @ Loc {file=test/testdata/resolver/stub_missing_class_alias.rb start=4:1 end=4:11}
      static-field <C <U O>>::<C <U B>>::<C <U Doc1>> -> Integer @ Loc {file=test/testdata/resolver/stub_missing_class_alias.rb start=9:3 end=9:7}
      static-field <C <U O>>::<C <U B>>::<C <U Document>> -> AliasType { symbol = <C <U Sorbet>>::<C <U Private>>::<C <U Static>>::<C <U <StubModule>>> } @ Loc {file=test/testdata/resolver/stub_missing_class_alias.rb start=8:3 end=8:11}
      class <C <U O>>::<C <U B>>::<C <U J>> < <C <U Object>> () @ Loc {file=test/testdata/resolver/stub_missing_class_alias.rb start=5:3 end=5:10}
      class <C <U O>>::<C <U B>>::<S <C <U J>> $1>[<C <U <AttachedClass>>>] < <S <C <U Object>> $1> () @ Loc {file=test/testdata/resolver/stub_missing_class_alias.rb start=5:3 end=5:10}
        type-member(+) <C <U O>>::<C <U B>>::<S <C <U J>> $1>::<C <U <AttachedClass>>> -> LambdaParam(<C <U O>>::<C <U B>>::<S <C <U J>> $1>::<C <U <AttachedClass>>>, lower=T.noreturn, upper=O::B::J) @ Loc {file=test/testdata/resolver/stub_missing_class_alias.rb start=5:3 end=5:10}
        method <C <U O>>::<C <U B>>::<S <C <U J>> $1>#<U <static-init>> (<blk>) @ Loc {file=test/testdata/resolver/stub_missing_class_alias.rb start=5:3 end=6:6}
          argument <blk><block> @ Loc {file=test/testdata/resolver/stub_missing_class_alias.rb start=??? end=???}
    class <C <U O>>::<S <C <U B>> $1>[<C <U <AttachedClass>>>] < <S <C <U Object>> $1> (<C <U Sig>>) @ Loc {file=test/testdata/resolver/stub_missing_class_alias.rb start=4:1 end=4:11}
      type-member(+) <C <U O>>::<S <C <U B>> $1>::<C <U <AttachedClass>>> -> LambdaParam(<C <U O>>::<S <C <U B>> $1>::<C <U <AttachedClass>>>, lower=T.noreturn, upper=O::B) @ Loc {file=test/testdata/resolver/stub_missing_class_alias.rb start=4:1 end=4:11}
      method <C <U O>>::<S <C <U B>> $1>#<U <static-init>> (<blk>) @ Loc {file=test/testdata/resolver/stub_missing_class_alias.rb start=4:1 end=22:4}
        argument <blk><block> @ Loc {file=test/testdata/resolver/stub_missing_class_alias.rb start=??? end=???}
      method <C <U O>>::<S <C <U B>> $1>#<U foo> (arg0, arg1, <blk>) -> Sorbet::Private::Static::Void @ Loc {file=test/testdata/resolver/stub_missing_class_alias.rb start=21:3 end=21:27}
        argument arg0<> -> O::B::Document::J (unresolved) @ Loc {file=test/testdata/resolver/stub_missing_class_alias.rb start=16:7 end=16:11}
        argument arg1<> -> O::B::Doc1::J (unresolved) @ Loc {file=test/testdata/resolver/stub_missing_class_alias.rb start=17:7 end=17:11}
        argument <blk><block> -> T.untyped @ Loc {file=test/testdata/resolver/stub_missing_class_alias.rb start=??? end=???}
  class <S <C <U O>> $1> < <C <U Module>> () @ Loc {file=test/testdata/resolver/stub_missing_class_alias.rb start=4:7 end=4:8}

