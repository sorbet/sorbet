class <C <U <root>>> < <C <U Object>> ()
  class <S <C <U <root>>> $1>[<C <U <AttachedClass>>>] < <S <C <U Object>> $1> ()
    method <S <C <U <root>>> $1>#<N <U <static-init>> $CENSORED> (<blk>) @ Loc {file=test/testdata/resolver/sig_misc.rb start=2:1 end=115:4}
      argument <blk><block> @ Loc {file=test/testdata/resolver/sig_misc.rb start=??? end=???}
  class <C <U A>> < <C <U Object>> () @ Loc {file=test/testdata/resolver/sig_misc.rb start=5:1 end=5:8}
    method <C <U A>>#<U f1> (x, <blk>) -> T1 @ Loc {file=test/testdata/resolver/sig_misc.rb start=29:3 end=29:12}
      argument x<> -> T.untyped @ Loc {file=test/testdata/resolver/sig_misc.rb start=29:10 end=29:11}
      argument <blk><block> -> T.untyped @ Loc {file=test/testdata/resolver/sig_misc.rb start=??? end=???}
    method <C <U A>>#<U f2> (x, <blk>) -> T2 @ Loc {file=test/testdata/resolver/sig_misc.rb start=34:3 end=34:12}
      argument x<> -> T1 @ Loc {file=test/testdata/resolver/sig_misc.rb start=33:17 end=33:18}
      argument <blk><block> -> T.untyped @ Loc {file=test/testdata/resolver/sig_misc.rb start=??? end=???}
    method <C <U A>>#<U f3> (<blk>) -> T1 @ Loc {file=test/testdata/resolver/sig_misc.rb start=39:3 end=39:9}
      argument <blk><block> -> T.untyped @ Loc {file=test/testdata/resolver/sig_misc.rb start=??? end=???}
    method <C <U A>>#<U f4> (y, <blk>) -> T1 @ Loc {file=test/testdata/resolver/sig_misc.rb start=65:3 end=65:12}
      argument y<> -> T1 @ Loc {file=test/testdata/resolver/sig_misc.rb start=64:15 end=64:16}
      argument <blk><block> -> T.untyped @ Loc {file=test/testdata/resolver/sig_misc.rb start=??? end=???}
    method <C <U A>>#<U no_params> (<blk>) -> T1 @ Loc {file=test/testdata/resolver/sig_misc.rb start=14:3 end=14:16}
      argument <blk><block> -> T.untyped @ Loc {file=test/testdata/resolver/sig_misc.rb start=??? end=???}
    method <C <U A>>#<U noreturn> (<blk>) -> T.noreturn @ Loc {file=test/testdata/resolver/sig_misc.rb start=9:3 end=9:15}
      argument <blk><block> -> T.untyped @ Loc {file=test/testdata/resolver/sig_misc.rb start=??? end=???}
    method <C <U A>>#<U private> : private (x, <blk>) -> T1 @ Loc {file=test/testdata/resolver/sig_misc.rb start=44:11 end=44:25}
      argument x<> -> T1 @ Loc {file=test/testdata/resolver/sig_misc.rb start=43:15 end=43:16}
      argument <blk><block> -> T.untyped @ Loc {file=test/testdata/resolver/sig_misc.rb start=??? end=???}
    method <C <U A>>#<U protected> : protected (x, <blk>) -> T1 @ Loc {file=test/testdata/resolver/sig_misc.rb start=49:13 end=49:29}
      argument x<> -> T1 @ Loc {file=test/testdata/resolver/sig_misc.rb start=48:15 end=48:16}
      argument <blk><block> -> T.untyped @ Loc {file=test/testdata/resolver/sig_misc.rb start=??? end=???}
    method <C <U A>>#<U public> (x, <blk>) -> T1 @ Loc {file=test/testdata/resolver/sig_misc.rb start=54:10 end=54:23}
      argument x<> -> T1 @ Loc {file=test/testdata/resolver/sig_misc.rb start=53:15 end=53:16}
      argument <blk><block> -> T.untyped @ Loc {file=test/testdata/resolver/sig_misc.rb start=??? end=???}
    method <C <U A>>#<U test_abstract> : abstract (<blk>) -> T1 @ Loc {file=test/testdata/resolver/sig_misc.rb start=77:3 end=77:20}
      argument <blk><block> -> T.untyped @ Loc {file=test/testdata/resolver/sig_misc.rb start=??? end=???}
    method <C <U A>>#<U test_abstract_untyped> : abstract (<blk>) @ Loc {file=test/testdata/resolver/sig_misc.rb start=102:3 end=102:28}
      argument <blk><block> -> T.untyped @ Loc {file=test/testdata/resolver/sig_misc.rb start=??? end=???}
    method <C <U A>>#<U test_implementation> : override (x, <blk>) -> Sorbet::Private::Static::Void @ Loc {file=test/testdata/resolver/sig_misc.rb start=82:3 end=82:29}
      argument x<> -> T.untyped @ Loc {file=test/testdata/resolver/sig_misc.rb start=82:27 end=82:28}
      argument <blk><block> -> T.untyped @ Loc {file=test/testdata/resolver/sig_misc.rb start=??? end=???}
    method <C <U A>>#<U test_junk_again> (<blk>) -> Sorbet::Private::Static::Void @ Loc {file=test/testdata/resolver/sig_misc.rb start=111:17 end=111:36}
      argument <blk><block> -> T.untyped @ Loc {file=test/testdata/resolver/sig_misc.rb start=??? end=???}
    method <C <U A>>#<U test_junk_inside> (<blk>) -> Sorbet::Private::Static::Void @ Loc {file=test/testdata/resolver/sig_misc.rb start=108:19 end=108:39}
      argument <blk><block> -> T.untyped @ Loc {file=test/testdata/resolver/sig_misc.rb start=??? end=???}
    method <C <U A>>#<U test_kwargs> (returns, <blk>) -> T2 @ Loc {file=test/testdata/resolver/sig_misc.rb start=22:3 end=22:27}
      argument returns<> -> T1 @ Loc {file=test/testdata/resolver/sig_misc.rb start=19:12 end=19:19}
      argument <blk><block> -> T.untyped @ Loc {file=test/testdata/resolver/sig_misc.rb start=??? end=???}
    method <C <U A>>#<U test_overridable> : overridable (<blk>) -> T1 @ Loc {file=test/testdata/resolver/sig_misc.rb start=92:3 end=92:23}
      argument <blk><block> -> T.untyped @ Loc {file=test/testdata/resolver/sig_misc.rb start=??? end=???}
    method <C <U A>>#<U test_overridable_implementation> : overridable|override (<blk>) -> T1 @ Loc {file=test/testdata/resolver/sig_misc.rb start=97:3 end=97:38}
      argument <blk><block> -> T.untyped @ Loc {file=test/testdata/resolver/sig_misc.rb start=??? end=???}
    method <C <U A>>#<U test_override> : override (<blk>) -> T1 @ Loc {file=test/testdata/resolver/sig_misc.rb start=87:3 end=87:20}
      argument <blk><block> -> T.untyped @ Loc {file=test/testdata/resolver/sig_misc.rb start=??? end=???}
    method <C <U A>>#<U test_standard_untyped> (<blk>) @ Loc {file=test/testdata/resolver/sig_misc.rb start=105:11 end=105:36}
      argument <blk><block> -> T.untyped @ Loc {file=test/testdata/resolver/sig_misc.rb start=??? end=???}
    method <C <U A>>#<U test_yield_no_block_type> (x, <blk>) -> Integer @ Loc {file=test/testdata/resolver/sig_misc.rb start=70:3 end=70:34}
      argument x<> -> Integer @ Loc {file=test/testdata/resolver/sig_misc.rb start=69:15 end=69:16}
      argument <blk><block> -> T.untyped @ Loc {file=test/testdata/resolver/sig_misc.rb start=??? end=???}
  class <S <C <U A>> $1>[<C <U <AttachedClass>>>] < <S <C <U Object>> $1> (<C <U Helpers>>, <C <U Sig>>) @ Loc {file=test/testdata/resolver/sig_misc.rb start=5:1 end=5:8}
    type-member(+) <S <C <U A>> $1>::<C <U <AttachedClass>>> -> LambdaParam(<S <C <U A>> $1>::<C <U <AttachedClass>>>, lower=T.noreturn, upper=A) @ Loc {file=test/testdata/resolver/sig_misc.rb start=5:1 end=5:8}
    method <S <C <U A>> $1>#<U <static-init>> (<blk>) @ Loc {file=test/testdata/resolver/sig_misc.rb start=5:1 end=115:4}
      argument <blk><block> @ Loc {file=test/testdata/resolver/sig_misc.rb start=??? end=???}
    method <S <C <U A>> $1>#<U static> : private (x, <blk>) -> T1 @ Loc {file=test/testdata/resolver/sig_misc.rb start=59:24 end=59:42}
      argument x<> -> T1 @ Loc {file=test/testdata/resolver/sig_misc.rb start=58:15 end=58:16}
      argument <blk><block> -> T.untyped @ Loc {file=test/testdata/resolver/sig_misc.rb start=??? end=???}
  class <C <U T1>> < <C <U Object>> () @ Loc {file=test/testdata/resolver/sig_misc.rb start=2:1 end=2:9}
  class <S <C <U T1>> $1>[<C <U <AttachedClass>>>] < <S <C <U Object>> $1> () @ Loc {file=test/testdata/resolver/sig_misc.rb start=2:1 end=2:9}
    type-member(+) <S <C <U T1>> $1>::<C <U <AttachedClass>>> -> LambdaParam(<S <C <U T1>> $1>::<C <U <AttachedClass>>>, lower=T.noreturn, upper=T1) @ Loc {file=test/testdata/resolver/sig_misc.rb start=2:1 end=2:9}
    method <S <C <U T1>> $1>#<U <static-init>> (<blk>) @ Loc {file=test/testdata/resolver/sig_misc.rb start=2:1 end=2:14}
      argument <blk><block> @ Loc {file=test/testdata/resolver/sig_misc.rb start=??? end=???}
  class <C <U T2>> < <C <U Object>> () @ Loc {file=test/testdata/resolver/sig_misc.rb start=3:1 end=3:9}
  class <S <C <U T2>> $1>[<C <U <AttachedClass>>>] < <S <C <U Object>> $1> () @ Loc {file=test/testdata/resolver/sig_misc.rb start=3:1 end=3:9}
    type-member(+) <S <C <U T2>> $1>::<C <U <AttachedClass>>> -> LambdaParam(<S <C <U T2>> $1>::<C <U <AttachedClass>>>, lower=T.noreturn, upper=T2) @ Loc {file=test/testdata/resolver/sig_misc.rb start=3:1 end=3:9}
    method <S <C <U T2>> $1>#<U <static-init>> (<blk>) @ Loc {file=test/testdata/resolver/sig_misc.rb start=3:1 end=3:14}
      argument <blk><block> @ Loc {file=test/testdata/resolver/sig_misc.rb start=??? end=???}

