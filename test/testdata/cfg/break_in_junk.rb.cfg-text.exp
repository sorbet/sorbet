method ::Object#foo {

bb0[rubyRegionId=0, firstDead=-1]():
    <self>: Object = cast(<self>: NilClass, Object);
    <returnTemp>$3: Integer(5) = 5
    <block-break-assign>$4: Integer(5) = <returnTemp>$3
    <magic>$5: T.class_of(<Magic>) = alias <C <Magic>>
    <block-break>$6: T.untyped = <magic>$5: T.class_of(<Magic>).<block-break>(<returnTemp>$3: Integer(5))
    <unconditional> -> bb1

# backedges
# - bb0(rubyRegionId=0)
bb1[rubyRegionId=0, firstDead=-1]():
    <finalReturn> = return <returnMethodTemp>$2
    <unconditional> -> bb1

}

method ::<Class:<root>>#<static-init> {

bb0[rubyRegionId=0, firstDead=3]():
    <self>: T.class_of(<root>) = cast(<self>: NilClass, T.class_of(<root>));
    <returnMethodTemp>$2: Symbol(:foo) = :foo
    <finalReturn>: T.noreturn = return <returnMethodTemp>$2: Symbol(:foo)
    <unconditional> -> bb1

# backedges
# - bb0(rubyRegionId=0)
bb1[rubyRegionId=0, firstDead=-1]():
    <unconditional> -> bb1

}

