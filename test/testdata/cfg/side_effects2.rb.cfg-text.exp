method ::<Class:<root>>#<static-init> {

bb0[rubyRegionId=0, firstDead=5]():
    <self>: T.class_of(<root>) = cast(<self>: NilClass, T.class_of(<root>));
    <cfgAlias>$6: T.class_of(Sorbet::Private::Static) = alias <C Static>
    <cfgAlias>$8: T.class_of(Side) = alias <C Side>
    <statTemp>$4: Sorbet::Private::Static::Void = <cfgAlias>$6: T.class_of(Sorbet::Private::Static).keep_for_ide(<cfgAlias>$8: T.class_of(Side))
    <finalReturn>: T.noreturn = return <returnMethodTemp>$2: NilClass
    <unconditional> -> bb1

# backedges
# - bb0(rubyRegionId=0)
bb1[rubyRegionId=0, firstDead=-1]():
    <unconditional> -> bb1

}

method ::Side#foo {

bb0[rubyRegionId=0, firstDead=-1]():
    <self>: Side = cast(<self>: NilClass, Side);
    cond: T.untyped = load_arg(cond)
    a: Side = <self>
    <statTemp>$4: Side = a
    <statTemp>$5: Side = a
    cond -> (T.untyped ? bb2 : bb3)

# backedges
# - bb4(rubyRegionId=0)
bb1[rubyRegionId=0, firstDead=-1]():
    <unconditional> -> bb1

# backedges
# - bb0(rubyRegionId=0)
bb2[rubyRegionId=0, firstDead=-1](<statTemp>$4: Side, <statTemp>$5: Side):
    a: TrueClass = true
    <unconditional> -> bb4

# backedges
# - bb0(rubyRegionId=0)
bb3[rubyRegionId=0, firstDead=-1](<statTemp>$4: Side, <statTemp>$5: Side):
    a: Integer(2) = 2
    <unconditional> -> bb4

# backedges
# - bb2(rubyRegionId=0)
# - bb3(rubyRegionId=0)
bb4[rubyRegionId=0, firstDead=2](a: T.any(TrueClass, Integer), <statTemp>$4: Side, <statTemp>$5: Side):
    <returnMethodTemp>$2: T.untyped = <statTemp>$4: Side.bar(<statTemp>$5: Side, a: T.any(TrueClass, Integer), a: T.any(TrueClass, Integer))
    <finalReturn>: T.noreturn = return <returnMethodTemp>$2: T.untyped
    <unconditional> -> bb1

}

method ::Side#bar {

bb0[rubyRegionId=0, firstDead=6]():
    <self>: Side = cast(<self>: NilClass, Side);
    a: T.untyped = load_arg(a)
    b: T.untyped = load_arg(b)
    c: T.untyped = load_arg(c)
    <returnMethodTemp>$2: NilClass = <self>: Side.puts(a: T.untyped, b: T.untyped, c: T.untyped)
    <finalReturn>: T.noreturn = return <returnMethodTemp>$2: NilClass
    <unconditional> -> bb1

# backedges
# - bb0(rubyRegionId=0)
bb1[rubyRegionId=0, firstDead=-1]():
    <unconditional> -> bb1

}

method ::<Class:Side>#<static-init> {

bb0[rubyRegionId=0, firstDead=2]():
    <self>: T.class_of(Side) = cast(<self>: NilClass, T.class_of(Side));
    <finalReturn>: T.noreturn = return <returnMethodTemp>$2: NilClass
    <unconditional> -> bb1

# backedges
# - bb0(rubyRegionId=0)
bb1[rubyRegionId=0, firstDead=-1]():
    <unconditional> -> bb1

}

