digraph "extra_bb_args.rb" {
subgraph "cluster_::Object#main" {
    label = "::Object#main";
    color = blue;

    "bb::Object#main_0" [
        shape = invhouse;
        color = black;
        label = "block[id=0, rubyBlockId=0]()\l<self>: Object = cast(<self>: NilClass, Object);\l<cfgAlias>$6: T.class_of(Sorbet::Private::Static) = alias <C Static>\l<cfgAlias>$9: T.class_of(T) = alias <C T>\l<cfgAlias>$11: T.class_of(String) = alias <C String>\l<statTemp>$7: <Type: T.nilable(String)> = <cfgAlias>$9: T.class_of(T).nilable(<cfgAlias>$11: T.class_of(String))\l<statTemp>$4: Sorbet::Private::Static::Void = <cfgAlias>$6: T.class_of(Sorbet::Private::Static).keep_for_typechecking(<statTemp>$7: <Type: T.nilable(String)>)\l<castTemp>$12: NilClass = nil\lname: T.nilable(String) = cast(<castTemp>$12: NilClass, T.nilable(String));\l<ifTemp>$14: T::Boolean = name: T.nilable(String).nil?()\l<ifTemp>$14: T::Boolean\l"
    ];

    "bb::Object#main_0" -> "bb::Object#main_2" [style="bold"];
    "bb::Object#main_0" -> "bb::Object#main_3" [style="tapered"];

    "bb::Object#main_1" [
        shape = parallelogram;
        color = black;
        label = "block[id=1, rubyBlockId=0]()\l<unconditional>\l"
    ];

    "bb::Object#main_1" -> "bb::Object#main_1" [style="bold"];
    "bb::Object#main_2" [
        shape = rectangle;
        color = black;
        label = "block[id=2, rubyBlockId=0]()\l<returnTemp>$16: String(\"missing name\") = \"missing name\"\l<statTemp>$13: T.noreturn = return <returnTemp>$16: String(\"missing name\")\l<unconditional>\l"
    ];

    "bb::Object#main_2" -> "bb::Object#main_1" [style="bold"];
    "bb::Object#main_3" [
        shape = rectangle;
        color = black;
        label = "block[id=3, rubyBlockId=0](name: String)\l<statTemp>$18: String(\"foo\") = \"foo\"\l<returnMethodTemp>$2: T::Boolean = name: String.include?(<statTemp>$18: String(\"foo\"))\l<finalReturn>: T.noreturn = return <returnMethodTemp>$2: T::Boolean\l<unconditional>\l"
    ];

    "bb::Object#main_3" -> "bb::Object#main_1" [style="bold"];
}

subgraph "cluster_::<Class:<root>>#<static-init>" {
    label = "::<Class:<root>>#<static-init>";
    color = blue;

    "bb::<Class:<root>>#<static-init>_0" [
        shape = invhouse;
        color = black;
        label = "block[id=0, rubyBlockId=0]()\l<self>: T.class_of(<root>) = cast(<self>: NilClass, T.class_of(<root>));\l<cfgAlias>$4: T.class_of(Sorbet::Private::Static) = alias <C Static>\l<statTemp>$6: Symbol(:main) = :main\l<statTemp>$7: Symbol(:normal) = :normal\l<returnMethodTemp>$2: Symbol(:main) = <cfgAlias>$4: T.class_of(Sorbet::Private::Static).keep_def(<self>: T.class_of(<root>), <statTemp>$6: Symbol(:main), <statTemp>$7: Symbol(:normal))\l<finalReturn>: T.noreturn = return <returnMethodTemp>$2: Symbol(:main)\l<unconditional>\l"
    ];

    "bb::<Class:<root>>#<static-init>_0" -> "bb::<Class:<root>>#<static-init>_1" [style="bold"];
    "bb::<Class:<root>>#<static-init>_1" [
        shape = parallelogram;
        color = black;
        label = "block[id=1, rubyBlockId=0]()\l<unconditional>\l"
    ];

    "bb::<Class:<root>>#<static-init>_1" -> "bb::<Class:<root>>#<static-init>_1" [style="bold"];
}

}

