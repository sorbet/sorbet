# -- test/testdata/packager/nested_packages/__package.rb --
class <emptyTree><<C <root>>> < (::<todo sym>)
  class <emptyTree>::<C <PackageSpecRegistry>>::<C Package><<C <todo sym>>> < (<emptyTree>::<C PackageSpec>)
    <self>.import(<emptyTree>::<C <PackageSpecRegistry>>::<C Package>::<C Subpackage>)

    <self>.export(::<root>::<C Package>::<C PackageClass>)
  end
end
# -- test/testdata/packager/nested_packages/mainpackage.rb --
class <emptyTree><<C <root>>> < (::<todo sym>)
  class <emptyTree>::<C Package>::<C PackageClass><<C <todo sym>>> < (::<todo sym>)
    ::Sorbet::Private::Static.sig(<self>) do ||
      <self>.returns(<emptyTree>::<C Package>::<C Subpackage>::<C SubpackageClass>)
    end

    def self.subpkg_class<<todo method>>(&<blk>)
      <emptyTree>::<C Package>::<C Subpackage>::<C SubpackageClass>.new()
    end

    <self>.extend(<emptyTree>::<C T>::<C Sig>)

    :subpkg_class
  end
end
# -- test/testdata/packager/nested_packages/subpackage/__package.rb --
class <emptyTree><<C <root>>> < (::<todo sym>)
  class <emptyTree>::<C <PackageSpecRegistry>>::<C Package>::<C Subpackage><<C <todo sym>>> < (<emptyTree>::<C PackageSpec>)
    <self>.import(<emptyTree>::<C <PackageSpecRegistry>>::<C Package>)

    <self>.export(::<root>::<C Package>::<C Subpackage>::<C SubpackageClass>)
  end
end
# -- test/testdata/packager/nested_packages/subpackage/subpackage.rb --
class <emptyTree><<C <root>>> < (::<todo sym>)
  class <emptyTree>::<C Package>::<C Subpackage>::<C SubpackageClass><<C <todo sym>>> < (::<todo sym>)
    ::Sorbet::Private::Static.sig(<self>) do ||
      <self>.returns(<emptyTree>::<C Package>::<C PackageClass>)
    end

    def self.package_class<<todo method>>(&<blk>)
      return <emptyTree>::<C Package>::<C PackageClass>.new()
    end

    <self>.extend(<emptyTree>::<C T>::<C Sig>)

    :package_class
  end
end
