# -- test/testdata/packager/shared_prefix/bar/that/__package.rb --
class <emptyTree><<C <root>>> < (::<todo sym>)
  class <emptyTree>::<C <PackageSpecRegistry>>::<C Project>::<C Bar>::<C That><<C <todo sym>>> < (<emptyTree>::<C PackageSpec>)
    <self>.export(<emptyTree>::<C <PackageRegistry>>::<C Project_Bar_That_Package_Private$1>::<C Project>::<C Bar>::<C That>::<C Thing>)
  end

  module <emptyTree>::<C <PackageRegistry>><<C <todo sym>>> < ()
  end

  module <emptyTree>::<C <PackageTests>><<C <todo sym>>> < ()
    <emptyTree>::<C Project_Bar_That_Package_Private$1>::<C Project>::<C Bar>::<C That>::<C Thing> = <emptyTree>::<C <PackageRegistry>>::<C Project_Bar_That_Package_Private$1>::<C Project>::<C Bar>::<C That>::<C Thing>
  end

  module <emptyTree>::<C <PackageRegistry>><<C <todo sym>>> < ()
    <emptyTree>::<C Project_Bar_That_Package$1>::<C Project>::<C Bar>::<C That>::<C Thing> = <emptyTree>::<C <PackageRegistry>>::<C Project_Bar_That_Package_Private$1>::<C Project>::<C Bar>::<C That>::<C Thing>
  end

  module <emptyTree>::<C <PackageTests>><<C <todo sym>>> < ()
  end
end
# -- test/testdata/packager/shared_prefix/bar/that/that.rb --
class <emptyTree><<C <root>>> < (::<todo sym>)
  module <emptyTree>::<C <PackageRegistry>>::<C Project_Bar_That_Package_Private$1><<C <todo sym>>> < ()
    module <emptyTree>::<C Project>::<C Bar>::<C That><<C <todo sym>>> < ()
      <emptyTree>::<C Thing> = <emptyTree>::<C T>.let(:yeah, <emptyTree>::<C Symbol>)
    end
  end
end
# -- test/testdata/packager/shared_prefix/bar/this/__package.rb --
class <emptyTree><<C <root>>> < (::<todo sym>)
  class <emptyTree>::<C <PackageSpecRegistry>>::<C Project>::<C Bar>::<C This><<C <todo sym>>> < (<emptyTree>::<C PackageSpec>)
    <self>.export(<emptyTree>::<C <PackageRegistry>>::<C Project_Bar_This_Package_Private$1>::<C Project>::<C Bar>::<C This>::<C Thing>)
  end

  module <emptyTree>::<C <PackageRegistry>><<C <todo sym>>> < ()
  end

  module <emptyTree>::<C <PackageTests>><<C <todo sym>>> < ()
    <emptyTree>::<C Project_Bar_This_Package_Private$1>::<C Project>::<C Bar>::<C This>::<C Thing> = <emptyTree>::<C <PackageRegistry>>::<C Project_Bar_This_Package_Private$1>::<C Project>::<C Bar>::<C This>::<C Thing>
  end

  module <emptyTree>::<C <PackageRegistry>><<C <todo sym>>> < ()
    <emptyTree>::<C Project_Bar_This_Package$1>::<C Project>::<C Bar>::<C This>::<C Thing> = <emptyTree>::<C <PackageRegistry>>::<C Project_Bar_This_Package_Private$1>::<C Project>::<C Bar>::<C This>::<C Thing>
  end

  module <emptyTree>::<C <PackageTests>><<C <todo sym>>> < ()
  end
end
# -- test/testdata/packager/shared_prefix/bar/this/this.rb --
class <emptyTree><<C <root>>> < (::<todo sym>)
  module <emptyTree>::<C <PackageRegistry>>::<C Project_Bar_This_Package_Private$1><<C <todo sym>>> < ()
    module <emptyTree>::<C Project>::<C Bar>::<C This><<C <todo sym>>> < ()
      <emptyTree>::<C Thing> = <emptyTree>::<C T>.let(:hey, <emptyTree>::<C Symbol>)
    end
  end
end
# -- test/testdata/packager/shared_prefix/foo/__package.rb --
class <emptyTree><<C <root>>> < (::<todo sym>)
  class <emptyTree>::<C <PackageSpecRegistry>>::<C Project>::<C Foo><<C <todo sym>>> < (<emptyTree>::<C PackageSpec>)
  end

  module <emptyTree>::<C <PackageRegistry>><<C <todo sym>>> < ()
  end

  module <emptyTree>::<C <PackageTests>><<C <todo sym>>> < ()
  end

  module <emptyTree>::<C <PackageRegistry>><<C <todo sym>>> < ()
  end

  module <emptyTree>::<C <PackageTests>><<C <todo sym>>> < ()
  end
end
# -- test/testdata/packager/shared_prefix/foo/foo.rb --
class <emptyTree><<C <root>>> < (::<todo sym>)
  module <emptyTree>::<C <PackageRegistry>>::<C Project_Foo_Package_Private$1><<C <todo sym>>> < ()
    class <emptyTree>::<C Project>::<C Foo>::<C Foo><<C <todo sym>>> < (::<todo sym>)
      <self>.puts(<emptyTree>::<C Project>::<C Bar>::<C This>)
    end
  end
end
