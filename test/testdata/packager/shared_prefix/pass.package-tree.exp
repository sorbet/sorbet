# -- test/testdata/packager/shared_prefix/bar/that/__package.rb --
class <emptyTree><<C <root>>> < (::<todo sym>)
  class ::<PackageSpecRegistry>::<C Project>::<C Bar>::<C That><<C <todo sym>>> < (<emptyTree>::<C PackageSpec>)
    <self>.export(::<root>::<C Project>::<C Bar>::<C That>::<C Thing>)
  end
end
# -- test/testdata/packager/shared_prefix/bar/that/that.rb --
class <emptyTree><<C <root>>> < (::<todo sym>)
  module <emptyTree>::<C Project>::<C Bar>::<C That><<C <todo sym>>> < ()
    <emptyTree>::<C Thing> = <cast:let>(:yeah, <todo sym>, <emptyTree>::<C Symbol>)
  end
end
# -- test/testdata/packager/shared_prefix/bar/this/__package.rb --
class <emptyTree><<C <root>>> < (::<todo sym>)
  class ::<PackageSpecRegistry>::<C Project>::<C Bar>::<C This><<C <todo sym>>> < (<emptyTree>::<C PackageSpec>)
    <self>.export(::<root>::<C Project>::<C Bar>::<C This>::<C Thing>)
  end
end
# -- test/testdata/packager/shared_prefix/bar/this/this.rb --
class <emptyTree><<C <root>>> < (::<todo sym>)
  module <emptyTree>::<C Project>::<C Bar>::<C This><<C <todo sym>>> < ()
    <emptyTree>::<C Thing> = <cast:let>(:hey, <todo sym>, <emptyTree>::<C Symbol>)
  end
end
# -- test/testdata/packager/shared_prefix/foo/__package.rb --
class <emptyTree><<C <root>>> < (::<todo sym>)
  class ::<PackageSpecRegistry>::<C Project>::<C Foo><<C <todo sym>>> < (<emptyTree>::<C PackageSpec>)
  end
end
# -- test/testdata/packager/shared_prefix/foo/foo.rb --
class <emptyTree><<C <root>>> < (::<todo sym>)
  class <emptyTree>::<C Project>::<C Foo>::<C Foo><<C <todo sym>>> < (::<todo sym>)
    <self>.puts(<emptyTree>::<C Project>::<C Bar>::<C This>)
  end
end
