# -- test/testdata/packager/shared_prefix/bar/that/__package.rb --
class <emptyTree><<C <root>>> < (::<todo sym>)
  class ::<PackageSpecRegistry>::Project::Bar::That<<C That>> < (::Sorbet::Private::Static::PackageSpec)
    <self>.export(<emptyTree>::<C Project>::<C Bar>::<C That>::<C Thing>)
  end
end
# -- test/testdata/packager/shared_prefix/bar/this/__package.rb --
class <emptyTree><<C <root>>> < (::<todo sym>)
  class ::<PackageSpecRegistry>::Project::Bar::This<<C This>> < (::Sorbet::Private::Static::PackageSpec)
    <self>.export(<emptyTree>::<C Project>::<C Bar>::<C This>::<C Thing>)
  end
end
# -- test/testdata/packager/shared_prefix/foo/__package.rb --
class <emptyTree><<C <root>>> < (::<todo sym>)
  class ::<PackageSpecRegistry>::Project::Foo<<C Foo>> < (::Sorbet::Private::Static::PackageSpec)
  end
end
# -- test/testdata/packager/shared_prefix/bar/that/that.rb --
class <emptyTree><<C <root>>> < (::<todo sym>)
  module ::Project::Bar::That<<C That>> < ()
    ::Project::Bar::That::Thing = <cast:let>(:yeah, <todo sym>, <emptyTree>::<C Symbol>)
  end
end
# -- test/testdata/packager/shared_prefix/bar/this/this.rb --
class <emptyTree><<C <root>>> < (::<todo sym>)
  module ::Project::Bar::This<<C This>> < ()
    ::Project::Bar::This::Thing = <cast:let>(:hey, <todo sym>, <emptyTree>::<C Symbol>)
  end
end
# -- test/testdata/packager/shared_prefix/foo/foo.rb --
class <emptyTree><<C <root>>> < (::<todo sym>)
  class ::Project::Foo::Foo<<C Foo>> < (::<todo sym>)
    <self>.puts(<emptyTree>::<C Project>::<C Bar>::<C This>)
  end
end
