# -- test/testdata/packager/extra_package_paths/bar/__package.rb --
class <emptyTree><<C <root>>> < (::<todo sym>)
  class <emptyTree>::<C <PackageSpecRegistry>>::<C Project>::<C Bar><<C <todo sym>>> < (<emptyTree>::<C PackageSpec>)
    <self>.import(<emptyTree>::<C <PackageSpecRegistry>>::<C Project>::<C Foo>)

    <self>.import(<emptyTree>::<C <PackageSpecRegistry>>::<C Project>::<C Baz>::<C Package>)
  end
end
# -- test/testdata/packager/extra_package_paths/bar/bar.rb --
class <emptyTree><<C <root>>> < (::<todo sym>)
  class <emptyTree>::<C Project>::<C Bar>::<C Bar><<C <todo sym>>> < (::<todo sym>)
    ::Sorbet::Private::Static.sig(<self>) do ||
      <self>.void()
    end

    def bar1<<todo method>>(&<blk>)
      <emptyTree>::<C Project>::<C Foo>::<C B>.b()
    end

    ::Sorbet::Private::Static.sig(<self>) do ||
      <self>.void()
    end

    def bar2<<todo method>>(&<blk>)
      <emptyTree>::<C Project>::<C Baz>::<C Package>::<C C>.c()
    end

    <self>.extend(<emptyTree>::<C T>::<C Sig>)

    :bar1

    :bar2
  end
end
# -- test/testdata/packager/extra_package_paths/baz/__package.rb --
class <emptyTree><<C <root>>> < (::<todo sym>)
  class <emptyTree>::<C <PackageSpecRegistry>>::<C Project>::<C Baz>::<C Package><<C <todo sym>>> < (<emptyTree>::<C PackageSpec>)
    <self>.export(::<root>::<C Project>::<C Baz>::<C Package>::<C C>)
  end
end
# -- test/testdata/packager/extra_package_paths/extra/Project_Baz_Package/c.rb --
class <emptyTree><<C <root>>> < (::<todo sym>)
  module <emptyTree>::<C Project>::<C Baz>::<C Package><<C <todo sym>>> < ()
    class <emptyTree>::<C C><<C <todo sym>>> < (::<todo sym>)
      ::Sorbet::Private::Static.sig(<self>) do ||
        <self>.void()
      end

      def self.c<<todo method>>(&<blk>)
        <emptyTree>
      end

      <self>.extend(<emptyTree>::<C T>::<C Sig>)

      :c
    end
  end
end
# -- test/testdata/packager/extra_package_paths/extra/Project_Foo/b.rb --
class <emptyTree><<C <root>>> < (::<todo sym>)
  class <emptyTree>::<C Project>::<C Foo>::<C B><<C <todo sym>>> < (::<todo sym>)
    ::Sorbet::Private::Static.sig(<self>) do ||
      <self>.void()
    end

    def self.b<<todo method>>(&<blk>)
      <emptyTree>
    end

    <self>.extend(<emptyTree>::<C T>::<C Sig>)

    :b
  end
end
# -- test/testdata/packager/extra_package_paths/foo/__package.rb --
class <emptyTree><<C <root>>> < (::<todo sym>)
  class <emptyTree>::<C <PackageSpecRegistry>>::<C Project>::<C Foo><<C <todo sym>>> < (<emptyTree>::<C PackageSpec>)
    <self>.export(::<root>::<C Project>::<C Foo>::<C B>)
  end
end
