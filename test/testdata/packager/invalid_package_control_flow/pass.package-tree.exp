class <emptyTree><<C <root>>> < (::<todo sym>)
  <emptyTree>::<C SomeConstant> = <emptyTree>::<C PackageSpec>

  class <emptyTree>::<C MyPackage><<C <todo sym>>> < (<emptyTree>::<C PackageSpec>)
    ::Sorbet::Private::Static.sig(<self>) do ||
      <self>.void()
    end

    def package_method<<todo method>>(&<blk>)
      <emptyTree>
    end

    ::Sorbet::Private::Static.sig(<self>) do ||
      <self>.void()
    end

    def self.static_method<<todo method>>(&<blk>)
      <emptyTree>
    end

    <self>.extend(<emptyTree>::<C T>::<C Helpers>)

    <self>.include(<emptyTree>::<C T>::<C Helpers>)

    <self>.some_method(<self>.method_call_arg())

    <self>.some_method(<emptyTree>::<C ConstantArg>)

    <self>.some_method("add".+("ition"))

    <self>.some_method(1.+(2))

    <self>.some_method([0, 1, 2])

    <self>.some_method({:prop => 10})

    <self>.some_method("Literal")

    <self>.some_method(1)

    ::Sorbet::Private::Static.keep_def(<self>, :package_method, :normal)

    ::Sorbet::Private::Static.keep_self_def(<self>, :static_method, :normal)

    @hello = <emptyTree>::<C T>.let(nil, <emptyTree>::<C T>.nilable(<emptyTree>::<C String>))
  end

  module <emptyTree>::<C <PackageRegistry>><<C <todo sym>>> < ()
  end

  module <emptyTree>::<C <PackageTests>><<C <todo sym>>> < ()
    <emptyTree>::<C MyPackage_Package$1>::<C MyPackage> = <emptyTree>::<C <PackageRegistry>>::<C MyPackage_Package$1>::<C MyPackage>
  end
end
class <emptyTree><<C <root>>> < (::<todo sym>)
  module <emptyTree>::<C <PackageRegistry>>::<C MyPackage_Package$1><<C <todo sym>>> < ()
    class ::<root>::<C PackageSpec><<C <todo sym>>> < (::<todo sym>)
      def self.some_method<<todo method>>(x, &<blk>)
        <emptyTree>
      end

      def self.method_call_arg<<todo method>>(&<blk>)
        <emptyTree>
      end

      <self>.extend(<emptyTree>::<C T>::<C Sig>)

      ::Sorbet::Private::Static.keep_self_def(<self>, :some_method, :normal)

      ::Sorbet::Private::Static.keep_self_def(<self>, :method_call_arg, :normal)

      <emptyTree>::<C ConstantArg> = 10
    end
  end
end
