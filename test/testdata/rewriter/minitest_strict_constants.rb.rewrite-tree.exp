class <emptyTree><<C <root>>> < (::<todo sym>)
  class <emptyTree>::<C MyTest><<C <todo sym>>> < (::<todo sym>)
    ::T::Sig::WithoutRuntime.sig() do ||
      <self>.void()
    end

    def <it 'allows let-ed constants inside of IT'><<todo method>>(&<blk>)
      ::Module.const_set(:C2, <cast:let>(10, <todo sym>, <emptyTree>::<C Integer>))
    end

    begin
      <emptyTree>::<C C2> = <cast:let>(::T.unsafe(::Kernel).raise("Sorbet rewriter pass partially unimplemented"), <todo sym>, <emptyTree>::<C Integer>)
      <emptyTree>
    end
  end
end
