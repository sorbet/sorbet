class <emptyTree><<C <root>>> < (::<todo sym>)
  module <emptyTree>::<C BagOfProps><<C <todo sym>>> < ()
    ::Sorbet::Private::Static.sig(::T::Sig::WithoutRuntime) do ||
      <self>.returns(<emptyTree>::<C String>)
    end

    def foo<<todo method>>(&<blk>)
      ::Kernel.raise("Sorbet rewriter pass partially unimplemented")
    end

    ::Sorbet::Private::Static.sig(::T::Sig::WithoutRuntime) do ||
      <self>.params(:arg0, <emptyTree>::<C String>).returns(<emptyTree>::<C String>)
    end

    def foo=<<todo method>>(arg0, &<blk>)
      ::Kernel.raise("Sorbet rewriter pass partially unimplemented")
    end

    <self>.include(<emptyTree>::<C T>::<C Props>)

    <self>.prop(:foo, <emptyTree>::<C String>, :without_accessors, true)

    <runtime method definition of foo>

    <runtime method definition of foo=>
  end

  class <emptyTree>::<C MyClass><<C <todo sym>>> < (::<todo sym>)
    <self>.include(<emptyTree>::<C BagOfProps>)
  end

  my_class = <emptyTree>::<C MyClass>.new()

  <self>.p(my_class.foo=("hello"))

  <self>.p(my_class.foo())
end
