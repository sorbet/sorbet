class <emptyTree><<C <root>>> < (::<todo sym>)
  class <emptyTree>::<C A><<C <todo sym>>> < (::<todo sym>)
    <self>.include(<emptyTree>::<C Singleton>)
  end

  class <emptyTree>::<C B><<C <todo sym>>> < (<emptyTree>::<C A>)
  end

  <emptyTree>::<C T>.reveal_type(<emptyTree>::<C A>.instance())

  <emptyTree>::<C T>.reveal_type(<emptyTree>::<C B>.instance())

  class <emptyTree>::<C C><<C <todo sym>>> < (::<todo sym>)
    <self>.include(<emptyTree>::<C Singleton>)

    <self>.extend(<emptyTree>::<C T>::<C Helpers>)

    <self>.final!()
  end

  <emptyTree>::<C T>.reveal_type(<emptyTree>::<C C>.instance())

  class <emptyTree>::<C D><<C <todo sym>>> < (<emptyTree>::<C C>)
  end
end
