class <C <U <root>>> < <C <U Object>> ()
  class <S <C <U <root>>> $1>[<C <U <AttachedClass>>>] < <S <C <U Object>> $1> ()
    method <S <C <U <root>>> $1>#<N <U <static-init>> $CENSORED> (<blk>) @ Loc {file=test/testdata/rewriter/flatten_module_private_class_method.rb start=3:1 end=15:4}
      argument <blk><block> @ Loc {file=test/testdata/rewriter/flatten_module_private_class_method.rb start=??? end=???}
  module <C <U A>> < <C <U Sorbet>>::<C <U Private>>::<C <U Static>>::<C <U ImplicitModuleSuperclass>> () @ Loc {file=test/testdata/rewriter/flatten_module_private_class_method.rb start=3:1 end=3:9}
  class <S <C <U A>> $1>[<C <U <AttachedClass>>>] < <C <U Module>> () @ Loc {file=test/testdata/rewriter/flatten_module_private_class_method.rb start=3:1 end=3:9}
    type-member(+) <S <C <U A>> $1>::<C <U <AttachedClass>>> -> LambdaParam(<S <C <U A>> $1>::<C <U <AttachedClass>>>, lower=T.noreturn, upper=A) @ Loc {file=test/testdata/rewriter/flatten_module_private_class_method.rb start=3:1 end=3:9}
    method <S <C <U A>> $1>#<U <static-init>> (<blk>) @ Loc {file=test/testdata/rewriter/flatten_module_private_class_method.rb start=3:1 end=8:4}
      argument <blk><block> @ Loc {file=test/testdata/rewriter/flatten_module_private_class_method.rb start=??? end=???}
    method <S <C <U A>> $1>#<U bar> (<blk>) @ Loc {file=test/testdata/rewriter/flatten_module_private_class_method.rb start=5:26 end=5:38}
      argument <blk><block> @ Loc {file=test/testdata/rewriter/flatten_module_private_class_method.rb start=??? end=???}
    method <S <C <U A>> $1>#<U thing> (<blk>) @ Loc {file=test/testdata/rewriter/flatten_module_private_class_method.rb start=4:3 end=4:17}
      argument <blk><block> @ Loc {file=test/testdata/rewriter/flatten_module_private_class_method.rb start=??? end=???}
  class <C <U B>> < <C <U Object>> () @ Loc {file=test/testdata/rewriter/flatten_module_private_class_method.rb start=10:1 end=10:8}
  class <S <C <U B>> $1>[<C <U <AttachedClass>>>] < <S <C <U Object>> $1> () @ Loc {file=test/testdata/rewriter/flatten_module_private_class_method.rb start=10:1 end=10:8}
    type-member(+) <S <C <U B>> $1>::<C <U <AttachedClass>>> -> LambdaParam(<S <C <U B>> $1>::<C <U <AttachedClass>>>, lower=T.noreturn, upper=B) @ Loc {file=test/testdata/rewriter/flatten_module_private_class_method.rb start=10:1 end=10:8}
    method <S <C <U B>> $1>#<U <static-init>> (<blk>) @ Loc {file=test/testdata/rewriter/flatten_module_private_class_method.rb start=10:1 end=15:4}
      argument <blk><block> @ Loc {file=test/testdata/rewriter/flatten_module_private_class_method.rb start=??? end=???}
    method <S <C <U B>> $1>#<U bar> (<blk>) @ Loc {file=test/testdata/rewriter/flatten_module_private_class_method.rb start=12:26 end=12:38}
      argument <blk><block> @ Loc {file=test/testdata/rewriter/flatten_module_private_class_method.rb start=??? end=???}
    method <S <C <U B>> $1>#<U thing> (<blk>) @ Loc {file=test/testdata/rewriter/flatten_module_private_class_method.rb start=11:3 end=11:17}
      argument <blk><block> @ Loc {file=test/testdata/rewriter/flatten_module_private_class_method.rb start=??? end=???}

