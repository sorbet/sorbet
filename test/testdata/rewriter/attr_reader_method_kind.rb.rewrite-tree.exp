class <emptyTree><<C <root>>> < (::<todo sym>)
  class <emptyTree>::<C A><<C <todo sym>>> < (::<todo sym>)
    def using_attr_reader<<todo method>>(&<blk>)
      @using_attr_reader
    end

    ::Sorbet::Private::Static.sig(<self>) do ||
      <self>.returns(<emptyTree>::<C Integer>)
    end

    def using_attr_reader_sig_checked<<todo method>>(&<blk>)
      @using_attr_reader_sig_checked
    end

    ::Sorbet::Private::Static.sig(<self>) do ||
      <self>.returns(<emptyTree>::<C Integer>).checked(:tests)
    end

    def using_attr_reader_sig_checked_tests<<todo method>>(&<blk>)
      @using_attr_reader_sig_checked_tests
    end

    ::Sorbet::Private::Static.sig(<self>) do ||
      <self>.returns(<emptyTree>::<C Integer>).checked(:never)
    end

    def using_attr_reader_sig_checked_never<<todo method>>(&<blk>)
      @using_attr_reader_sig_checked_never
    end

    <self>.extend(<emptyTree>::<C T>::<C Sig>)

    :using_attr_reader

    :using_attr_reader_sig_checked

    :using_attr_reader_sig_checked_tests

    :using_attr_reader_sig_checked_never
  end

  class <emptyTree>::<C B><<C <todo sym>>> < (<emptyTree>::<C T>::<C Struct>)
    ::Sorbet::Private::Static.sig(::T::Sig::WithoutRuntime) do ||
      <self>.params(:using_t_struct_prop, <emptyTree>::<C Integer>, :using_t_struct_const, <emptyTree>::<C Integer>).void()
    end

    def initialize<<todo method>>(using_t_struct_prop:, using_t_struct_const:, &<blk>)
      begin
        @using_t_struct_prop = ::T.let(using_t_struct_prop, <emptyTree>::<C Integer>)
        @using_t_struct_const = ::T.let(using_t_struct_const, <emptyTree>::<C Integer>)
        nil
      end
    end

    ::Sorbet::Private::Static.sig(::T::Sig::WithoutRuntime) do ||
      <self>.returns(<emptyTree>::<C Integer>)
    end

    def using_t_struct_prop<<todo method>>(&<blk>)
      @using_t_struct_prop
    end

    ::Sorbet::Private::Static.sig(::T::Sig::WithoutRuntime) do ||
      <self>.params(:arg0, <emptyTree>::<C Integer>).returns(<emptyTree>::<C Integer>)
    end

    def using_t_struct_prop=<<todo method>>(arg0, &<blk>)
      @using_t_struct_prop = arg0
    end

    ::Sorbet::Private::Static.sig(::T::Sig::WithoutRuntime) do ||
      <self>.returns(<emptyTree>::<C Integer>)
    end

    def using_t_struct_const<<todo method>>(&<blk>)
      @using_t_struct_const
    end

    :initialize

    <self>.prop(:using_t_struct_prop, <emptyTree>::<C Integer>, :without_accessors, true)

    :using_t_struct_prop

    :using_t_struct_prop=

    <self>.const(:using_t_struct_const, <emptyTree>::<C Integer>, :without_accessors, true)

    :using_t_struct_const
  end

  class <emptyTree>::<C C><<C <todo sym>>> < (::<todo sym>)
    def using_bare_method<<todo method>>(&<blk>)
      @using_bare_method
    end

    :using_bare_method
  end

  class <emptyTree>::<C D><<C <todo sym>>> < (::<todo sym>)
    def self.using_bare_self_method<<todo method>>(&<blk>)
      @using_bare_self_method
    end

    :using_bare_self_method
  end
end
