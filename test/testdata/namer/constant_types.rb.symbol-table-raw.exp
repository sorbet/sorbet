class <C <U <root>>> < <C <U Object>> ()
  class <S <C <U <root>>> $1>[<C <U <AttachedClass>>>] < <S <C <U Object>> $1> ()
    method <S <C <U <root>>> $1>#<N <U <static-init>> $CENSORED> (<blk>) @ Loc {file=test/testdata/namer/constant_types.rb start=3:1 end=10:4}
      argument <blk><block> @ Loc {file=test/testdata/namer/constant_types.rb start=??? end=???}
  module <C <U Constants>> < <C <U Sorbet>>::<C <U Private>>::<C <U Static>>::<C <U ImplicitModuleSuperclass>> () @ Loc {file=test/testdata/namer/constant_types.rb start=3:1 end=3:17}
    static-field <C <U Constants>>::<C <U A>> -> Integer @ Loc {file=test/testdata/namer/constant_types.rb start=4:3 end=4:4}
    static-field <C <U Constants>>::<C <U B>> -> String @ Loc {file=test/testdata/namer/constant_types.rb start=5:3 end=5:4}
    static-field <C <U Constants>>::<C <U C>> -> Symbol @ Loc {file=test/testdata/namer/constant_types.rb start=6:3 end=6:4}
    static-field <C <U Constants>>::<C <U D>> -> Float @ Loc {file=test/testdata/namer/constant_types.rb start=7:3 end=7:4}
    static-field <C <U Constants>>::<C <U E>> -> AppliedType {       klass = <C <U Array>>       targs = [         <C <U Elem>> = Integer       ]     } @ Loc {file=test/testdata/namer/constant_types.rb start=8:3 end=8:4}
    static-field <C <U Constants>>::<C <U F>> -> AppliedType {       klass = <C <U Array>>       targs = [         <C <U Elem>> = String       ]     } @ Loc {file=test/testdata/namer/constant_types.rb start=9:3 end=9:4}
  class <S <C <U Constants>> $1>[<C <U <AttachedClass>>>] < <C <U Module>> () @ Loc {file=test/testdata/namer/constant_types.rb start=3:1 end=3:17}
    type-member(+) <S <C <U Constants>> $1>::<C <U <AttachedClass>>> -> LambdaParam(<S <C <U Constants>> $1>::<C <U <AttachedClass>>>, lower=T.noreturn, upper=Constants) @ Loc {file=test/testdata/namer/constant_types.rb start=3:1 end=3:17}
    method <S <C <U Constants>> $1>#<U <static-init>> (<blk>) @ Loc {file=test/testdata/namer/constant_types.rb start=3:1 end=10:4}
      argument <blk><block> @ Loc {file=test/testdata/namer/constant_types.rb start=??? end=???}

