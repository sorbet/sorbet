class <C <U <root>>> < <C <U Object>> ()
  class <S <C <U <root>>> $1>[<C <U <AttachedClass>>>] < <S <C <U Object>> $1> ()
    method <S <C <U <root>>> $1>#<N <U <static-init>> $CENSORED> (<blk>) @ Loc {file=test/testdata/namer/class_self_private_class_method.rb start=3:1 end=7:4}
      argument <blk><block> @ Loc {file=test/testdata/namer/class_self_private_class_method.rb start=??? end=???}
  class <C <U A>> < <C <U Object>> () @ Loc {file=test/testdata/namer/class_self_private_class_method.rb start=3:1 end=3:8}
  class <S <C <U A>> $1>[<C <U <AttachedClass>>>] < <S <C <U Object>> $1> () @ Loc {file=test/testdata/namer/class_self_private_class_method.rb start=4:3 end=4:8}
    type-member(+) <S <C <U A>> $1>::<C <U <AttachedClass>>> -> LambdaParam(<S <C <U A>> $1>::<C <U <AttachedClass>>>, lower=T.noreturn, upper=A) @ Loc {file=test/testdata/namer/class_self_private_class_method.rb start=3:7 end=3:8}
    method <S <C <U A>> $1>#<U <static-init>> (<blk>) @ Loc {file=test/testdata/namer/class_self_private_class_method.rb start=3:1 end=7:4}
      argument <blk><block> @ Loc {file=test/testdata/namer/class_self_private_class_method.rb start=??? end=???}
  class <S <S <C <U A>> $1> $1>[<C <U <AttachedClass>>>] < <S <S <C <U Object>> $1> $1> () @ Loc {file=test/testdata/namer/class_self_private_class_method.rb start=4:3 end=4:8}
    type-member(+) <S <S <C <U A>> $1> $1>::<C <U <AttachedClass>>> -> LambdaParam(<S <S <C <U A>> $1> $1>::<C <U <AttachedClass>>>, lower=T.noreturn, upper=AppliedType {   klass = <S <C <U A>> $1>   targs = [     <C <U <AttachedClass>>> = A   ] }) @ Loc {file=test/testdata/namer/class_self_private_class_method.rb start=4:3 end=4:8}
    method <S <S <C <U A>> $1> $1>#<U <static-init>> (<blk>) @ Loc {file=test/testdata/namer/class_self_private_class_method.rb start=4:3 end=6:6}
      argument <blk><block> @ Loc {file=test/testdata/namer/class_self_private_class_method.rb start=??? end=???}
    method <S <S <C <U A>> $1> $1>#<U example> : private (<blk>) @ Loc {file=test/testdata/namer/class_self_private_class_method.rb start=5:26 end=5:42}
      argument <blk><block> @ Loc {file=test/testdata/namer/class_self_private_class_method.rb start=??? end=???}

