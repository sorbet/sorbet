class <emptyTree><<C <root>>> < (::<todo sym>)
  module ::A<<C A>> < ()
    module ::A::B<<C B>> < ()
      def self.<static-init>(<blk>)
        begin
          ::A::B::C
          ::A::B::D = 1
          <emptyTree>
        end
      end
    end

    def self.<static-init>(<blk>)
      ::A::B::C = 1
    end
  end

  def self.<static-init><<static-init>$CENSORED>(<blk>)
    begin
      ::A::B::C
      ::A::B::D
      ::A
      <emptyTree>
    end
  end
end
