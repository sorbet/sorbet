begin
  class <emptyTree><<C <root>>> < (::<todo sym>)
    <emptyTree>

    def self.<static-init><<static-init>$CENSORED>(<blk>)
      begin
        ::A::B::C
        ::A::B::D
        ::A
        <emptyTree>
      end
    end
  end
  module ::A<<C A>> < ()
    <emptyTree>

    def self.<static-init>(<blk>)
      ::A::B::C = 1
    end
  end
  module ::A::B<<C B>> < ()
    def self.<static-init>(<blk>)
      begin
        ::A::B::C
        ::A::B::D = 1
        <emptyTree>
      end
    end
  end
  <emptyTree>
end
