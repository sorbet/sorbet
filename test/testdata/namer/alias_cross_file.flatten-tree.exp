class <emptyTree><<C <root>>> < (::<todo sym>)
  class ::TestSig<<C TestSig>> < (::<todo sym>)
    def test_resolve(<blk>)
      <emptyTree>
    end

    def self.<static-init>(<blk>)
      begin
        ::Sorbet::Private::Static.sig(<self>) do ||
          <self>.returns(::T2)
        end
        <runtime method definition of test_resolve>
        <emptyTree>
      end
    end
  end
end
class <emptyTree><<C <root>>> < (::<todo sym>)
  class ::T1<<C T1>> < (::<todo sym>)
  end

  def self.<static-init><<static-init>$CENSORED>(<blk>)
    ::T2 = ::T1
  end
end
