class <C <U <root>>> < <C <U Object>> ()
  class <S <C <U <root>>> $1>[<C <U <AttachedClass>>>] < <S <C <U Object>> $1> ()
    method <S <C <U <root>>> $1>#<N <U <static-init>> $CENSORED> (<blk>) @ Loc {file=test/testdata/namer/circular_mixin.rb start=2:1 end=13:4}
      argument <blk><block> @ Loc {file=test/testdata/namer/circular_mixin.rb start=??? end=???}
  module <C <U A>> < <C <U Sorbet>>::<C <U Private>>::<C <U Static>>::<C <U ImplicitModuleSuperclass>> (<C <U B>>, <C <U <StubMixin>>>) @ Loc {file=test/testdata/namer/circular_mixin.rb start=11:1 end=11:9}
  class <S <C <U A>> $1> < <C <U Module>> () @ Loc {file=test/testdata/namer/circular_mixin.rb start=11:1 end=11:9}
    method <S <C <U A>> $1>#<U <static-init>> (<blk>) @ Loc {file=test/testdata/namer/circular_mixin.rb start=11:1 end=13:4}
      argument <blk><block> @ Loc {file=test/testdata/namer/circular_mixin.rb start=??? end=???}
  module <C <U B>> < <C <U Sorbet>>::<C <U Private>>::<C <U Static>>::<C <U ImplicitModuleSuperclass>> (<C <U <StubMixin>>>) @ Loc {file=test/testdata/namer/circular_mixin.rb start=7:1 end=7:9}
  class <S <C <U B>> $1> < <C <U Module>> () @ Loc {file=test/testdata/namer/circular_mixin.rb start=7:1 end=7:9}
    method <S <C <U B>> $1>#<U <static-init>> (<blk>) @ Loc {file=test/testdata/namer/circular_mixin.rb start=7:1 end=9:4}
      argument <blk><block> @ Loc {file=test/testdata/namer/circular_mixin.rb start=??? end=???}

