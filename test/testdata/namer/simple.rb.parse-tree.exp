Begin {
  stmts = [
    Class {
      name = Const {
        scope = NULL
        name = <C <U NormalClass>>
      }
      superclass = NULL
      body = Begin {
        stmts = [
          DefMethod {
            name = <U normal_method>
            params = NULL
            body = NULL
          }
          DefS {
            singleton = Self {
            }
            name = <U normal_static_method>
            params = NULL
            body = NULL
          }
          Class {
            name = Const {
              scope = NULL
              name = <C <U InnerClass>>
            }
            superclass = NULL
            body = NULL
          }
          Module {
            name = Const {
              scope = NULL
              name = <C <U InnerModule>>
            }
            body = NULL
          }
        ]
      }
    }
    Module {
      name = Const {
        scope = NULL
        name = <C <U ANamespace>>
      }
      body = Class {
        name = Const {
          scope = NULL
          name = <C <U ObviousChild>>
        }
        superclass = NULL
        body = NULL
      }
    }
    Class {
      name = Const {
        scope = Const {
          scope = NULL
          name = <C <U ANamespace>>
        }
        name = <C <U ClassInNamespace>>
      }
      superclass = NULL
      body = NULL
    }
    Class {
      name = Const {
        scope = NULL
        name = <C <U Parent>>
      }
      superclass = NULL
      body = NULL
    }
    Module {
      name = Const {
        scope = NULL
        name = <C <U Mixin>>
      }
      body = NULL
    }
    Module {
      name = Const {
        scope = NULL
        name = <C <U OtherMixin>>
      }
      body = NULL
    }
    Class {
      name = Const {
        scope = NULL
        name = <C <U Child>>
      }
      superclass = Const {
        scope = NULL
        name = <C <U Parent>>
      }
      body = Begin {
        stmts = [
          Send {
            receiver = NULL
            method = <U include>
            args = [
              Const {
                scope = NULL
                name = <C <U Mixin>>
              }
            ]
          }
          Send {
            receiver = NULL
            method = <U include>
            args = [
              Integer {
                val = "3"
              }
            ]
          }
          Block {
            send = Send {
              receiver = NULL
              method = <U include>
              args = [
                Const {
                  scope = NULL
                  name = <C <U Mixin>>
                }
              ]
            }
            params = NULL
            body = NULL
          }
          Send {
            receiver = Send {
              receiver = NULL
              method = <U whatever>
              args = [
              ]
            }
            method = <U include>
            args = [
              Const {
                scope = NULL
                name = <C <U OtherMixin>>
              }
            ]
          }
        ]
      }
    }
  ]
}
