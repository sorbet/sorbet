class <emptyTree><<C <root>>> < (::<todo sym>)
  class <emptyTree>::<C A><<C <todo sym>>> < (::<todo sym>)
    def test0<<todo method>>(&<blk>)
      begin
        x = nil
        if <emptyTree>::<C <ErrorNode>>
          <emptyTree>
        else
          <emptyTree>
        end
      end
    end

    def test1<<todo method>>(&<blk>)
      begin
        x = nil
        if x
          <emptyTree>
        else
          <emptyTree>
        end
      end
    end

    def test2<<todo method>>(&<blk>)
      begin
        x = nil
        if x.<method-name-missing>()
          <emptyTree>
        else
          <emptyTree>
        end
      end
    end

    def test3<<todo method>>(&<blk>)
      begin
        x = nil
        if x.f()
          <emptyTree>
        else
          <emptyTree>
        end
      end
    end

    def no_syntax_error_1<<todo method>>(&<blk>)
      x = if <self>.y()
        <emptyTree>
      else
        <emptyTree>
      end
    end

    def no_syntax_error_2<<todo method>>(&<blk>)
      x = if <self>.y()
        <emptyTree>
      else
        <emptyTree>
      end
    end

    def no_syntax_error_3<<todo method>>(&<blk>)
      begin
        x = if <self>.y()
          <emptyTree>
        else
          <emptyTree>
        end
        <self>.puts("after")
      end
    end
  end
end
