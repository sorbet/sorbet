Begin {
  stmts = [
    DefMethod {
      name = <U test_method_without_fun_name>
      params = Params {
        params = [
          Param {
            name = <U x>
          }
        ]
      }
      body = Send {
        receiver = LVar {
          name = <U x>
        }
        method = <U <method-name-missing>>
        args = [
        ]
      }
    }
    DefMethod {
      name = <U test_method_without_fun_name_plus_before>
      params = Params {
        params = [
          Param {
            name = <U x>
          }
        ]
      }
      body = Begin {
        stmts = [
          Assign {
            lhs = LVarLhs {
              name = <U before>
            }
            rhs = Integer {
              val = "1"
            }
          }
          Send {
            receiver = LVar {
              name = <U x>
            }
            method = <U <method-name-missing>>
            args = [
            ]
          }
        ]
      }
    }
    DefMethod {
      name = <U test_method_without_fun_name_plus_after>
      params = Params {
        params = [
          Param {
            name = <U x>
          }
        ]
      }
      body = Send {
        receiver = LVar {
          name = <U x>
        }
        method = <U after=>
        args = [
          Integer {
            val = "1"
          }
        ]
      }
    }
    DefMethod {
      name = <U test_method_without_fun_name_before_and_after>
      params = Params {
        params = [
          Param {
            name = <U x>
          }
        ]
      }
      body = Begin {
        stmts = [
          Assign {
            lhs = LVarLhs {
              name = <U before>
            }
            rhs = Integer {
              val = "1"
            }
          }
          Send {
            receiver = LVar {
              name = <U x>
            }
            method = <U after=>
            args = [
              Integer {
                val = "1"
              }
            ]
          }
        ]
      }
    }
  ]
}
