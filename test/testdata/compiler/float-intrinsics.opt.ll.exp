; ModuleID = 'payload'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

%struct.rb_vm_struct = type { i64, %struct.rb_global_vm_lock_struct, %struct.rb_thread_struct*, %struct.rb_thread_struct*, i8*, i64, %union.pthread_mutex_t, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i64, i32, i32, i8, i32, i64, [5 x i64], i64, i64, i64, i64, i64, i64, i64, %struct.st_table*, %struct.st_table*, %struct.anon.3, %struct.rb_hook_list_struct, %struct.st_table*, %struct.rb_postponed_job_struct*, i32, i32, %struct.list_head, %union.pthread_mutex_t, i64, i64, i64, i64, i64, i32, %struct.st_table*, %struct.rb_objspace*, %struct.rb_at_exit_list*, i64*, %struct.st_table*, %struct.rb_builtin_function*, i32, %struct.anon.4, [29 x i16] }
%struct.rb_global_vm_lock_struct = type { %struct.rb_thread_struct*, %union.pthread_mutex_t, %struct.list_head, %struct.rb_thread_struct*, i32, %union.pthread_cond_t, %union.pthread_cond_t, i32, i32 }
%union.pthread_cond_t = type { %struct.anon.2 }
%struct.anon.2 = type { i32, i32, i64, i64, i64, i8*, i32, i32 }
%struct.rb_thread_struct = type { %struct.list_node, i64, %struct.rb_vm_struct*, %struct.rb_execution_context_struct*, i64, %struct.rb_calling_info*, i64, i64, i64, i8, i8, i32, %struct.native_thread_data_struct, i8*, i64, i64, i64, i64, %union.pthread_mutex_t, %struct.rb_unblock_callback, i64, %struct.rb_mutex_struct*, %struct.rb_thread_list_struct*, %union.anon.7, i32, i64, %struct.rb_fiber_struct*, [5 x i8*], i64 }
%struct.list_node = type { %struct.list_node*, %struct.list_node* }
%struct.rb_execution_context_struct = type { i64*, i64, %struct.rb_control_frame_struct*, %struct.rb_vm_tag*, %struct.rb_vm_protect_tag*, i32, i32, %struct.rb_fiber_struct*, %struct.rb_thread_struct*, %struct.st_table*, i64, i64, i64*, i64, %struct.rb_ensure_list*, %struct.rb_trace_arg_struct*, i64, i64, i8, i8, i64, %struct.anon.5 }
%struct.rb_control_frame_struct = type { i64*, i64*, %struct.rb_iseq_struct*, i64, i64*, i8*, i64* }
%struct.rb_iseq_struct = type { i64, i64, %struct.rb_iseq_constant_body*, %union.anon.14 }
%struct.rb_iseq_constant_body = type { i32, i32, i64*, %struct.anon, %struct.rb_iseq_location_struct, %struct.iseq_insn_info, i64*, %struct.iseq_catch_table*, %struct.rb_iseq_struct*, %struct.rb_iseq_struct*, %union.iseq_inline_storage_entry*, %struct.rb_call_data*, %struct.anon.13, i32, i32, i32, i32, i32, i8, i64 }
%struct.anon = type { %struct.anon.0, i32, i32, i32, i32, i32, i32, i32, i64*, %struct.rb_iseq_param_keyword* }
%struct.anon.0 = type { i16, [2 x i8] }
%struct.rb_iseq_param_keyword = type { i32, i32, i32, i32, i64*, i64* }
%struct.rb_iseq_location_struct = type { i64, i64, i64, i64, i32, %struct.rb_code_location_struct }
%struct.rb_code_location_struct = type { %struct.rb_code_position_struct, %struct.rb_code_position_struct }
%struct.rb_code_position_struct = type { i32, i32 }
%struct.iseq_insn_info = type { %struct.iseq_insn_info_entry*, i32*, i32, %struct.succ_index_table* }
%struct.iseq_insn_info_entry = type opaque
%struct.succ_index_table = type opaque
%struct.iseq_catch_table = type opaque
%union.iseq_inline_storage_entry = type { %struct.iseq_inline_cache_entry }
%struct.iseq_inline_cache_entry = type { i64, %struct.rb_cref_struct*, i64 }
%struct.rb_cref_struct = type { i64, i64, i64, %struct.rb_cref_struct*, %struct.rb_scope_visi_struct }
%struct.rb_scope_visi_struct = type { i8, [3 x i8] }
%struct.rb_call_data = type { %struct.rb_call_cache, %struct.rb_call_info }
%struct.rb_call_cache = type { i64, [3 x i64], %struct.rb_callable_method_entry_struct*, i64, i64 (%struct.rb_execution_context_struct*, %struct.rb_control_frame_struct*, %struct.rb_calling_info*, %struct.rb_call_data*)*, %union.anon.12 }
%struct.rb_callable_method_entry_struct = type { i64, i64, %struct.rb_method_definition_struct*, i64, i64 }
%struct.rb_method_definition_struct = type { i64, %union.anon.10, i64, i64 }
%union.anon.10 = type { %struct.rb_method_cfunc_struct }
%struct.rb_method_cfunc_struct = type { i64 (...)*, i64 (i64, i32, i64*, i64 (...)*)*, i32 }
%union.anon.12 = type { i32 }
%struct.rb_call_info = type { i64, i32, i32 }
%struct.anon.13 = type { i64, i64, i64, i64* }
%union.anon.14 = type { %struct.anon.15 }
%struct.anon.15 = type { i64, i32 }
%struct.rb_vm_tag = type { i64, i64, [5 x i8*], %struct.rb_vm_tag*, i32 }
%struct.rb_vm_protect_tag = type { %struct.rb_vm_protect_tag* }
%struct.rb_ensure_list = type { %struct.rb_ensure_list*, %struct.rb_ensure_entry }
%struct.rb_ensure_entry = type { i64, i64 (i64)*, i64 }
%struct.rb_trace_arg_struct = type { i32, %struct.rb_execution_context_struct*, %struct.rb_control_frame_struct*, i64, i64, i64, i64, i64, i32, i32, i64 }
%struct.anon.5 = type { i64*, i64*, i64, [1 x %struct.__jmp_buf_tag] }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.rb_calling_info = type { i64, i64, i32, i32 }
%struct.native_thread_data_struct = type { %struct.list_head, %union.anon.6 }
%union.anon.6 = type { %union.pthread_cond_t }
%struct.rb_unblock_callback = type { void (i8*)*, i8* }
%struct.rb_mutex_struct = type opaque
%struct.rb_thread_list_struct = type { %struct.rb_thread_list_struct*, %struct.rb_thread_struct* }
%union.anon.7 = type { %struct.anon.8 }
%struct.anon.8 = type { i64, i64, i32 }
%struct.rb_fiber_struct = type opaque
%struct.anon.3 = type { [65 x i64] }
%struct.rb_hook_list_struct = type { %struct.rb_event_hook_struct*, i32, i32, i32 }
%struct.rb_event_hook_struct = type opaque
%struct.rb_postponed_job_struct = type opaque
%struct.list_head = type { %struct.list_node }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.rb_objspace = type opaque
%struct.rb_at_exit_list = type { void (%struct.rb_vm_struct*)*, %struct.rb_at_exit_list* }
%struct.st_table = type { i8, i8, i8, i32, %struct.st_hash_type*, i64, i64*, i64, i64, %struct.st_table_entry* }
%struct.st_hash_type = type { i32 (i64, i64)*, i64 (i64)* }
%struct.st_table_entry = type opaque
%struct.rb_builtin_function = type opaque
%struct.anon.4 = type { i64, i64, i64, i64 }
%struct.SorbetLineNumberInfo = type { i32, %struct.iseq_insn_info_entry*, i64* }
%struct.FunctionInlineCache = type { %struct.rb_kwarg_call_data }
%struct.rb_kwarg_call_data = type { %struct.rb_call_cache, %struct.rb_call_info_with_kwarg }
%struct.rb_call_info_with_kwarg = type { %struct.rb_call_info, %struct.rb_call_info_kw_arg* }
%struct.rb_call_info_kw_arg = type { i32, [1 x i64] }
%struct.iseq_inline_iv_cache_entry = type { i64, i64 }

@ruby_current_vm_ptr = external local_unnamed_addr global %struct.rb_vm_struct*, align 8
@ruby_current_execution_context_ptr = external local_unnamed_addr global %struct.rb_execution_context_struct*, align 8
@ruby_vm_global_constant_state = external local_unnamed_addr global i64, align 8
@rb_eRuntimeError = external local_unnamed_addr global i64, align 8
@.str.9 = private unnamed_addr constant [95 x i8] c"sorbet_getBuildSCMRevision: Shared objects compiled by sorbet_llvm must be run by sorbet_ruby.\00", align 1
@.str.10 = private unnamed_addr constant [93 x i8] c"sorbet_getIsReleaseBuild: Shared objects compiled by sorbet_llvm must be run by sorbet_ruby.\00", align 1
@"stackFramePrecomputed_func_Object#4plus" = internal unnamed_addr global %struct.rb_iseq_struct* null, align 8
@iseqEncodedArray = internal global [49 x i64] zeroinitializer
@fileLineNumberInfo = internal global %struct.SorbetLineNumberInfo zeroinitializer
@"stackFramePrecomputed_func_Object#5minus" = internal unnamed_addr global %struct.rb_iseq_struct* null, align 8
@ic_- = internal global %struct.FunctionInlineCache zeroinitializer
@"stackFramePrecomputed_func_Object#2lt" = internal unnamed_addr global %struct.rb_iseq_struct* null, align 8
@"stackFramePrecomputed_func_Object#3lte" = internal unnamed_addr global %struct.rb_iseq_struct* null, align 8
@"stackFramePrecomputed_func_<root>.13<static-init>" = internal unnamed_addr global %struct.rb_iseq_struct* null, align 8
@"stackFramePrecomputed_func_<root>.13<static-init>$block_1" = internal unnamed_addr global %struct.rb_iseq_struct* null, align 8
@"stackFramePrecomputed_func_<root>.13<static-init>$block_2" = internal unnamed_addr global %struct.rb_iseq_struct* null, align 8
@"stackFramePrecomputed_func_<root>.13<static-init>$block_3" = internal unnamed_addr global %struct.rb_iseq_struct* null, align 8
@"stackFramePrecomputed_func_<root>.13<static-init>$block_4" = internal unnamed_addr global %struct.rb_iseq_struct* null, align 8
@ic_untyped = internal global %struct.FunctionInlineCache zeroinitializer
@ic_params = internal global %struct.FunctionInlineCache zeroinitializer
@ic_untyped.1 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_returns = internal global %struct.FunctionInlineCache zeroinitializer
@ic_untyped.2 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_params.3 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_untyped.4 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_returns.5 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_untyped.6 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_params.7 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_returns.8 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_untyped.9 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_params.10 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_returns.11 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_extend = internal global %struct.FunctionInlineCache zeroinitializer
@ic_plus = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p = internal global %struct.FunctionInlineCache zeroinitializer
@ic_minus = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.12 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_lt = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.13 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_lt.14 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.15 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_lte = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.16 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_lte.17 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.18 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_lte.19 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.20 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_plus.21 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.22 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_Rational = internal global %struct.FunctionInlineCache zeroinitializer
@ic_plus.23 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.24 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_Complex = internal global %struct.FunctionInlineCache zeroinitializer
@ic_plus.25 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.26 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_minus.27 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.28 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_Rational.29 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_minus.30 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.31 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_Complex.32 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_minus.33 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.34 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_lt.35 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.36 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_Rational.37 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_lt.38 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.39 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_lte.40 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.41 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_Rational.42 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_lte.43 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.44 = internal global %struct.FunctionInlineCache zeroinitializer
@sorbet_moduleStringTable = internal unnamed_addr constant [309 x i8] c"plus\00test/testdata/compiler/float-intrinsics.rb\00Parameter 'x'\00Float\00Parameter 'y'\00T.untyped\00+\00Return value\00minus\00-\00lt\00<\00T::Boolean\00lte\00<=\00<top (required)>\00<block-call>\00block in <top (required)>\00x\00y\00untyped\00T\00params\00returns\00T::Sig\00extend\00normal\00Object\00p\008.9\00Rational\00Kernel\005\00Complex\0015.4\0018\0025.4\005.923\00master\00", align 1
@sorbet_moduleIDTable = internal unnamed_addr global [21 x i64] zeroinitializer, align 8
@sorbet_moduleIDDescriptors = internal unnamed_addr constant [21 x %struct.rb_code_position_struct] [%struct.rb_code_position_struct { i32 0, i32 4 }, %struct.rb_code_position_struct { i32 92, i32 1 }, %struct.rb_code_position_struct { i32 107, i32 5 }, %struct.rb_code_position_struct { i32 113, i32 1 }, %struct.rb_code_position_struct { i32 115, i32 2 }, %struct.rb_code_position_struct { i32 118, i32 1 }, %struct.rb_code_position_struct { i32 131, i32 3 }, %struct.rb_code_position_struct { i32 135, i32 2 }, %struct.rb_code_position_struct { i32 138, i32 16 }, %struct.rb_code_position_struct { i32 155, i32 12 }, %struct.rb_code_position_struct { i32 168, i32 25 }, %struct.rb_code_position_struct { i32 194, i32 1 }, %struct.rb_code_position_struct { i32 196, i32 1 }, %struct.rb_code_position_struct { i32 198, i32 7 }, %struct.rb_code_position_struct { i32 208, i32 6 }, %struct.rb_code_position_struct { i32 215, i32 7 }, %struct.rb_code_position_struct { i32 230, i32 6 }, %struct.rb_code_position_struct { i32 237, i32 6 }, %struct.rb_code_position_struct { i32 251, i32 1 }, %struct.rb_code_position_struct { i32 257, i32 8 }, %struct.rb_code_position_struct { i32 275, i32 7 }], align 8
@sorbet_moduleRubyStringTable = internal unnamed_addr global [13 x i64] zeroinitializer, align 8
@sorbet_moduleRubyStringDescriptors = internal unnamed_addr constant [13 x %struct.rb_code_position_struct] [%struct.rb_code_position_struct { i32 0, i32 4 }, %struct.rb_code_position_struct { i32 5, i32 42 }, %struct.rb_code_position_struct { i32 107, i32 5 }, %struct.rb_code_position_struct { i32 115, i32 2 }, %struct.rb_code_position_struct { i32 131, i32 3 }, %struct.rb_code_position_struct { i32 138, i32 16 }, %struct.rb_code_position_struct { i32 168, i32 25 }, %struct.rb_code_position_struct { i32 253, i32 3 }, %struct.rb_code_position_struct { i32 273, i32 1 }, %struct.rb_code_position_struct { i32 283, i32 4 }, %struct.rb_code_position_struct { i32 288, i32 2 }, %struct.rb_code_position_struct { i32 291, i32 4 }, %struct.rb_code_position_struct { i32 296, i32 5 }], align 8
@guard_epoch_T = linkonce local_unnamed_addr global i64 0
@guarded_const_T = linkonce local_unnamed_addr global i64 0
@rb_cFloat = external local_unnamed_addr constant i64
@"guard_epoch_T::Boolean" = linkonce local_unnamed_addr global i64 0
@"guarded_const_T::Boolean" = linkonce local_unnamed_addr global i64 0
@"guard_epoch_T::Sig" = linkonce local_unnamed_addr global i64 0
@"guarded_const_T::Sig" = linkonce local_unnamed_addr global i64 0
@rb_cObject = external local_unnamed_addr constant i64
@rb_mKernel = external local_unnamed_addr constant i64

declare i64 @rb_float_plus(i64, i64) local_unnamed_addr #0

declare i64 @sorbet_flo_lt(i64, i64) local_unnamed_addr #0

declare i64 @sorbet_flo_le(i64, i64) local_unnamed_addr #0

; Function Attrs: nounwind readnone willreturn
declare i64 @rb_id2sym(i64) local_unnamed_addr #1

; Function Attrs: cold noreturn
declare void @sorbet_cast_failure(i64, i8*, i8*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @sorbet_raiseArity(i32, i32, i32) local_unnamed_addr #3

declare %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64, i64, i64, i64, %struct.rb_iseq_struct*, i32, i32, %struct.SorbetLineNumberInfo*, i64*, i32, i32) local_unnamed_addr #0

declare void @sorbet_initLineNumberInfo(%struct.SorbetLineNumberInfo*, i64*, i32) local_unnamed_addr #0

declare i64 @sorbet_getConstant(i8*, i64) local_unnamed_addr #0

declare i64 @sorbet_readRealpath() local_unnamed_addr #0

declare void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) local_unnamed_addr #0

declare i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache*, i64) local_unnamed_addr #0

declare void @sorbet_setMethodStackFrame(%struct.rb_execution_context_struct*, %struct.rb_control_frame_struct*, %struct.rb_iseq_struct*) local_unnamed_addr #0

declare void @sorbet_vm_register_sig(i64, i64, i64, i64, i64 (i64, i64, i32, i64*, i64)*) local_unnamed_addr #0

declare void @sorbet_vm_define_method(i64, i8*, i64 (i32, i64*, i64, %struct.rb_control_frame_struct*, i8*, i8*)*, i8*, %struct.rb_iseq_struct*, i1 zeroext) local_unnamed_addr #0

declare void @sorbet_vm_intern_ids(i64*, %struct.rb_code_position_struct*, i32, i8*) local_unnamed_addr #0

declare void @sorbet_vm_init_string_table(i64*, %struct.rb_code_position_struct*, i32, i8*) local_unnamed_addr #0

; Function Attrs: noreturn
declare void @rb_raise(i64, i8*, ...) local_unnamed_addr #3

declare i32 @rb_threadptr_execute_interrupts(%struct.rb_thread_struct*, i32) local_unnamed_addr #0

; Function Attrs: allocsize(0,1)
declare noalias nonnull i8* @ruby_xcalloc(i64, i64) local_unnamed_addr #4

; Function Attrs: allocsize(0,1)
declare noalias nonnull i8* @ruby_xmalloc2(i64, i64) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define weak i32 @sorbet_getIsReleaseBuild() local_unnamed_addr #6 {
  %1 = load i64, i64* @rb_eRuntimeError, align 8, !tbaa !6
  tail call void (i64, i8*, ...) @rb_raise(i64 %1, i8* noundef getelementptr inbounds ([93 x i8], [93 x i8]* @.str.10, i64 0, i64 0)) #14
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define weak i8* @sorbet_getBuildSCMRevision() local_unnamed_addr #6 {
  %1 = load i64, i64* @rb_eRuntimeError, align 8, !tbaa !6
  tail call void (i64, i8*, ...) @rb_raise(i64 %1, i8* noundef getelementptr inbounds ([95 x i8], [95 x i8]* @.str.9, i64 0, i64 0)) #14
  unreachable
}

define internal fastcc void @sorbet_globalConstructors(i64 %realpath) unnamed_addr {
allocRubyIds:
  tail call void @sorbet_vm_intern_ids(i64* noundef getelementptr inbounds ([21 x i64], [21 x i64]* @sorbet_moduleIDTable, i32 0, i32 0), %struct.rb_code_position_struct* noundef getelementptr inbounds ([21 x %struct.rb_code_position_struct], [21 x %struct.rb_code_position_struct]* @sorbet_moduleIDDescriptors, i32 0, i32 0), i32 noundef 21, i8* noundef getelementptr inbounds ([309 x i8], [309 x i8]* @sorbet_moduleStringTable, i32 0, i32 0))
  tail call void @sorbet_vm_init_string_table(i64* noundef getelementptr inbounds ([13 x i64], [13 x i64]* @sorbet_moduleRubyStringTable, i32 0, i32 0), %struct.rb_code_position_struct* noundef getelementptr inbounds ([13 x %struct.rb_code_position_struct], [13 x %struct.rb_code_position_struct]* @sorbet_moduleRubyStringDescriptors, i32 0, i32 0), i32 noundef 13, i8* noundef getelementptr inbounds ([309 x i8], [309 x i8]* @sorbet_moduleStringTable, i32 0, i32 0))
  tail call void @sorbet_initLineNumberInfo(%struct.SorbetLineNumberInfo* noundef @fileLineNumberInfo, i64* noundef getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i32 0, i32 0), i32 noundef 49)
  tail call fastcc void @"Constr_stackFramePrecomputed_func_Object#4plus"(i64 %realpath)
  tail call fastcc void @"Constr_stackFramePrecomputed_func_Object#5minus"(i64 %realpath)
  %rubyId_- = load i64, i64* getelementptr inbounds ([21 x i64], [21 x i64]* @sorbet_moduleIDTable, i64 0, i64 3), align 8, !dbg !10, !invariant.load !5
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_-, i64 %rubyId_-, i32 noundef 16, i32 noundef 1, i32 noundef 0), !dbg !10
  tail call fastcc void @"Constr_stackFramePrecomputed_func_Object#2lt"(i64 %realpath)
  tail call fastcc void @"Constr_stackFramePrecomputed_func_Object#3lte"(i64 %realpath)
  tail call fastcc void @"Constr_stackFramePrecomputed_func_<root>.13<static-init>"(i64 %realpath)
  tail call fastcc void @"Constr_stackFramePrecomputed_func_<root>.13<static-init>$block_1"(i64 %realpath)
  tail call fastcc void @"Constr_stackFramePrecomputed_func_<root>.13<static-init>$block_2"(i64 %realpath)
  tail call fastcc void @"Constr_stackFramePrecomputed_func_<root>.13<static-init>$block_3"(i64 %realpath)
  tail call fastcc void @"Constr_stackFramePrecomputed_func_<root>.13<static-init>$block_4"(i64 %realpath)
  %rubyId_untyped = load i64, i64* getelementptr inbounds ([21 x i64], [21 x i64]* @sorbet_moduleIDTable, i64 0, i64 13), align 8, !dbg !15, !invariant.load !5
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_untyped, i64 %rubyId_untyped, i32 noundef 16, i32 noundef 0, i32 noundef 0), !dbg !15
  %rubyId_params = load i64, i64* getelementptr inbounds ([21 x i64], [21 x i64]* @sorbet_moduleIDTable, i64 0, i64 14), align 8, !dbg !18, !invariant.load !5
  %rubyId_x = load i64, i64* getelementptr inbounds ([21 x i64], [21 x i64]* @sorbet_moduleIDTable, i64 0, i64 11), align 8, !dbg !18, !invariant.load !5
  %rubyId_y = load i64, i64* getelementptr inbounds ([21 x i64], [21 x i64]* @sorbet_moduleIDTable, i64 0, i64 12), align 8, !dbg !18, !invariant.load !5
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_params, i64 %rubyId_params, i32 noundef 68, i32 noundef 2, i32 noundef 2, i64 %rubyId_x, i64 %rubyId_y), !dbg !18
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_untyped.1, i64 %rubyId_untyped, i32 noundef 16, i32 noundef 0, i32 noundef 0), !dbg !19
  %rubyId_returns = load i64, i64* getelementptr inbounds ([21 x i64], [21 x i64]* @sorbet_moduleIDTable, i64 0, i64 15), align 8, !dbg !18, !invariant.load !5
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_returns, i64 %rubyId_returns, i32 noundef 16, i32 noundef 1, i32 noundef 0), !dbg !18
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_untyped.2, i64 %rubyId_untyped, i32 noundef 16, i32 noundef 0, i32 noundef 0), !dbg !20
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_params.3, i64 %rubyId_params, i32 noundef 68, i32 noundef 2, i32 noundef 2, i64 %rubyId_x, i64 %rubyId_y), !dbg !22
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_untyped.4, i64 %rubyId_untyped, i32 noundef 16, i32 noundef 0, i32 noundef 0), !dbg !23
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_returns.5, i64 %rubyId_returns, i32 noundef 16, i32 noundef 1, i32 noundef 0), !dbg !22
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_untyped.6, i64 %rubyId_untyped, i32 noundef 16, i32 noundef 0, i32 noundef 0), !dbg !24
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_params.7, i64 %rubyId_params, i32 noundef 68, i32 noundef 2, i32 noundef 2, i64 %rubyId_x, i64 %rubyId_y), !dbg !26
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_returns.8, i64 %rubyId_returns, i32 noundef 16, i32 noundef 1, i32 noundef 0), !dbg !26
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_untyped.9, i64 %rubyId_untyped, i32 noundef 16, i32 noundef 0, i32 noundef 0), !dbg !27
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_params.10, i64 %rubyId_params, i32 noundef 68, i32 noundef 2, i32 noundef 2, i64 %rubyId_x, i64 %rubyId_y), !dbg !29
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_returns.11, i64 %rubyId_returns, i32 noundef 16, i32 noundef 1, i32 noundef 0), !dbg !29
  %rubyId_extend = load i64, i64* getelementptr inbounds ([21 x i64], [21 x i64]* @sorbet_moduleIDTable, i64 0, i64 16), align 8, !dbg !30, !invariant.load !5
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_extend, i64 %rubyId_extend, i32 noundef 20, i32 noundef 1, i32 noundef 0), !dbg !30
  %rubyId_plus = load i64, i64* getelementptr inbounds ([21 x i64], [21 x i64]* @sorbet_moduleIDTable, i64 0, i64 0), align 8, !dbg !31, !invariant.load !5
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_plus, i64 %rubyId_plus, i32 noundef 20, i32 noundef 2, i32 noundef 0), !dbg !31
  %rubyId_p = load i64, i64* getelementptr inbounds ([21 x i64], [21 x i64]* @sorbet_moduleIDTable, i64 0, i64 18), align 8, !dbg !32, !invariant.load !5
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_p, i64 %rubyId_p, i32 noundef 20, i32 noundef 1, i32 noundef 0), !dbg !32
  %rubyId_minus = load i64, i64* getelementptr inbounds ([21 x i64], [21 x i64]* @sorbet_moduleIDTable, i64 0, i64 2), align 8, !dbg !33, !invariant.load !5
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_minus, i64 %rubyId_minus, i32 noundef 20, i32 noundef 2, i32 noundef 0), !dbg !33
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_p.12, i64 %rubyId_p, i32 noundef 20, i32 noundef 1, i32 noundef 0), !dbg !34
  %rubyId_lt = load i64, i64* getelementptr inbounds ([21 x i64], [21 x i64]* @sorbet_moduleIDTable, i64 0, i64 4), align 8, !dbg !35, !invariant.load !5
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_lt, i64 %rubyId_lt, i32 noundef 20, i32 noundef 2, i32 noundef 0), !dbg !35
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_p.13, i64 %rubyId_p, i32 noundef 20, i32 noundef 1, i32 noundef 0), !dbg !36
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_lt.14, i64 %rubyId_lt, i32 noundef 20, i32 noundef 2, i32 noundef 0), !dbg !37
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_p.15, i64 %rubyId_p, i32 noundef 20, i32 noundef 1, i32 noundef 0), !dbg !38
  %rubyId_lte = load i64, i64* getelementptr inbounds ([21 x i64], [21 x i64]* @sorbet_moduleIDTable, i64 0, i64 6), align 8, !dbg !39, !invariant.load !5
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_lte, i64 %rubyId_lte, i32 noundef 20, i32 noundef 2, i32 noundef 0), !dbg !39
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_p.16, i64 %rubyId_p, i32 noundef 20, i32 noundef 1, i32 noundef 0), !dbg !40
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_lte.17, i64 %rubyId_lte, i32 noundef 20, i32 noundef 2, i32 noundef 0), !dbg !41
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_p.18, i64 %rubyId_p, i32 noundef 20, i32 noundef 1, i32 noundef 0), !dbg !42
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_lte.19, i64 %rubyId_lte, i32 noundef 20, i32 noundef 2, i32 noundef 0), !dbg !43
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_p.20, i64 %rubyId_p, i32 noundef 20, i32 noundef 1, i32 noundef 0), !dbg !44
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_plus.21, i64 %rubyId_plus, i32 noundef 20, i32 noundef 2, i32 noundef 0), !dbg !45
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_p.22, i64 %rubyId_p, i32 noundef 20, i32 noundef 1, i32 noundef 0), !dbg !46
  %rubyId_Rational = load i64, i64* getelementptr inbounds ([21 x i64], [21 x i64]* @sorbet_moduleIDTable, i64 0, i64 19), align 8, !dbg !47, !invariant.load !5
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_Rational, i64 %rubyId_Rational, i32 noundef 16, i32 noundef 1, i32 noundef 0), !dbg !47
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_plus.23, i64 %rubyId_plus, i32 noundef 20, i32 noundef 2, i32 noundef 0), !dbg !48
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_p.24, i64 %rubyId_p, i32 noundef 20, i32 noundef 1, i32 noundef 0), !dbg !49
  %rubyId_Complex = load i64, i64* getelementptr inbounds ([21 x i64], [21 x i64]* @sorbet_moduleIDTable, i64 0, i64 20), align 8, !dbg !50, !invariant.load !5
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_Complex, i64 %rubyId_Complex, i32 noundef 16, i32 noundef 2, i32 noundef 0), !dbg !50
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_plus.25, i64 %rubyId_plus, i32 noundef 20, i32 noundef 2, i32 noundef 0), !dbg !51
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_p.26, i64 %rubyId_p, i32 noundef 20, i32 noundef 1, i32 noundef 0), !dbg !52
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_minus.27, i64 %rubyId_minus, i32 noundef 20, i32 noundef 2, i32 noundef 0), !dbg !53
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_p.28, i64 %rubyId_p, i32 noundef 20, i32 noundef 1, i32 noundef 0), !dbg !54
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_Rational.29, i64 %rubyId_Rational, i32 noundef 16, i32 noundef 1, i32 noundef 0), !dbg !55
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_minus.30, i64 %rubyId_minus, i32 noundef 20, i32 noundef 2, i32 noundef 0), !dbg !56
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_p.31, i64 %rubyId_p, i32 noundef 20, i32 noundef 1, i32 noundef 0), !dbg !57
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_Complex.32, i64 %rubyId_Complex, i32 noundef 16, i32 noundef 2, i32 noundef 0), !dbg !58
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_minus.33, i64 %rubyId_minus, i32 noundef 20, i32 noundef 2, i32 noundef 0), !dbg !59
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_p.34, i64 %rubyId_p, i32 noundef 20, i32 noundef 1, i32 noundef 0), !dbg !60
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_lt.35, i64 %rubyId_lt, i32 noundef 20, i32 noundef 2, i32 noundef 0), !dbg !61
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_p.36, i64 %rubyId_p, i32 noundef 20, i32 noundef 1, i32 noundef 0), !dbg !62
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_Rational.37, i64 %rubyId_Rational, i32 noundef 16, i32 noundef 1, i32 noundef 0), !dbg !63
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_lt.38, i64 %rubyId_lt, i32 noundef 20, i32 noundef 2, i32 noundef 0), !dbg !64
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_p.39, i64 %rubyId_p, i32 noundef 20, i32 noundef 1, i32 noundef 0), !dbg !65
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_lte.40, i64 %rubyId_lte, i32 noundef 20, i32 noundef 2, i32 noundef 0), !dbg !66
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_p.41, i64 %rubyId_p, i32 noundef 20, i32 noundef 1, i32 noundef 0), !dbg !67
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_Rational.42, i64 %rubyId_Rational, i32 noundef 16, i32 noundef 1, i32 noundef 0), !dbg !68
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_lte.43, i64 %rubyId_lte, i32 noundef 20, i32 noundef 2, i32 noundef 0), !dbg !69
  tail call void (%struct.FunctionInlineCache*, i64, i32, i32, i32, ...) @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_p.44, i64 %rubyId_p, i32 noundef 20, i32 noundef 1, i32 noundef 0), !dbg !70
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal i64 @"func_Object#4plus"(i32 %argc, i64* nocapture readonly %argArray, i64 %selfRaw, %struct.rb_control_frame_struct* nocapture nonnull writeonly align 8 dereferenceable(8) %cfp, i8* nocapture nofree readnone %calling, i8* nocapture nofree readnone %callData) #7 !dbg !71 {
functionEntryInitializers:
  %callArgs = alloca [2 x i64], align 8
  %0 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 0
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 8), i64** %0, align 8, !tbaa !72
  %tooManyArgs = icmp ugt i32 %argc, 2, !dbg !74
  %tooFewArgs = icmp ult i32 %argc, 2, !dbg !74
  %or.cond = or i1 %tooManyArgs, %tooFewArgs, !dbg !74
  br i1 %or.cond, label %argCountFailBlock, label %fillRequiredArgs, !dbg !74, !prof !75

argCountFailBlock:                                ; preds = %functionEntryInitializers
  tail call void @sorbet_raiseArity(i32 %argc, i32 noundef 2, i32 noundef 2) #15, !dbg !74
  unreachable, !dbg !74

fillRequiredArgs:                                 ; preds = %functionEntryInitializers
  %rawArg_x = load i64, i64* %argArray, align 8, !dbg !74
  %1 = getelementptr i64, i64* %argArray, i32 1, !dbg !74
  %rawArg_y = load i64, i64* %1, align 8, !dbg !74
  %2 = and i64 %rawArg_x, 3, !dbg !76
  %3 = icmp eq i64 %2, 2, !dbg !76
  br i1 %3, label %typeTestSuccess6, label %4, !dbg !76

4:                                                ; preds = %fillRequiredArgs
  %5 = and i64 %rawArg_x, 7, !dbg !76
  %6 = icmp ne i64 %5, 0, !dbg !76
  %7 = and i64 %rawArg_x, -9, !dbg !76
  %8 = icmp eq i64 %7, 0, !dbg !76
  %9 = or i1 %6, %8, !dbg !76
  br i1 %9, label %codeRepl21, label %sorbet_isa_Float.exit, !dbg !76

sorbet_isa_Float.exit:                            ; preds = %4
  %10 = inttoptr i64 %rawArg_x to %struct.iseq_inline_iv_cache_entry*, !dbg !76
  %11 = getelementptr inbounds %struct.iseq_inline_iv_cache_entry, %struct.iseq_inline_iv_cache_entry* %10, i64 0, i32 0, !dbg !76
  %12 = load i64, i64* %11, align 8, !dbg !76, !tbaa !77
  %13 = and i64 %12, 31, !dbg !76
  %14 = icmp eq i64 %13, 4, !dbg !76
  br i1 %14, label %typeTestSuccess6, label %codeRepl21, !dbg !76, !prof !79

codeRepl21:                                       ; preds = %4, %sorbet_isa_Float.exit
  tail call fastcc void @"func_Object#2lt.cold.3"(i64 %rawArg_x) #16, !dbg !76
  unreachable

typeTestSuccess6:                                 ; preds = %fillRequiredArgs, %sorbet_isa_Float.exit
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 9), i64** %0, align 8, !dbg !80, !tbaa !72
  %callArgs0Addr = getelementptr [2 x i64], [2 x i64]* %callArgs, i64 0, i64 0, !dbg !81
  store i64 %rawArg_y, i64* %callArgs0Addr, align 8, !dbg !81
  tail call void @llvm.experimental.noalias.scope.decl(metadata !82), !dbg !81
  %15 = tail call i64 @rb_float_plus(i64 %rawArg_x, i64 %rawArg_y) #17, !dbg !81, !noalias !82
  %16 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !81, !tbaa !72
  %17 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %16, i64 0, i32 5, !dbg !81
  %18 = load i32, i32* %17, align 8, !dbg !81, !tbaa !85
  %19 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %16, i64 0, i32 6, !dbg !81
  %20 = load i32, i32* %19, align 4, !dbg !81, !tbaa !89
  %21 = xor i32 %20, -1, !dbg !81
  %22 = and i32 %21, %18, !dbg !81
  %23 = icmp eq i32 %22, 0, !dbg !81
  br i1 %23, label %typeTestSuccess13, label %24, !dbg !81, !prof !79

24:                                               ; preds = %typeTestSuccess6
  %25 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %16, i64 0, i32 8, !dbg !81
  %26 = load %struct.rb_thread_struct*, %struct.rb_thread_struct** %25, align 8, !dbg !81, !tbaa !90
  %27 = tail call i32 @rb_threadptr_execute_interrupts(%struct.rb_thread_struct* %26, i32 noundef 0) #17, !dbg !81
  br label %typeTestSuccess13, !dbg !81

typeTestSuccess13:                                ; preds = %24, %typeTestSuccess6
  ret i64 %15
}

; Function Attrs: ssp
define internal fastcc void @"Constr_stackFramePrecomputed_func_Object#4plus"(i64 %realpath) unnamed_addr #8 {
entryInitializers:
  %rubyId_plus = load i64, i64* getelementptr inbounds ([21 x i64], [21 x i64]* @sorbet_moduleIDTable, i64 0, i64 0), align 8, !invariant.load !5
  %rubyStr_plus = load i64, i64* getelementptr inbounds ([13 x i64], [13 x i64]* @sorbet_moduleRubyStringTable, i64 0, i64 0), align 8, !invariant.load !5
  %"rubyStr_test/testdata/compiler/float-intrinsics.rb" = load i64, i64* getelementptr inbounds ([13 x i64], [13 x i64]* @sorbet_moduleRubyStringTable, i64 0, i64 1), align 8, !invariant.load !5
  %locals = alloca i64, i32 0, align 8
  %0 = call %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64 %rubyStr_plus, i64 %rubyId_plus, i64 %"rubyStr_test/testdata/compiler/float-intrinsics.rb", i64 %realpath, %struct.rb_iseq_struct* noundef null, i32 noundef 1, i32 noundef 8, %struct.SorbetLineNumberInfo* noundef @fileLineNumberInfo, i64* noundef nonnull %locals, i32 noundef 0, i32 noundef 2)
  store %struct.rb_iseq_struct* %0, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_Object#4plus", align 8
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal i64 @"func_Object#5minus"(i32 %argc, i64* nocapture readonly %argArray, i64 %selfRaw, %struct.rb_control_frame_struct* nonnull align 8 dereferenceable(8) %cfp, i8* nocapture nofree readnone %calling, i8* nocapture nofree readnone %callData) #7 !dbg !11 {
functionEntryInitializers:
  %0 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 0
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 13), i64** %0, align 8, !tbaa !72
  %tooManyArgs = icmp ugt i32 %argc, 2, !dbg !91
  %tooFewArgs = icmp ult i32 %argc, 2, !dbg !91
  %or.cond = or i1 %tooManyArgs, %tooFewArgs, !dbg !91
  br i1 %or.cond, label %argCountFailBlock, label %fillRequiredArgs, !dbg !91, !prof !75

argCountFailBlock:                                ; preds = %functionEntryInitializers
  tail call void @sorbet_raiseArity(i32 %argc, i32 noundef 2, i32 noundef 2) #15, !dbg !91
  unreachable, !dbg !91

fillRequiredArgs:                                 ; preds = %functionEntryInitializers
  %1 = getelementptr i64, i64* %argArray, i32 1, !dbg !91
  %2 = bitcast i64* %argArray to <2 x i64>*, !dbg !91
  %3 = load <2 x i64>, <2 x i64>* %2, align 8, !dbg !91
  %4 = extractelement <2 x i64> %3, i32 0, !dbg !92
  %5 = and i64 %4, 3, !dbg !92
  %6 = icmp eq i64 %5, 2, !dbg !92
  br i1 %6, label %typeTestSuccess6, label %7, !dbg !92

7:                                                ; preds = %fillRequiredArgs
  %8 = and i64 %4, 7, !dbg !92
  %9 = icmp ne i64 %8, 0, !dbg !92
  %10 = and i64 %4, -9, !dbg !92
  %11 = icmp eq i64 %10, 0, !dbg !92
  %12 = or i1 %9, %11, !dbg !92
  br i1 %12, label %codeRepl19, label %sorbet_isa_Float.exit, !dbg !92

sorbet_isa_Float.exit:                            ; preds = %7
  %13 = inttoptr i64 %4 to %struct.iseq_inline_iv_cache_entry*, !dbg !92
  %14 = getelementptr inbounds %struct.iseq_inline_iv_cache_entry, %struct.iseq_inline_iv_cache_entry* %13, i64 0, i32 0, !dbg !92
  %15 = load i64, i64* %14, align 8, !dbg !92, !tbaa !77
  %16 = and i64 %15, 31, !dbg !92
  %17 = icmp eq i64 %16, 4, !dbg !92
  br i1 %17, label %typeTestSuccess6, label %codeRepl19, !dbg !92, !prof !79

codeRepl19:                                       ; preds = %7, %sorbet_isa_Float.exit
  tail call fastcc void @"func_Object#2lt.cold.3"(i64 %4) #16, !dbg !92
  unreachable

typeTestSuccess6:                                 ; preds = %fillRequiredArgs, %sorbet_isa_Float.exit
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 14), i64** %0, align 8, !dbg !93, !tbaa !72
  %18 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !10
  %19 = load i64*, i64** %18, align 8, !dbg !10
  %20 = getelementptr inbounds i64, i64* %19, i64 1, !dbg !10
  %21 = bitcast i64* %19 to <2 x i64>*, !dbg !10
  store <2 x i64> %3, <2 x i64>* %21, align 8, !dbg !10, !tbaa !6
  %22 = getelementptr inbounds i64, i64* %20, i64 1, !dbg !10
  store i64* %22, i64** %18, align 8, !dbg !10
  %send = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_-, i64 0), !dbg !10
  ret i64 %send
}

; Function Attrs: ssp
define internal fastcc void @"Constr_stackFramePrecomputed_func_Object#5minus"(i64 %realpath) unnamed_addr #8 {
entryInitializers:
  %rubyId_minus = load i64, i64* getelementptr inbounds ([21 x i64], [21 x i64]* @sorbet_moduleIDTable, i64 0, i64 2), align 8, !invariant.load !5
  %rubyStr_minus = load i64, i64* getelementptr inbounds ([13 x i64], [13 x i64]* @sorbet_moduleRubyStringTable, i64 0, i64 2), align 8, !invariant.load !5
  %"rubyStr_test/testdata/compiler/float-intrinsics.rb" = load i64, i64* getelementptr inbounds ([13 x i64], [13 x i64]* @sorbet_moduleRubyStringTable, i64 0, i64 1), align 8, !invariant.load !5
  %locals = alloca i64, i32 0, align 8
  %0 = call %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64 %rubyStr_minus, i64 %rubyId_minus, i64 %"rubyStr_test/testdata/compiler/float-intrinsics.rb", i64 %realpath, %struct.rb_iseq_struct* noundef null, i32 noundef 1, i32 noundef 13, %struct.SorbetLineNumberInfo* noundef @fileLineNumberInfo, i64* noundef nonnull %locals, i32 noundef 0, i32 noundef 2)
  store %struct.rb_iseq_struct* %0, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_Object#5minus", align 8
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal i64 @"func_Object#2lt"(i32 %argc, i64* nocapture readonly %argArray, i64 %selfRaw, %struct.rb_control_frame_struct* nocapture nonnull writeonly align 8 dereferenceable(8) %cfp, i8* nocapture nofree readnone %calling, i8* nocapture nofree readnone %callData) #7 !dbg !94 {
functionEntryInitializers:
  %callArgs = alloca [2 x i64], align 8
  %0 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 0
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 18), i64** %0, align 8, !tbaa !72
  %tooManyArgs = icmp ugt i32 %argc, 2, !dbg !95
  %tooFewArgs = icmp ult i32 %argc, 2, !dbg !95
  %or.cond = or i1 %tooManyArgs, %tooFewArgs, !dbg !95
  br i1 %or.cond, label %argCountFailBlock, label %fillRequiredArgs, !dbg !95, !prof !75

argCountFailBlock:                                ; preds = %functionEntryInitializers
  tail call void @sorbet_raiseArity(i32 %argc, i32 noundef 2, i32 noundef 2) #15, !dbg !95
  unreachable, !dbg !95

fillRequiredArgs:                                 ; preds = %functionEntryInitializers
  %rawArg_x = load i64, i64* %argArray, align 8, !dbg !95
  %1 = getelementptr i64, i64* %argArray, i32 1, !dbg !95
  %rawArg_y = load i64, i64* %1, align 8, !dbg !95
  %2 = and i64 %rawArg_x, 3, !dbg !96
  %3 = icmp eq i64 %2, 2, !dbg !96
  br i1 %3, label %typeTestSuccess6, label %4, !dbg !96

4:                                                ; preds = %fillRequiredArgs
  %5 = and i64 %rawArg_x, 7, !dbg !96
  %6 = icmp ne i64 %5, 0, !dbg !96
  %7 = and i64 %rawArg_x, -9, !dbg !96
  %8 = icmp eq i64 %7, 0, !dbg !96
  %9 = or i1 %6, %8, !dbg !96
  br i1 %9, label %codeRepl21, label %sorbet_isa_Float.exit, !dbg !96

sorbet_isa_Float.exit:                            ; preds = %4
  %10 = inttoptr i64 %rawArg_x to %struct.iseq_inline_iv_cache_entry*, !dbg !96
  %11 = getelementptr inbounds %struct.iseq_inline_iv_cache_entry, %struct.iseq_inline_iv_cache_entry* %10, i64 0, i32 0, !dbg !96
  %12 = load i64, i64* %11, align 8, !dbg !96, !tbaa !77
  %13 = and i64 %12, 31, !dbg !96
  %14 = icmp eq i64 %13, 4, !dbg !96
  br i1 %14, label %typeTestSuccess6, label %codeRepl21, !dbg !96, !prof !79

codeRepl21:                                       ; preds = %4, %sorbet_isa_Float.exit
  tail call fastcc void @"func_Object#2lt.cold.3"(i64 %rawArg_x) #16, !dbg !96
  unreachable

typeTestSuccess6:                                 ; preds = %fillRequiredArgs, %sorbet_isa_Float.exit
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 19), i64** %0, align 8, !dbg !97, !tbaa !72
  %callArgs0Addr = getelementptr [2 x i64], [2 x i64]* %callArgs, i64 0, i64 0, !dbg !98
  store i64 %rawArg_y, i64* %callArgs0Addr, align 8, !dbg !98
  tail call void @llvm.experimental.noalias.scope.decl(metadata !99), !dbg !98
  %15 = tail call i64 @sorbet_flo_lt(i64 %rawArg_x, i64 %rawArg_y) #17, !dbg !98, !noalias !99
  %16 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !98, !tbaa !72
  %17 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %16, i64 0, i32 5, !dbg !98
  %18 = load i32, i32* %17, align 8, !dbg !98, !tbaa !85
  %19 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %16, i64 0, i32 6, !dbg !98
  %20 = load i32, i32* %19, align 4, !dbg !98, !tbaa !89
  %21 = xor i32 %20, -1, !dbg !98
  %22 = and i32 %21, %18, !dbg !98
  %23 = icmp eq i32 %22, 0, !dbg !98
  br i1 %23, label %rb_vm_check_ints.exit, label %24, !dbg !98, !prof !79

24:                                               ; preds = %typeTestSuccess6
  %25 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %16, i64 0, i32 8, !dbg !98
  %26 = load %struct.rb_thread_struct*, %struct.rb_thread_struct** %25, align 8, !dbg !98, !tbaa !90
  %27 = tail call i32 @rb_threadptr_execute_interrupts(%struct.rb_thread_struct* %26, i32 noundef 0) #17, !dbg !98
  br label %rb_vm_check_ints.exit, !dbg !98

rb_vm_check_ints.exit:                            ; preds = %typeTestSuccess6, %24
  switch i64 %15, label %codeRepl [
    i64 20, label %typeTestSuccess13
    i64 0, label %typeTestSuccess13
  ], !prof !102

typeTestSuccess13:                                ; preds = %rb_vm_check_ints.exit, %rb_vm_check_ints.exit
  ret i64 %15

codeRepl:                                         ; preds = %rb_vm_check_ints.exit
  tail call fastcc void @"func_Object#2lt.cold.1"(i64 %15) #16, !dbg !103
  unreachable
}

; Function Attrs: ssp
define internal fastcc void @"Constr_stackFramePrecomputed_func_Object#2lt"(i64 %realpath) unnamed_addr #8 {
entryInitializers:
  %rubyId_lt = load i64, i64* getelementptr inbounds ([21 x i64], [21 x i64]* @sorbet_moduleIDTable, i64 0, i64 4), align 8, !invariant.load !5
  %rubyStr_lt = load i64, i64* getelementptr inbounds ([13 x i64], [13 x i64]* @sorbet_moduleRubyStringTable, i64 0, i64 3), align 8, !invariant.load !5
  %"rubyStr_test/testdata/compiler/float-intrinsics.rb" = load i64, i64* getelementptr inbounds ([13 x i64], [13 x i64]* @sorbet_moduleRubyStringTable, i64 0, i64 1), align 8, !invariant.load !5
  %locals = alloca i64, i32 0, align 8
  %0 = call %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64 %rubyStr_lt, i64 %rubyId_lt, i64 %"rubyStr_test/testdata/compiler/float-intrinsics.rb", i64 %realpath, %struct.rb_iseq_struct* noundef null, i32 noundef 1, i32 noundef 18, %struct.SorbetLineNumberInfo* noundef @fileLineNumberInfo, i64* noundef nonnull %locals, i32 noundef 0, i32 noundef 2)
  store %struct.rb_iseq_struct* %0, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_Object#2lt", align 8
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal i64 @"func_Object#3lte"(i32 %argc, i64* nocapture readonly %argArray, i64 %selfRaw, %struct.rb_control_frame_struct* nocapture nonnull writeonly align 8 dereferenceable(8) %cfp, i8* nocapture nofree readnone %calling, i8* nocapture nofree readnone %callData) #7 !dbg !104 {
functionEntryInitializers:
  %callArgs = alloca [2 x i64], align 8
  %0 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 0
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 23), i64** %0, align 8, !tbaa !72
  %tooManyArgs = icmp ugt i32 %argc, 2, !dbg !105
  %tooFewArgs = icmp ult i32 %argc, 2, !dbg !105
  %or.cond = or i1 %tooManyArgs, %tooFewArgs, !dbg !105
  br i1 %or.cond, label %argCountFailBlock, label %fillRequiredArgs, !dbg !105, !prof !75

argCountFailBlock:                                ; preds = %functionEntryInitializers
  tail call void @sorbet_raiseArity(i32 %argc, i32 noundef 2, i32 noundef 2) #15, !dbg !105
  unreachable, !dbg !105

fillRequiredArgs:                                 ; preds = %functionEntryInitializers
  %rawArg_x = load i64, i64* %argArray, align 8, !dbg !105
  %1 = getelementptr i64, i64* %argArray, i32 1, !dbg !105
  %rawArg_y = load i64, i64* %1, align 8, !dbg !105
  %2 = and i64 %rawArg_x, 3, !dbg !106
  %3 = icmp eq i64 %2, 2, !dbg !106
  br i1 %3, label %typeTestSuccess6, label %4, !dbg !106

4:                                                ; preds = %fillRequiredArgs
  %5 = and i64 %rawArg_x, 7, !dbg !106
  %6 = icmp ne i64 %5, 0, !dbg !106
  %7 = and i64 %rawArg_x, -9, !dbg !106
  %8 = icmp eq i64 %7, 0, !dbg !106
  %9 = or i1 %6, %8, !dbg !106
  br i1 %9, label %codeRepl21, label %sorbet_isa_Float.exit, !dbg !106

sorbet_isa_Float.exit:                            ; preds = %4
  %10 = inttoptr i64 %rawArg_x to %struct.iseq_inline_iv_cache_entry*, !dbg !106
  %11 = getelementptr inbounds %struct.iseq_inline_iv_cache_entry, %struct.iseq_inline_iv_cache_entry* %10, i64 0, i32 0, !dbg !106
  %12 = load i64, i64* %11, align 8, !dbg !106, !tbaa !77
  %13 = and i64 %12, 31, !dbg !106
  %14 = icmp eq i64 %13, 4, !dbg !106
  br i1 %14, label %typeTestSuccess6, label %codeRepl21, !dbg !106, !prof !79

codeRepl21:                                       ; preds = %4, %sorbet_isa_Float.exit
  tail call fastcc void @"func_Object#2lt.cold.3"(i64 %rawArg_x) #16, !dbg !106
  unreachable

typeTestSuccess6:                                 ; preds = %fillRequiredArgs, %sorbet_isa_Float.exit
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 24), i64** %0, align 8, !dbg !107, !tbaa !72
  %callArgs0Addr = getelementptr [2 x i64], [2 x i64]* %callArgs, i64 0, i64 0, !dbg !108
  store i64 %rawArg_y, i64* %callArgs0Addr, align 8, !dbg !108
  tail call void @llvm.experimental.noalias.scope.decl(metadata !109), !dbg !108
  %15 = tail call i64 @sorbet_flo_le(i64 %rawArg_x, i64 %rawArg_y) #17, !dbg !108, !noalias !109
  %16 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !108, !tbaa !72
  %17 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %16, i64 0, i32 5, !dbg !108
  %18 = load i32, i32* %17, align 8, !dbg !108, !tbaa !85
  %19 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %16, i64 0, i32 6, !dbg !108
  %20 = load i32, i32* %19, align 4, !dbg !108, !tbaa !89
  %21 = xor i32 %20, -1, !dbg !108
  %22 = and i32 %21, %18, !dbg !108
  %23 = icmp eq i32 %22, 0, !dbg !108
  br i1 %23, label %rb_vm_check_ints.exit, label %24, !dbg !108, !prof !79

24:                                               ; preds = %typeTestSuccess6
  %25 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %16, i64 0, i32 8, !dbg !108
  %26 = load %struct.rb_thread_struct*, %struct.rb_thread_struct** %25, align 8, !dbg !108, !tbaa !90
  %27 = tail call i32 @rb_threadptr_execute_interrupts(%struct.rb_thread_struct* %26, i32 noundef 0) #17, !dbg !108
  br label %rb_vm_check_ints.exit, !dbg !108

rb_vm_check_ints.exit:                            ; preds = %typeTestSuccess6, %24
  switch i64 %15, label %codeRepl [
    i64 20, label %typeTestSuccess13
    i64 0, label %typeTestSuccess13
  ], !prof !102

typeTestSuccess13:                                ; preds = %rb_vm_check_ints.exit, %rb_vm_check_ints.exit
  ret i64 %15

codeRepl:                                         ; preds = %rb_vm_check_ints.exit
  tail call fastcc void @"func_Object#2lt.cold.1"(i64 %15) #16, !dbg !112
  unreachable
}

; Function Attrs: ssp
define internal fastcc void @"Constr_stackFramePrecomputed_func_Object#3lte"(i64 %realpath) unnamed_addr #8 {
entryInitializers:
  %rubyId_lte = load i64, i64* getelementptr inbounds ([21 x i64], [21 x i64]* @sorbet_moduleIDTable, i64 0, i64 6), align 8, !invariant.load !5
  %rubyStr_lte = load i64, i64* getelementptr inbounds ([13 x i64], [13 x i64]* @sorbet_moduleRubyStringTable, i64 0, i64 4), align 8, !invariant.load !5
  %"rubyStr_test/testdata/compiler/float-intrinsics.rb" = load i64, i64* getelementptr inbounds ([13 x i64], [13 x i64]* @sorbet_moduleRubyStringTable, i64 0, i64 1), align 8, !invariant.load !5
  %locals = alloca i64, i32 0, align 8
  %0 = call %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64 %rubyStr_lte, i64 %rubyId_lte, i64 %"rubyStr_test/testdata/compiler/float-intrinsics.rb", i64 %realpath, %struct.rb_iseq_struct* noundef null, i32 noundef 1, i32 noundef 23, %struct.SorbetLineNumberInfo* noundef @fileLineNumberInfo, i64* noundef nonnull %locals, i32 noundef 0, i32 noundef 2)
  store %struct.rb_iseq_struct* %0, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_Object#3lte", align 8
  ret void
}

; Function Attrs: ssp
define internal i64 @"func_<root>.13<static-init>$block_1"(i64 %firstYieldArgRaw, i64 %localsOffset, i32 %argc, i64* nocapture nofree readnone %argArray, i64 %blockArg) #8 !dbg !16 {
functionEntryInitializers:
  %0 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !72
  %1 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %0, i64 0, i32 2
  %2 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %1, align 8, !tbaa !113
  %3 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 3
  %4 = load i64, i64* %3, align 8, !tbaa !114
  %stackFrame = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.13<static-init>$block_1", align 8
  %5 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 2
  store %struct.rb_iseq_struct* %stackFrame, %struct.rb_iseq_struct** %5, align 8, !tbaa !116
  %6 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 4
  %7 = load i64*, i64** %6, align 8, !tbaa !117
  %8 = load i64, i64* %7, align 8, !tbaa !6
  %9 = and i64 %8, -129
  store i64 %9, i64* %7, align 8, !tbaa !6
  %10 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 0
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 7), i64** %10, align 8, !tbaa !72
  %11 = load i64, i64* @guard_epoch_T, align 8, !dbg !15
  %12 = load i64, i64* @ruby_vm_global_constant_state, align 8, !dbg !15, !tbaa !118
  %needTakeSlowPath = icmp ne i64 %11, %12, !dbg !15
  br i1 %needTakeSlowPath, label %13, label %14, !dbg !15, !prof !120

13:                                               ; preds = %functionEntryInitializers
  tail call void @const_recompute_T(), !dbg !15
  br label %14, !dbg !15

14:                                               ; preds = %functionEntryInitializers, %13
  %15 = load i64, i64* @guarded_const_T, align 8, !dbg !15
  %16 = load i64, i64* @guard_epoch_T, align 8, !dbg !15
  %17 = load i64, i64* @ruby_vm_global_constant_state, align 8, !dbg !15, !tbaa !118
  %guardUpdated = icmp eq i64 %16, %17, !dbg !15
  tail call void @llvm.assume(i1 %guardUpdated), !dbg !15
  %18 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 1, !dbg !15
  %19 = load i64*, i64** %18, align 8, !dbg !15
  store i64 %15, i64* %19, align 8, !dbg !15, !tbaa !6
  %20 = getelementptr inbounds i64, i64* %19, i64 1, !dbg !15
  store i64* %20, i64** %18, align 8, !dbg !15
  %send = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_untyped, i64 0), !dbg !15
  %21 = load i64, i64* @rb_cFloat, align 8, !dbg !18
  %22 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 1, !dbg !18
  %23 = load i64*, i64** %22, align 8, !dbg !18
  store i64 %4, i64* %23, align 8, !dbg !18, !tbaa !6
  %24 = getelementptr inbounds i64, i64* %23, i64 1, !dbg !18
  store i64 %21, i64* %24, align 8, !dbg !18, !tbaa !6
  %25 = getelementptr inbounds i64, i64* %24, i64 1, !dbg !18
  store i64 %send, i64* %25, align 8, !dbg !18, !tbaa !6
  %26 = getelementptr inbounds i64, i64* %25, i64 1, !dbg !18
  store i64* %26, i64** %22, align 8, !dbg !18
  %send38 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_params, i64 0), !dbg !18
  %27 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 1, !dbg !19
  %28 = load i64*, i64** %27, align 8, !dbg !19
  store i64 %15, i64* %28, align 8, !dbg !19, !tbaa !6
  %29 = getelementptr inbounds i64, i64* %28, i64 1, !dbg !19
  store i64* %29, i64** %27, align 8, !dbg !19
  %send40 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_untyped.1, i64 0), !dbg !19
  %30 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 1, !dbg !18
  %31 = load i64*, i64** %30, align 8, !dbg !18
  store i64 %send38, i64* %31, align 8, !dbg !18, !tbaa !6
  %32 = getelementptr inbounds i64, i64* %31, i64 1, !dbg !18
  store i64 %send40, i64* %32, align 8, !dbg !18, !tbaa !6
  %33 = getelementptr inbounds i64, i64* %32, i64 1, !dbg !18
  store i64* %33, i64** %30, align 8, !dbg !18
  %send42 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_returns, i64 0), !dbg !18
  ret i64 %send42, !dbg !121
}

; Function Attrs: ssp
define internal i64 @"func_<root>.13<static-init>$block_2"(i64 %firstYieldArgRaw, i64 %localsOffset, i32 %argc, i64* nocapture nofree readnone %argArray, i64 %blockArg) #8 !dbg !21 {
functionEntryInitializers:
  %0 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !72
  %1 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %0, i64 0, i32 2
  %2 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %1, align 8, !tbaa !113
  %3 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 3
  %4 = load i64, i64* %3, align 8, !tbaa !114
  %stackFrame = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.13<static-init>$block_2", align 8
  %5 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 2
  store %struct.rb_iseq_struct* %stackFrame, %struct.rb_iseq_struct** %5, align 8, !tbaa !116
  %6 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 4
  %7 = load i64*, i64** %6, align 8, !tbaa !117
  %8 = load i64, i64* %7, align 8, !tbaa !6
  %9 = and i64 %8, -129
  store i64 %9, i64* %7, align 8, !tbaa !6
  %10 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 0
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 12), i64** %10, align 8, !tbaa !72
  %11 = load i64, i64* @guard_epoch_T, align 8, !dbg !20
  %12 = load i64, i64* @ruby_vm_global_constant_state, align 8, !dbg !20, !tbaa !118
  %needTakeSlowPath = icmp ne i64 %11, %12, !dbg !20
  br i1 %needTakeSlowPath, label %13, label %14, !dbg !20, !prof !120

13:                                               ; preds = %functionEntryInitializers
  tail call void @const_recompute_T(), !dbg !20
  br label %14, !dbg !20

14:                                               ; preds = %functionEntryInitializers, %13
  %15 = load i64, i64* @guarded_const_T, align 8, !dbg !20
  %16 = load i64, i64* @guard_epoch_T, align 8, !dbg !20
  %17 = load i64, i64* @ruby_vm_global_constant_state, align 8, !dbg !20, !tbaa !118
  %guardUpdated = icmp eq i64 %16, %17, !dbg !20
  tail call void @llvm.assume(i1 %guardUpdated), !dbg !20
  %18 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 1, !dbg !20
  %19 = load i64*, i64** %18, align 8, !dbg !20
  store i64 %15, i64* %19, align 8, !dbg !20, !tbaa !6
  %20 = getelementptr inbounds i64, i64* %19, i64 1, !dbg !20
  store i64* %20, i64** %18, align 8, !dbg !20
  %send = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_untyped.2, i64 0), !dbg !20
  %21 = load i64, i64* @rb_cFloat, align 8, !dbg !22
  %22 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 1, !dbg !22
  %23 = load i64*, i64** %22, align 8, !dbg !22
  store i64 %4, i64* %23, align 8, !dbg !22, !tbaa !6
  %24 = getelementptr inbounds i64, i64* %23, i64 1, !dbg !22
  store i64 %21, i64* %24, align 8, !dbg !22, !tbaa !6
  %25 = getelementptr inbounds i64, i64* %24, i64 1, !dbg !22
  store i64 %send, i64* %25, align 8, !dbg !22, !tbaa !6
  %26 = getelementptr inbounds i64, i64* %25, i64 1, !dbg !22
  store i64* %26, i64** %22, align 8, !dbg !22
  %send38 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_params.3, i64 0), !dbg !22
  %27 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 1, !dbg !23
  %28 = load i64*, i64** %27, align 8, !dbg !23
  store i64 %15, i64* %28, align 8, !dbg !23, !tbaa !6
  %29 = getelementptr inbounds i64, i64* %28, i64 1, !dbg !23
  store i64* %29, i64** %27, align 8, !dbg !23
  %send40 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_untyped.4, i64 0), !dbg !23
  %30 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 1, !dbg !22
  %31 = load i64*, i64** %30, align 8, !dbg !22
  store i64 %send38, i64* %31, align 8, !dbg !22, !tbaa !6
  %32 = getelementptr inbounds i64, i64* %31, i64 1, !dbg !22
  store i64 %send40, i64* %32, align 8, !dbg !22, !tbaa !6
  %33 = getelementptr inbounds i64, i64* %32, i64 1, !dbg !22
  store i64* %33, i64** %30, align 8, !dbg !22
  %send42 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_returns.5, i64 0), !dbg !22
  ret i64 %send42, !dbg !122
}

; Function Attrs: ssp
define internal i64 @"func_<root>.13<static-init>$block_3"(i64 %firstYieldArgRaw, i64 %localsOffset, i32 %argc, i64* nocapture nofree readnone %argArray, i64 %blockArg) #8 !dbg !25 {
functionEntryInitializers:
  %0 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !72
  %1 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %0, i64 0, i32 2
  %2 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %1, align 8, !tbaa !113
  %3 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 3
  %4 = load i64, i64* %3, align 8, !tbaa !114
  %stackFrame = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.13<static-init>$block_3", align 8
  %5 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 2
  store %struct.rb_iseq_struct* %stackFrame, %struct.rb_iseq_struct** %5, align 8, !tbaa !116
  %6 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 4
  %7 = load i64*, i64** %6, align 8, !tbaa !117
  %8 = load i64, i64* %7, align 8, !tbaa !6
  %9 = and i64 %8, -129
  store i64 %9, i64* %7, align 8, !tbaa !6
  %10 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 0
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 17), i64** %10, align 8, !tbaa !72
  %11 = load i64, i64* @guard_epoch_T, align 8, !dbg !24
  %12 = load i64, i64* @ruby_vm_global_constant_state, align 8, !dbg !24, !tbaa !118
  %needTakeSlowPath = icmp ne i64 %11, %12, !dbg !24
  br i1 %needTakeSlowPath, label %13, label %14, !dbg !24, !prof !120

13:                                               ; preds = %functionEntryInitializers
  tail call void @const_recompute_T(), !dbg !24
  br label %14, !dbg !24

14:                                               ; preds = %functionEntryInitializers, %13
  %15 = load i64, i64* @guarded_const_T, align 8, !dbg !24
  %16 = load i64, i64* @guard_epoch_T, align 8, !dbg !24
  %17 = load i64, i64* @ruby_vm_global_constant_state, align 8, !dbg !24, !tbaa !118
  %guardUpdated = icmp eq i64 %16, %17, !dbg !24
  tail call void @llvm.assume(i1 %guardUpdated), !dbg !24
  %18 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 1, !dbg !24
  %19 = load i64*, i64** %18, align 8, !dbg !24
  store i64 %15, i64* %19, align 8, !dbg !24, !tbaa !6
  %20 = getelementptr inbounds i64, i64* %19, i64 1, !dbg !24
  store i64* %20, i64** %18, align 8, !dbg !24
  %send = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_untyped.6, i64 0), !dbg !24
  %21 = load i64, i64* @rb_cFloat, align 8, !dbg !26
  %22 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 1, !dbg !26
  %23 = load i64*, i64** %22, align 8, !dbg !26
  store i64 %4, i64* %23, align 8, !dbg !26, !tbaa !6
  %24 = getelementptr inbounds i64, i64* %23, i64 1, !dbg !26
  store i64 %21, i64* %24, align 8, !dbg !26, !tbaa !6
  %25 = getelementptr inbounds i64, i64* %24, i64 1, !dbg !26
  store i64 %send, i64* %25, align 8, !dbg !26, !tbaa !6
  %26 = getelementptr inbounds i64, i64* %25, i64 1, !dbg !26
  store i64* %26, i64** %22, align 8, !dbg !26
  %send34 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_params.7, i64 0), !dbg !26
  %27 = load i64, i64* @"guard_epoch_T::Boolean", align 8, !dbg !26
  %28 = load i64, i64* @ruby_vm_global_constant_state, align 8, !dbg !26, !tbaa !118
  %needTakeSlowPath31 = icmp ne i64 %27, %28, !dbg !26
  br i1 %needTakeSlowPath31, label %29, label %30, !dbg !26, !prof !120

29:                                               ; preds = %14
  tail call void @"const_recompute_T::Boolean"(), !dbg !26
  br label %30, !dbg !26

30:                                               ; preds = %14, %29
  %31 = load i64, i64* @"guarded_const_T::Boolean", align 8, !dbg !26
  %32 = load i64, i64* @"guard_epoch_T::Boolean", align 8, !dbg !26
  %33 = load i64, i64* @ruby_vm_global_constant_state, align 8, !dbg !26, !tbaa !118
  %guardUpdated32 = icmp eq i64 %32, %33, !dbg !26
  tail call void @llvm.assume(i1 %guardUpdated32), !dbg !26
  %34 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 1, !dbg !26
  %35 = load i64*, i64** %34, align 8, !dbg !26
  store i64 %send34, i64* %35, align 8, !dbg !26, !tbaa !6
  %36 = getelementptr inbounds i64, i64* %35, i64 1, !dbg !26
  store i64 %31, i64* %36, align 8, !dbg !26, !tbaa !6
  %37 = getelementptr inbounds i64, i64* %36, i64 1, !dbg !26
  store i64* %37, i64** %34, align 8, !dbg !26
  %send36 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_returns.8, i64 0), !dbg !26
  ret i64 %send36, !dbg !123
}

; Function Attrs: ssp
define internal i64 @"func_<root>.13<static-init>$block_4"(i64 %firstYieldArgRaw, i64 %localsOffset, i32 %argc, i64* nocapture nofree readnone %argArray, i64 %blockArg) #8 !dbg !28 {
functionEntryInitializers:
  %0 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !72
  %1 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %0, i64 0, i32 2
  %2 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %1, align 8, !tbaa !113
  %3 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 3
  %4 = load i64, i64* %3, align 8, !tbaa !114
  %stackFrame = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.13<static-init>$block_4", align 8
  %5 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 2
  store %struct.rb_iseq_struct* %stackFrame, %struct.rb_iseq_struct** %5, align 8, !tbaa !116
  %6 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 4
  %7 = load i64*, i64** %6, align 8, !tbaa !117
  %8 = load i64, i64* %7, align 8, !tbaa !6
  %9 = and i64 %8, -129
  store i64 %9, i64* %7, align 8, !tbaa !6
  %10 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 0
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 22), i64** %10, align 8, !tbaa !72
  %11 = load i64, i64* @guard_epoch_T, align 8, !dbg !27
  %12 = load i64, i64* @ruby_vm_global_constant_state, align 8, !dbg !27, !tbaa !118
  %needTakeSlowPath = icmp ne i64 %11, %12, !dbg !27
  br i1 %needTakeSlowPath, label %13, label %14, !dbg !27, !prof !120

13:                                               ; preds = %functionEntryInitializers
  tail call void @const_recompute_T(), !dbg !27
  br label %14, !dbg !27

14:                                               ; preds = %functionEntryInitializers, %13
  %15 = load i64, i64* @guarded_const_T, align 8, !dbg !27
  %16 = load i64, i64* @guard_epoch_T, align 8, !dbg !27
  %17 = load i64, i64* @ruby_vm_global_constant_state, align 8, !dbg !27, !tbaa !118
  %guardUpdated = icmp eq i64 %16, %17, !dbg !27
  tail call void @llvm.assume(i1 %guardUpdated), !dbg !27
  %18 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 1, !dbg !27
  %19 = load i64*, i64** %18, align 8, !dbg !27
  store i64 %15, i64* %19, align 8, !dbg !27, !tbaa !6
  %20 = getelementptr inbounds i64, i64* %19, i64 1, !dbg !27
  store i64* %20, i64** %18, align 8, !dbg !27
  %send = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_untyped.9, i64 0), !dbg !27
  %21 = load i64, i64* @rb_cFloat, align 8, !dbg !29
  %22 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 1, !dbg !29
  %23 = load i64*, i64** %22, align 8, !dbg !29
  store i64 %4, i64* %23, align 8, !dbg !29, !tbaa !6
  %24 = getelementptr inbounds i64, i64* %23, i64 1, !dbg !29
  store i64 %21, i64* %24, align 8, !dbg !29, !tbaa !6
  %25 = getelementptr inbounds i64, i64* %24, i64 1, !dbg !29
  store i64 %send, i64* %25, align 8, !dbg !29, !tbaa !6
  %26 = getelementptr inbounds i64, i64* %25, i64 1, !dbg !29
  store i64* %26, i64** %22, align 8, !dbg !29
  %send34 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_params.10, i64 0), !dbg !29
  %27 = load i64, i64* @"guard_epoch_T::Boolean", align 8, !dbg !29
  %28 = load i64, i64* @ruby_vm_global_constant_state, align 8, !dbg !29, !tbaa !118
  %needTakeSlowPath31 = icmp ne i64 %27, %28, !dbg !29
  br i1 %needTakeSlowPath31, label %29, label %30, !dbg !29, !prof !120

29:                                               ; preds = %14
  tail call void @"const_recompute_T::Boolean"(), !dbg !29
  br label %30, !dbg !29

30:                                               ; preds = %14, %29
  %31 = load i64, i64* @"guarded_const_T::Boolean", align 8, !dbg !29
  %32 = load i64, i64* @"guard_epoch_T::Boolean", align 8, !dbg !29
  %33 = load i64, i64* @ruby_vm_global_constant_state, align 8, !dbg !29, !tbaa !118
  %guardUpdated32 = icmp eq i64 %32, %33, !dbg !29
  tail call void @llvm.assume(i1 %guardUpdated32), !dbg !29
  %34 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 1, !dbg !29
  %35 = load i64*, i64** %34, align 8, !dbg !29
  store i64 %send34, i64* %35, align 8, !dbg !29, !tbaa !6
  %36 = getelementptr inbounds i64, i64* %35, i64 1, !dbg !29
  store i64 %31, i64* %36, align 8, !dbg !29, !tbaa !6
  %37 = getelementptr inbounds i64, i64* %36, i64 1, !dbg !29
  store i64* %37, i64** %34, align 8, !dbg !29
  %send36 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_returns.11, i64 0), !dbg !29
  ret i64 %send36, !dbg !124
}

; Function Attrs: ssp
define internal fastcc void @"Constr_stackFramePrecomputed_func_<root>.13<static-init>"(i64 %realpath) unnamed_addr #8 {
entryInitializers:
  %"rubyId_<top (required)>" = load i64, i64* getelementptr inbounds ([21 x i64], [21 x i64]* @sorbet_moduleIDTable, i64 0, i64 8), align 8, !invariant.load !5
  %"rubyStr_<top (required)>" = load i64, i64* getelementptr inbounds ([13 x i64], [13 x i64]* @sorbet_moduleRubyStringTable, i64 0, i64 5), align 8, !invariant.load !5
  %"rubyStr_test/testdata/compiler/float-intrinsics.rb" = load i64, i64* getelementptr inbounds ([13 x i64], [13 x i64]* @sorbet_moduleRubyStringTable, i64 0, i64 1), align 8, !invariant.load !5
  %locals = alloca i64, align 8
  %"rubyId_<block-call>" = load i64, i64* getelementptr inbounds ([21 x i64], [21 x i64]* @sorbet_moduleIDTable, i64 0, i64 9), align 8, !invariant.load !5
  store i64 %"rubyId_<block-call>", i64* %locals, align 8
  %0 = call %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64 %"rubyStr_<top (required)>", i64 %"rubyId_<top (required)>", i64 %"rubyStr_test/testdata/compiler/float-intrinsics.rb", i64 %realpath, %struct.rb_iseq_struct* noundef null, i32 noundef 0, i32 noundef 5, %struct.SorbetLineNumberInfo* noundef @fileLineNumberInfo, i64* noundef nonnull align 8 %locals, i32 noundef 1, i32 noundef 4)
  store %struct.rb_iseq_struct* %0, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.13<static-init>", align 8
  ret void
}

; Function Attrs: ssp
define internal fastcc void @"Constr_stackFramePrecomputed_func_<root>.13<static-init>$block_1"(i64 %realpath) unnamed_addr #8 {
entryInitializers:
  %stackFrame = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.13<static-init>", align 8
  %"rubyId_block in <top (required)>" = load i64, i64* getelementptr inbounds ([21 x i64], [21 x i64]* @sorbet_moduleIDTable, i64 0, i64 10), align 8, !invariant.load !5
  %"rubyStr_block in <top (required)>" = load i64, i64* getelementptr inbounds ([13 x i64], [13 x i64]* @sorbet_moduleRubyStringTable, i64 0, i64 6), align 8, !invariant.load !5
  %"rubyStr_test/testdata/compiler/float-intrinsics.rb" = load i64, i64* getelementptr inbounds ([13 x i64], [13 x i64]* @sorbet_moduleRubyStringTable, i64 0, i64 1), align 8, !invariant.load !5
  %0 = tail call %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64 %"rubyStr_block in <top (required)>", i64 %"rubyId_block in <top (required)>", i64 %"rubyStr_test/testdata/compiler/float-intrinsics.rb", i64 %realpath, %struct.rb_iseq_struct* %stackFrame, i32 noundef 2, i32 noundef 5, %struct.SorbetLineNumberInfo* noundef @fileLineNumberInfo, i64* noundef null, i32 noundef 0, i32 noundef 4)
  store %struct.rb_iseq_struct* %0, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.13<static-init>$block_1", align 8
  ret void
}

; Function Attrs: ssp
define internal fastcc void @"Constr_stackFramePrecomputed_func_<root>.13<static-init>$block_2"(i64 %realpath) unnamed_addr #8 {
entryInitializers:
  %stackFrame = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.13<static-init>", align 8
  %"rubyId_block in <top (required)>" = load i64, i64* getelementptr inbounds ([21 x i64], [21 x i64]* @sorbet_moduleIDTable, i64 0, i64 10), align 8, !invariant.load !5
  %"rubyStr_block in <top (required)>" = load i64, i64* getelementptr inbounds ([13 x i64], [13 x i64]* @sorbet_moduleRubyStringTable, i64 0, i64 6), align 8, !invariant.load !5
  %"rubyStr_test/testdata/compiler/float-intrinsics.rb" = load i64, i64* getelementptr inbounds ([13 x i64], [13 x i64]* @sorbet_moduleRubyStringTable, i64 0, i64 1), align 8, !invariant.load !5
  %0 = tail call %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64 %"rubyStr_block in <top (required)>", i64 %"rubyId_block in <top (required)>", i64 %"rubyStr_test/testdata/compiler/float-intrinsics.rb", i64 %realpath, %struct.rb_iseq_struct* %stackFrame, i32 noundef 2, i32 noundef 5, %struct.SorbetLineNumberInfo* noundef @fileLineNumberInfo, i64* noundef null, i32 noundef 0, i32 noundef 4)
  store %struct.rb_iseq_struct* %0, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.13<static-init>$block_2", align 8
  ret void
}

; Function Attrs: ssp
define internal fastcc void @"Constr_stackFramePrecomputed_func_<root>.13<static-init>$block_3"(i64 %realpath) unnamed_addr #8 {
entryInitializers:
  %stackFrame = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.13<static-init>", align 8
  %"rubyId_block in <top (required)>" = load i64, i64* getelementptr inbounds ([21 x i64], [21 x i64]* @sorbet_moduleIDTable, i64 0, i64 10), align 8, !invariant.load !5
  %"rubyStr_block in <top (required)>" = load i64, i64* getelementptr inbounds ([13 x i64], [13 x i64]* @sorbet_moduleRubyStringTable, i64 0, i64 6), align 8, !invariant.load !5
  %"rubyStr_test/testdata/compiler/float-intrinsics.rb" = load i64, i64* getelementptr inbounds ([13 x i64], [13 x i64]* @sorbet_moduleRubyStringTable, i64 0, i64 1), align 8, !invariant.load !5
  %0 = tail call %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64 %"rubyStr_block in <top (required)>", i64 %"rubyId_block in <top (required)>", i64 %"rubyStr_test/testdata/compiler/float-intrinsics.rb", i64 %realpath, %struct.rb_iseq_struct* %stackFrame, i32 noundef 2, i32 noundef 5, %struct.SorbetLineNumberInfo* noundef @fileLineNumberInfo, i64* noundef null, i32 noundef 0, i32 noundef 4)
  store %struct.rb_iseq_struct* %0, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.13<static-init>$block_3", align 8
  ret void
}

; Function Attrs: ssp
define internal fastcc void @"Constr_stackFramePrecomputed_func_<root>.13<static-init>$block_4"(i64 %realpath) unnamed_addr #8 {
entryInitializers:
  %stackFrame = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.13<static-init>", align 8
  %"rubyId_block in <top (required)>" = load i64, i64* getelementptr inbounds ([21 x i64], [21 x i64]* @sorbet_moduleIDTable, i64 0, i64 10), align 8, !invariant.load !5
  %"rubyStr_block in <top (required)>" = load i64, i64* getelementptr inbounds ([13 x i64], [13 x i64]* @sorbet_moduleRubyStringTable, i64 0, i64 6), align 8, !invariant.load !5
  %"rubyStr_test/testdata/compiler/float-intrinsics.rb" = load i64, i64* getelementptr inbounds ([13 x i64], [13 x i64]* @sorbet_moduleRubyStringTable, i64 0, i64 1), align 8, !invariant.load !5
  %0 = tail call %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64 %"rubyStr_block in <top (required)>", i64 %"rubyId_block in <top (required)>", i64 %"rubyStr_test/testdata/compiler/float-intrinsics.rb", i64 %realpath, %struct.rb_iseq_struct* %stackFrame, i32 noundef 2, i32 noundef 5, %struct.SorbetLineNumberInfo* noundef @fileLineNumberInfo, i64* noundef null, i32 noundef 0, i32 noundef 4)
  store %struct.rb_iseq_struct* %0, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.13<static-init>$block_4", align 8
  ret void
}

; Function Attrs: sspreq
define void @Init_float-intrinsics() local_unnamed_addr #9 {
entry:
  %positional_table.i = alloca i64, i32 2, align 8, !dbg !125
  %positional_table320.i = alloca i64, i32 2, align 8, !dbg !126
  %positional_table334.i = alloca i64, i32 2, align 8, !dbg !127
  %positional_table348.i = alloca i64, i32 2, align 8, !dbg !128
  %realpath = tail call i64 @sorbet_readRealpath()
  tail call fastcc void @sorbet_globalConstructors(i64 %realpath)
  %0 = load %struct.rb_vm_struct*, %struct.rb_vm_struct** @ruby_current_vm_ptr, align 8, !tbaa !72
  %1 = getelementptr inbounds %struct.rb_vm_struct, %struct.rb_vm_struct* %0, i64 0, i32 18
  %2 = load i64, i64* %1, align 8, !tbaa !129
  %3 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !72
  %4 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %3, i64 0, i32 2
  %5 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %4, align 8, !tbaa !113
  %6 = bitcast i64* %positional_table.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6)
  %7 = bitcast i64* %positional_table320.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7)
  %8 = bitcast i64* %positional_table334.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8)
  %9 = bitcast i64* %positional_table348.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9)
  %stackFrame.i = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.13<static-init>", align 8
  %10 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 2
  store %struct.rb_iseq_struct* %stackFrame.i, %struct.rb_iseq_struct** %10, align 8, !tbaa !116
  %11 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 4
  %12 = load i64*, i64** %11, align 8, !tbaa !117
  %13 = load i64, i64* %12, align 8, !tbaa !6
  %14 = and i64 %13, -33
  store i64 %14, i64* %12, align 8, !tbaa !6
  tail call void @sorbet_setMethodStackFrame(%struct.rb_execution_context_struct* %3, %struct.rb_control_frame_struct* %5, %struct.rb_iseq_struct* %stackFrame.i) #17
  %15 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 0
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 7), i64** %15, align 8, !dbg !137, !tbaa !72
  %rubyId_plus.i = load i64, i64* getelementptr inbounds ([21 x i64], [21 x i64]* @sorbet_moduleIDTable, i64 0, i64 0), align 8, !dbg !138, !invariant.load !5
  %rawSym.i = tail call i64 @rb_id2sym(i64 %rubyId_plus.i) #17, !dbg !138
  tail call void @sorbet_vm_register_sig(i64 noundef 0, i64 %rawSym.i, i64 %2, i64 noundef 8, i64 (i64, i64, i32, i64*, i64)* noundef @"func_<root>.13<static-init>$block_1") #17, !dbg !138
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 12), i64** %15, align 8, !dbg !138, !tbaa !72
  %rubyId_minus.i = load i64, i64* getelementptr inbounds ([21 x i64], [21 x i64]* @sorbet_moduleIDTable, i64 0, i64 2), align 8, !dbg !139, !invariant.load !5
  %rawSym257.i = tail call i64 @rb_id2sym(i64 %rubyId_minus.i) #17, !dbg !139
  tail call void @sorbet_vm_register_sig(i64 noundef 0, i64 %rawSym257.i, i64 %2, i64 noundef 8, i64 (i64, i64, i32, i64*, i64)* noundef @"func_<root>.13<static-init>$block_2") #17, !dbg !139
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 17), i64** %15, align 8, !dbg !139, !tbaa !72
  %rubyId_lt.i = load i64, i64* getelementptr inbounds ([21 x i64], [21 x i64]* @sorbet_moduleIDTable, i64 0, i64 4), align 8, !dbg !140, !invariant.load !5
  %rawSym271.i = tail call i64 @rb_id2sym(i64 %rubyId_lt.i) #17, !dbg !140
  tail call void @sorbet_vm_register_sig(i64 noundef 0, i64 %rawSym271.i, i64 %2, i64 noundef 8, i64 (i64, i64, i32, i64*, i64)* noundef @"func_<root>.13<static-init>$block_3") #17, !dbg !140
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 22), i64** %15, align 8, !dbg !140, !tbaa !72
  %rubyId_lte.i = load i64, i64* getelementptr inbounds ([21 x i64], [21 x i64]* @sorbet_moduleIDTable, i64 0, i64 6), align 8, !dbg !141, !invariant.load !5
  %rawSym285.i = tail call i64 @rb_id2sym(i64 %rubyId_lte.i) #17, !dbg !141
  tail call void @sorbet_vm_register_sig(i64 noundef 0, i64 %rawSym285.i, i64 %2, i64 noundef 8, i64 (i64, i64, i32, i64*, i64)* noundef @"func_<root>.13<static-init>$block_4") #17, !dbg !141
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 5), i64** %15, align 8, !dbg !141, !tbaa !72
  %16 = load i64, i64* @"guard_epoch_T::Sig", align 8, !dbg !30
  %17 = load i64, i64* @ruby_vm_global_constant_state, align 8, !dbg !30, !tbaa !118
  %needTakeSlowPath = icmp ne i64 %16, %17, !dbg !30
  br i1 %needTakeSlowPath, label %18, label %19, !dbg !30, !prof !120

18:                                               ; preds = %entry
  tail call void @"const_recompute_T::Sig"(), !dbg !30
  br label %19, !dbg !30

19:                                               ; preds = %entry, %18
  %20 = load i64, i64* @"guarded_const_T::Sig", align 8, !dbg !30
  %21 = load i64, i64* @"guard_epoch_T::Sig", align 8, !dbg !30
  %22 = load i64, i64* @ruby_vm_global_constant_state, align 8, !dbg !30, !tbaa !118
  %guardUpdated = icmp eq i64 %21, %22, !dbg !30
  tail call void @llvm.assume(i1 %guardUpdated), !dbg !30
  %23 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !30
  %24 = load i64*, i64** %23, align 8, !dbg !30
  store i64 %2, i64* %24, align 8, !dbg !30, !tbaa !6
  %25 = getelementptr inbounds i64, i64* %24, i64 1, !dbg !30
  store i64 %20, i64* %25, align 8, !dbg !30, !tbaa !6
  %26 = getelementptr inbounds i64, i64* %25, i64 1, !dbg !30
  store i64* %26, i64** %23, align 8, !dbg !30
  %send = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_extend, i64 0), !dbg !30
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 8), i64** %15, align 8, !dbg !30, !tbaa !72
  %27 = load i64, i64* @rb_cObject, align 8, !dbg !125
  %stackFrame308.i = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_Object#4plus", align 8, !dbg !125
  %28 = tail call noalias nonnull i8* @ruby_xcalloc(i64 noundef 1, i64 noundef 64) #18, !dbg !125
  %29 = bitcast i8* %28 to i16*, !dbg !125
  %30 = load i16, i16* %29, align 8, !dbg !125
  %31 = and i16 %30, -384, !dbg !125
  %32 = or i16 %31, 1, !dbg !125
  store i16 %32, i16* %29, align 8, !dbg !125
  %33 = getelementptr inbounds i8, i8* %28, i64 8, !dbg !125
  %34 = bitcast i8* %33 to i32*, !dbg !125
  store i32 2, i32* %34, align 8, !dbg !125, !tbaa !142
  %35 = getelementptr inbounds i8, i8* %28, i64 12, !dbg !125
  %36 = getelementptr inbounds i8, i8* %28, i64 4, !dbg !125
  %37 = bitcast i8* %36 to i32*, !dbg !125
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %35, i8 0, i64 20, i1 false) #17, !dbg !125
  store i32 2, i32* %37, align 4, !dbg !125, !tbaa !145
  %rubyId_x.i = load i64, i64* getelementptr inbounds ([21 x i64], [21 x i64]* @sorbet_moduleIDTable, i64 0, i64 11), align 8, !dbg !125, !invariant.load !5
  store i64 %rubyId_x.i, i64* %positional_table.i, align 8, !dbg !125
  %rubyId_y.i = load i64, i64* getelementptr inbounds ([21 x i64], [21 x i64]* @sorbet_moduleIDTable, i64 0, i64 12), align 8, !dbg !125, !invariant.load !5
  %38 = getelementptr i64, i64* %positional_table.i, i32 1, !dbg !125
  store i64 %rubyId_y.i, i64* %38, align 8, !dbg !125
  %39 = tail call noalias nonnull i8* @ruby_xmalloc2(i64 noundef 2, i64 noundef 8) #18, !dbg !125
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture nonnull writeonly align 1 %39, i8* nocapture noundef nonnull readonly align 8 dereferenceable(16) %6, i64 noundef 16, i1 noundef false) #17, !dbg !125
  %40 = getelementptr inbounds i8, i8* %28, i64 32, !dbg !125
  %41 = bitcast i8* %40 to i8**, !dbg !125
  store i8* %39, i8** %41, align 8, !dbg !125, !tbaa !146
  tail call void @sorbet_vm_define_method(i64 %27, i8* noundef getelementptr inbounds ([309 x i8], [309 x i8]* @sorbet_moduleStringTable, i64 0, i64 0), i64 (i32, i64*, i64, %struct.rb_control_frame_struct*, i8*, i8*)* noundef @"func_Object#4plus", i8* nonnull %28, %struct.rb_iseq_struct* %stackFrame308.i, i1 noundef zeroext false) #17, !dbg !125
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 13), i64** %15, align 8, !dbg !125, !tbaa !72
  %stackFrame318.i = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_Object#5minus", align 8, !dbg !126
  %42 = tail call noalias nonnull i8* @ruby_xcalloc(i64 noundef 1, i64 noundef 64) #18, !dbg !126
  %43 = bitcast i8* %42 to i16*, !dbg !126
  %44 = load i16, i16* %43, align 8, !dbg !126
  %45 = and i16 %44, -384, !dbg !126
  %46 = or i16 %45, 1, !dbg !126
  store i16 %46, i16* %43, align 8, !dbg !126
  %47 = getelementptr inbounds i8, i8* %42, i64 8, !dbg !126
  %48 = bitcast i8* %47 to i32*, !dbg !126
  store i32 2, i32* %48, align 8, !dbg !126, !tbaa !142
  %49 = getelementptr inbounds i8, i8* %42, i64 12, !dbg !126
  %50 = getelementptr inbounds i8, i8* %42, i64 4, !dbg !126
  %51 = bitcast i8* %50 to i32*, !dbg !126
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %49, i8 0, i64 20, i1 false) #17, !dbg !126
  store i32 2, i32* %51, align 4, !dbg !126, !tbaa !145
  store i64 %rubyId_x.i, i64* %positional_table320.i, align 8, !dbg !126
  %52 = getelementptr i64, i64* %positional_table320.i, i32 1, !dbg !126
  store i64 %rubyId_y.i, i64* %52, align 8, !dbg !126
  %53 = tail call noalias nonnull i8* @ruby_xmalloc2(i64 noundef 2, i64 noundef 8) #18, !dbg !126
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture nonnull writeonly align 1 %53, i8* nocapture noundef nonnull readonly align 8 dereferenceable(16) %7, i64 noundef 16, i1 noundef false) #17, !dbg !126
  %54 = getelementptr inbounds i8, i8* %42, i64 32, !dbg !126
  %55 = bitcast i8* %54 to i8**, !dbg !126
  store i8* %53, i8** %55, align 8, !dbg !126, !tbaa !146
  tail call void @sorbet_vm_define_method(i64 %27, i8* getelementptr inbounds ([309 x i8], [309 x i8]* @sorbet_moduleStringTable, i64 0, i64 107), i64 (i32, i64*, i64, %struct.rb_control_frame_struct*, i8*, i8*)* noundef @"func_Object#5minus", i8* nonnull %42, %struct.rb_iseq_struct* %stackFrame318.i, i1 noundef zeroext false) #17, !dbg !126
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 18), i64** %15, align 8, !dbg !126, !tbaa !72
  %stackFrame332.i = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_Object#2lt", align 8, !dbg !127
  %56 = tail call noalias nonnull i8* @ruby_xcalloc(i64 noundef 1, i64 noundef 64) #18, !dbg !127
  %57 = bitcast i8* %56 to i16*, !dbg !127
  %58 = load i16, i16* %57, align 8, !dbg !127
  %59 = and i16 %58, -384, !dbg !127
  %60 = or i16 %59, 1, !dbg !127
  store i16 %60, i16* %57, align 8, !dbg !127
  %61 = getelementptr inbounds i8, i8* %56, i64 8, !dbg !127
  %62 = bitcast i8* %61 to i32*, !dbg !127
  store i32 2, i32* %62, align 8, !dbg !127, !tbaa !142
  %63 = getelementptr inbounds i8, i8* %56, i64 12, !dbg !127
  %64 = getelementptr inbounds i8, i8* %56, i64 4, !dbg !127
  %65 = bitcast i8* %64 to i32*, !dbg !127
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %63, i8 0, i64 20, i1 false) #17, !dbg !127
  store i32 2, i32* %65, align 4, !dbg !127, !tbaa !145
  store i64 %rubyId_x.i, i64* %positional_table334.i, align 8, !dbg !127
  %66 = getelementptr i64, i64* %positional_table334.i, i32 1, !dbg !127
  store i64 %rubyId_y.i, i64* %66, align 8, !dbg !127
  %67 = tail call noalias nonnull i8* @ruby_xmalloc2(i64 noundef 2, i64 noundef 8) #18, !dbg !127
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture nonnull writeonly align 1 %67, i8* nocapture noundef nonnull readonly align 8 dereferenceable(16) %8, i64 noundef 16, i1 noundef false) #17, !dbg !127
  %68 = getelementptr inbounds i8, i8* %56, i64 32, !dbg !127
  %69 = bitcast i8* %68 to i8**, !dbg !127
  store i8* %67, i8** %69, align 8, !dbg !127, !tbaa !146
  tail call void @sorbet_vm_define_method(i64 %27, i8* getelementptr inbounds ([309 x i8], [309 x i8]* @sorbet_moduleStringTable, i64 0, i64 115), i64 (i32, i64*, i64, %struct.rb_control_frame_struct*, i8*, i8*)* noundef @"func_Object#2lt", i8* nonnull %56, %struct.rb_iseq_struct* %stackFrame332.i, i1 noundef zeroext false) #17, !dbg !127
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 23), i64** %15, align 8, !dbg !127, !tbaa !72
  %stackFrame346.i = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_Object#3lte", align 8, !dbg !128
  %70 = tail call noalias nonnull i8* @ruby_xcalloc(i64 noundef 1, i64 noundef 64) #18, !dbg !128
  %71 = bitcast i8* %70 to i16*, !dbg !128
  %72 = load i16, i16* %71, align 8, !dbg !128
  %73 = and i16 %72, -384, !dbg !128
  %74 = or i16 %73, 1, !dbg !128
  store i16 %74, i16* %71, align 8, !dbg !128
  %75 = getelementptr inbounds i8, i8* %70, i64 8, !dbg !128
  %76 = bitcast i8* %75 to i32*, !dbg !128
  store i32 2, i32* %76, align 8, !dbg !128, !tbaa !142
  %77 = getelementptr inbounds i8, i8* %70, i64 12, !dbg !128
  %78 = getelementptr inbounds i8, i8* %70, i64 4, !dbg !128
  %79 = bitcast i8* %78 to i32*, !dbg !128
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %77, i8 0, i64 20, i1 false) #17, !dbg !128
  store i32 2, i32* %79, align 4, !dbg !128, !tbaa !145
  store i64 %rubyId_x.i, i64* %positional_table348.i, align 8, !dbg !128
  %80 = getelementptr i64, i64* %positional_table348.i, i32 1, !dbg !128
  store i64 %rubyId_y.i, i64* %80, align 8, !dbg !128
  %81 = tail call noalias nonnull i8* @ruby_xmalloc2(i64 noundef 2, i64 noundef 8) #18, !dbg !128
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture nonnull writeonly align 1 %81, i8* nocapture noundef nonnull readonly align 8 dereferenceable(16) %9, i64 noundef 16, i1 noundef false) #17, !dbg !128
  %82 = getelementptr inbounds i8, i8* %70, i64 32, !dbg !128
  %83 = bitcast i8* %82 to i8**, !dbg !128
  store i8* %81, i8** %83, align 8, !dbg !128, !tbaa !146
  tail call void @sorbet_vm_define_method(i64 %27, i8* getelementptr inbounds ([309 x i8], [309 x i8]* @sorbet_moduleStringTable, i64 0, i64 131), i64 (i32, i64*, i64, %struct.rb_control_frame_struct*, i8*, i8*)* noundef @"func_Object#3lte", i8* nonnull %70, %struct.rb_iseq_struct* %stackFrame346.i, i1 noundef zeroext false) #17, !dbg !128
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 27), i64** %15, align 8, !dbg !128, !tbaa !72
  %84 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !31
  %85 = load i64*, i64** %84, align 8, !dbg !31
  store i64 %2, i64* %85, align 8, !dbg !31, !tbaa !6
  %86 = getelementptr inbounds i64, i64* %85, i64 1, !dbg !31
  %87 = getelementptr inbounds i64, i64* %86, i64 1, !dbg !31
  %88 = bitcast i64* %86 to <2 x i64>*, !dbg !31
  store <2 x i64> <i64 45035996273704962, i64 54043195528445954>, <2 x i64>* %88, align 8, !dbg !31, !tbaa !6
  %89 = getelementptr inbounds i64, i64* %87, i64 1, !dbg !31
  store i64* %89, i64** %84, align 8, !dbg !31
  %send2 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_plus, i64 0), !dbg !31
  %90 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !32
  %91 = load i64*, i64** %90, align 8, !dbg !32
  store i64 %2, i64* %91, align 8, !dbg !32, !tbaa !6
  %92 = getelementptr inbounds i64, i64* %91, i64 1, !dbg !32
  store i64 %send2, i64* %92, align 8, !dbg !32, !tbaa !6
  %93 = getelementptr inbounds i64, i64* %92, i64 1, !dbg !32
  store i64* %93, i64** %90, align 8, !dbg !32
  %send4 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_p, i64 0), !dbg !32
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 28), i64** %15, align 8, !dbg !32, !tbaa !72
  %94 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !33
  %95 = load i64*, i64** %94, align 8, !dbg !33
  store i64 %2, i64* %95, align 8, !dbg !33, !tbaa !6
  %96 = getelementptr inbounds i64, i64* %95, i64 1, !dbg !33
  %97 = getelementptr inbounds i64, i64* %96, i64 1, !dbg !33
  %98 = bitcast i64* %96 to <2 x i64>*, !dbg !33
  store <2 x i64> <i64 146704757861593906, i64 194442913911721170>, <2 x i64>* %98, align 8, !dbg !33, !tbaa !6
  %99 = getelementptr inbounds i64, i64* %97, i64 1, !dbg !33
  store i64* %99, i64** %94, align 8, !dbg !33
  %send6 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_minus, i64 0), !dbg !33
  %100 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !34
  %101 = load i64*, i64** %100, align 8, !dbg !34
  store i64 %2, i64* %101, align 8, !dbg !34, !tbaa !6
  %102 = getelementptr inbounds i64, i64* %101, i64 1, !dbg !34
  store i64 %send6, i64* %102, align 8, !dbg !34, !tbaa !6
  %103 = getelementptr inbounds i64, i64* %102, i64 1, !dbg !34
  store i64* %103, i64** %100, align 8, !dbg !34
  %send8 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_p.12, i64 0), !dbg !34
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 29), i64** %15, align 8, !dbg !34, !tbaa !72
  %104 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !35
  %105 = load i64*, i64** %104, align 8, !dbg !35
  store i64 %2, i64* %105, align 8, !dbg !35, !tbaa !6
  %106 = getelementptr inbounds i64, i64* %105, i64 1, !dbg !35
  %107 = getelementptr inbounds i64, i64* %106, i64 1, !dbg !35
  %108 = bitcast i64* %106 to <2 x i64>*, !dbg !35
  store <2 x i64> <i64 193204424014194282, i64 53142475602971858>, <2 x i64>* %108, align 8, !dbg !35, !tbaa !6
  %109 = getelementptr inbounds i64, i64* %107, i64 1, !dbg !35
  store i64* %109, i64** %104, align 8, !dbg !35
  %send10 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_lt, i64 0), !dbg !35
  %110 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !36
  %111 = load i64*, i64** %110, align 8, !dbg !36
  store i64 %2, i64* %111, align 8, !dbg !36, !tbaa !6
  %112 = getelementptr inbounds i64, i64* %111, i64 1, !dbg !36
  store i64 %send10, i64* %112, align 8, !dbg !36, !tbaa !6
  %113 = getelementptr inbounds i64, i64* %112, i64 1, !dbg !36
  store i64* %113, i64** %110, align 8, !dbg !36
  %send12 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_p.13, i64 0), !dbg !36
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 30), i64** %15, align 8, !dbg !36, !tbaa !72
  %114 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !37
  %115 = load i64*, i64** %114, align 8, !dbg !37
  store i64 %2, i64* %115, align 8, !dbg !37, !tbaa !6
  %116 = getelementptr inbounds i64, i64* %115, i64 1, !dbg !37
  %117 = getelementptr inbounds i64, i64* %116, i64 1, !dbg !37
  %118 = bitcast i64* %116 to <2 x i64>*, !dbg !37
  store <2 x i64> <i64 61248954932238746, i64 133982088914272258>, <2 x i64>* %118, align 8, !dbg !37, !tbaa !6
  %119 = getelementptr inbounds i64, i64* %117, i64 1, !dbg !37
  store i64* %119, i64** %114, align 8, !dbg !37
  %send14 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_lt.14, i64 0), !dbg !37
  %120 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !38
  %121 = load i64*, i64** %120, align 8, !dbg !38
  store i64 %2, i64* %121, align 8, !dbg !38, !tbaa !6
  %122 = getelementptr inbounds i64, i64* %121, i64 1, !dbg !38
  store i64 %send14, i64* %122, align 8, !dbg !38, !tbaa !6
  %123 = getelementptr inbounds i64, i64* %122, i64 1, !dbg !38
  store i64* %123, i64** %120, align 8, !dbg !38
  %send16 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_p.15, i64 0), !dbg !38
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 31), i64** %15, align 8, !dbg !38, !tbaa !72
  %124 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !39
  %125 = load i64*, i64** %124, align 8, !dbg !39
  store i64 %2, i64* %125, align 8, !dbg !39, !tbaa !6
  %126 = getelementptr inbounds i64, i64* %125, i64 1, !dbg !39
  %127 = getelementptr inbounds i64, i64* %126, i64 1, !dbg !39
  %128 = bitcast i64* %126 to <2 x i64>*, !dbg !39
  store <2 x i64> <i64 180200280090161970, i64 155261597153597850>, <2 x i64>* %128, align 8, !dbg !39, !tbaa !6
  %129 = getelementptr inbounds i64, i64* %127, i64 1, !dbg !39
  store i64* %129, i64** %124, align 8, !dbg !39
  %send18 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_lte, i64 0), !dbg !39
  %130 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !40
  %131 = load i64*, i64** %130, align 8, !dbg !40
  store i64 %2, i64* %131, align 8, !dbg !40, !tbaa !6
  %132 = getelementptr inbounds i64, i64* %131, i64 1, !dbg !40
  store i64 %send18, i64* %132, align 8, !dbg !40, !tbaa !6
  %133 = getelementptr inbounds i64, i64* %132, i64 1, !dbg !40
  store i64* %133, i64** %130, align 8, !dbg !40
  %send20 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_p.16, i64 0), !dbg !40
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 32), i64** %15, align 8, !dbg !40, !tbaa !72
  %134 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !41
  %135 = load i64*, i64** %134, align 8, !dbg !41
  store i64 %2, i64* %135, align 8, !dbg !41, !tbaa !6
  %136 = getelementptr inbounds i64, i64* %135, i64 1, !dbg !41
  %137 = getelementptr inbounds i64, i64* %136, i64 1, !dbg !41
  %138 = bitcast i64* %136 to <2 x i64>*, !dbg !41
  store <2 x i64> <i64 57646075230342354, i64 155261597153597850>, <2 x i64>* %138, align 8, !dbg !41, !tbaa !6
  %139 = getelementptr inbounds i64, i64* %137, i64 1, !dbg !41
  store i64* %139, i64** %134, align 8, !dbg !41
  %send22 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_lte.17, i64 0), !dbg !41
  %140 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !42
  %141 = load i64*, i64** %140, align 8, !dbg !42
  store i64 %2, i64* %141, align 8, !dbg !42, !tbaa !6
  %142 = getelementptr inbounds i64, i64* %141, i64 1, !dbg !42
  store i64 %send22, i64* %142, align 8, !dbg !42, !tbaa !6
  %143 = getelementptr inbounds i64, i64* %142, i64 1, !dbg !42
  store i64* %143, i64** %140, align 8, !dbg !42
  %send24 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_p.18, i64 0), !dbg !42
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 33), i64** %15, align 8, !dbg !42, !tbaa !72
  %144 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !43
  %145 = load i64*, i64** %144, align 8, !dbg !43
  store i64 %2, i64* %145, align 8, !dbg !43, !tbaa !6
  %146 = getelementptr inbounds i64, i64* %145, i64 1, !dbg !43
  %147 = getelementptr inbounds i64, i64* %146, i64 1, !dbg !43
  %148 = bitcast i64* %146 to <2 x i64>*, !dbg !43
  store <2 x i64> <i64 75660473739824338, i64 75660473739824338>, <2 x i64>* %148, align 8, !dbg !43, !tbaa !6
  %149 = getelementptr inbounds i64, i64* %147, i64 1, !dbg !43
  store i64* %149, i64** %144, align 8, !dbg !43
  %send26 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_lte.19, i64 0), !dbg !43
  %150 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !44
  %151 = load i64*, i64** %150, align 8, !dbg !44
  store i64 %2, i64* %151, align 8, !dbg !44, !tbaa !6
  %152 = getelementptr inbounds i64, i64* %151, i64 1, !dbg !44
  store i64 %send26, i64* %152, align 8, !dbg !44, !tbaa !6
  %153 = getelementptr inbounds i64, i64* %152, i64 1, !dbg !44
  store i64* %153, i64** %150, align 8, !dbg !44
  %send28 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_p.20, i64 0), !dbg !44
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 36), i64** %15, align 8, !dbg !44, !tbaa !72
  %154 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !45
  %155 = load i64*, i64** %154, align 8, !dbg !45
  store i64 %2, i64* %155, align 8, !dbg !45, !tbaa !6
  %156 = getelementptr inbounds i64, i64* %155, i64 1, !dbg !45
  %157 = getelementptr inbounds i64, i64* %156, i64 1, !dbg !45
  %158 = bitcast i64* %156 to <2 x i64>*, !dbg !45
  store <2 x i64> <i64 45035996273704962, i64 17>, <2 x i64>* %158, align 8, !dbg !45, !tbaa !6
  %159 = getelementptr inbounds i64, i64* %157, i64 1, !dbg !45
  store i64* %159, i64** %154, align 8, !dbg !45
  %send30 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_plus.21, i64 0), !dbg !45
  %160 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !46
  %161 = load i64*, i64** %160, align 8, !dbg !46
  store i64 %2, i64* %161, align 8, !dbg !46, !tbaa !6
  %162 = getelementptr inbounds i64, i64* %161, i64 1, !dbg !46
  store i64 %send30, i64* %162, align 8, !dbg !46, !tbaa !6
  %163 = getelementptr inbounds i64, i64* %162, i64 1, !dbg !46
  store i64* %163, i64** %160, align 8, !dbg !46
  %send32 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_p.22, i64 0), !dbg !46
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 37), i64** %15, align 8, !dbg !46, !tbaa !72
  %rubyStr_8.9.i = load i64, i64* getelementptr inbounds ([13 x i64], [13 x i64]* @sorbet_moduleRubyStringTable, i64 0, i64 7), align 8, !dbg !47, !invariant.load !5
  %164 = load i64, i64* @rb_mKernel, align 8, !dbg !47
  %165 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !47
  %166 = load i64*, i64** %165, align 8, !dbg !47
  store i64 %164, i64* %166, align 8, !dbg !47, !tbaa !6
  %167 = getelementptr inbounds i64, i64* %166, i64 1, !dbg !47
  store i64 %rubyStr_8.9.i, i64* %167, align 8, !dbg !47, !tbaa !6
  %168 = getelementptr inbounds i64, i64* %167, i64 1, !dbg !47
  store i64* %168, i64** %165, align 8, !dbg !47
  %send34 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_Rational, i64 0), !dbg !47
  %169 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !48
  %170 = load i64*, i64** %169, align 8, !dbg !48
  store i64 %2, i64* %170, align 8, !dbg !48, !tbaa !6
  %171 = getelementptr inbounds i64, i64* %170, i64 1, !dbg !48
  store i64 36028797018963970, i64* %171, align 8, !dbg !48, !tbaa !6
  %172 = getelementptr inbounds i64, i64* %171, i64 1, !dbg !48
  store i64 %send34, i64* %172, align 8, !dbg !48, !tbaa !6
  %173 = getelementptr inbounds i64, i64* %172, i64 1, !dbg !48
  store i64* %173, i64** %169, align 8, !dbg !48
  %send36 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_plus.23, i64 0), !dbg !48
  %174 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !49
  %175 = load i64*, i64** %174, align 8, !dbg !49
  store i64 %2, i64* %175, align 8, !dbg !49, !tbaa !6
  %176 = getelementptr inbounds i64, i64* %175, i64 1, !dbg !49
  store i64 %send36, i64* %176, align 8, !dbg !49, !tbaa !6
  %177 = getelementptr inbounds i64, i64* %176, i64 1, !dbg !49
  store i64* %177, i64** %174, align 8, !dbg !49
  %send38 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_p.24, i64 0), !dbg !49
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 38), i64** %15, align 8, !dbg !49, !tbaa !72
  %rubyStr_5.i = load i64, i64* getelementptr inbounds ([13 x i64], [13 x i64]* @sorbet_moduleRubyStringTable, i64 0, i64 8), align 8, !dbg !50, !invariant.load !5
  %178 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !50
  %179 = load i64*, i64** %178, align 8, !dbg !50
  store i64 %164, i64* %179, align 8, !dbg !50, !tbaa !6
  %180 = getelementptr inbounds i64, i64* %179, i64 1, !dbg !50
  store i64 1, i64* %180, align 8, !dbg !50, !tbaa !6
  %181 = getelementptr inbounds i64, i64* %180, i64 1, !dbg !50
  store i64 %rubyStr_5.i, i64* %181, align 8, !dbg !50, !tbaa !6
  %182 = getelementptr inbounds i64, i64* %181, i64 1, !dbg !50
  store i64* %182, i64** %178, align 8, !dbg !50
  %send40 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_Complex, i64 0), !dbg !50
  %183 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !51
  %184 = load i64*, i64** %183, align 8, !dbg !51
  store i64 %2, i64* %184, align 8, !dbg !51, !tbaa !6
  %185 = getelementptr inbounds i64, i64* %184, i64 1, !dbg !51
  store i64 36028797018963970, i64* %185, align 8, !dbg !51, !tbaa !6
  %186 = getelementptr inbounds i64, i64* %185, i64 1, !dbg !51
  store i64 %send40, i64* %186, align 8, !dbg !51, !tbaa !6
  %187 = getelementptr inbounds i64, i64* %186, i64 1, !dbg !51
  store i64* %187, i64** %183, align 8, !dbg !51
  %send42 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_plus.25, i64 0), !dbg !51
  %188 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !52
  %189 = load i64*, i64** %188, align 8, !dbg !52
  store i64 %2, i64* %189, align 8, !dbg !52, !tbaa !6
  %190 = getelementptr inbounds i64, i64* %189, i64 1, !dbg !52
  store i64 %send42, i64* %190, align 8, !dbg !52, !tbaa !6
  %191 = getelementptr inbounds i64, i64* %190, i64 1, !dbg !52
  store i64* %191, i64** %188, align 8, !dbg !52
  %send44 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_p.26, i64 0), !dbg !52
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 40), i64** %15, align 8, !dbg !52, !tbaa !72
  %192 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !53
  %193 = load i64*, i64** %192, align 8, !dbg !53
  store i64 %2, i64* %193, align 8, !dbg !53, !tbaa !6
  %194 = getelementptr inbounds i64, i64* %193, i64 1, !dbg !53
  %195 = getelementptr inbounds i64, i64* %194, i64 1, !dbg !53
  %196 = bitcast i64* %194 to <2 x i64>*, !dbg !53
  store <2 x i64> <i64 199678348478539370, i64 7>, <2 x i64>* %196, align 8, !dbg !53, !tbaa !6
  %197 = getelementptr inbounds i64, i64* %195, i64 1, !dbg !53
  store i64* %197, i64** %192, align 8, !dbg !53
  %send46 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_minus.27, i64 0), !dbg !53
  %198 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !54
  %199 = load i64*, i64** %198, align 8, !dbg !54
  store i64 %2, i64* %199, align 8, !dbg !54, !tbaa !6
  %200 = getelementptr inbounds i64, i64* %199, i64 1, !dbg !54
  store i64 %send46, i64* %200, align 8, !dbg !54, !tbaa !6
  %201 = getelementptr inbounds i64, i64* %200, i64 1, !dbg !54
  store i64* %201, i64** %198, align 8, !dbg !54
  %send48 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_p.28, i64 0), !dbg !54
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 41), i64** %15, align 8, !dbg !54, !tbaa !72
  %rubyStr_15.4.i = load i64, i64* getelementptr inbounds ([13 x i64], [13 x i64]* @sorbet_moduleRubyStringTable, i64 0, i64 9), align 8, !dbg !55, !invariant.load !5
  %202 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !55
  %203 = load i64*, i64** %202, align 8, !dbg !55
  store i64 %164, i64* %203, align 8, !dbg !55, !tbaa !6
  %204 = getelementptr inbounds i64, i64* %203, i64 1, !dbg !55
  store i64 %rubyStr_15.4.i, i64* %204, align 8, !dbg !55, !tbaa !6
  %205 = getelementptr inbounds i64, i64* %204, i64 1, !dbg !55
  store i64* %205, i64** %202, align 8, !dbg !55
  %send50 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_Rational.29, i64 0), !dbg !55
  %206 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !56
  %207 = load i64*, i64** %206, align 8, !dbg !56
  store i64 %2, i64* %207, align 8, !dbg !56, !tbaa !6
  %208 = getelementptr inbounds i64, i64* %207, i64 1, !dbg !56
  store i64 199622053483197234, i64* %208, align 8, !dbg !56, !tbaa !6
  %209 = getelementptr inbounds i64, i64* %208, i64 1, !dbg !56
  store i64 %send50, i64* %209, align 8, !dbg !56, !tbaa !6
  %210 = getelementptr inbounds i64, i64* %209, i64 1, !dbg !56
  store i64* %210, i64** %206, align 8, !dbg !56
  %send52 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_minus.30, i64 0), !dbg !56
  %211 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !57
  %212 = load i64*, i64** %211, align 8, !dbg !57
  store i64 %2, i64* %212, align 8, !dbg !57, !tbaa !6
  %213 = getelementptr inbounds i64, i64* %212, i64 1, !dbg !57
  store i64 %send52, i64* %213, align 8, !dbg !57, !tbaa !6
  %214 = getelementptr inbounds i64, i64* %213, i64 1, !dbg !57
  store i64* %214, i64** %211, align 8, !dbg !57
  %send54 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_p.31, i64 0), !dbg !57
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 42), i64** %15, align 8, !dbg !57, !tbaa !72
  %rubyStr_18.i = load i64, i64* getelementptr inbounds ([13 x i64], [13 x i64]* @sorbet_moduleRubyStringTable, i64 0, i64 10), align 8, !dbg !58, !invariant.load !5
  %215 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !58
  %216 = load i64*, i64** %215, align 8, !dbg !58
  store i64 %164, i64* %216, align 8, !dbg !58, !tbaa !6
  %217 = getelementptr inbounds i64, i64* %216, i64 1, !dbg !58
  store i64 1, i64* %217, align 8, !dbg !58, !tbaa !6
  %218 = getelementptr inbounds i64, i64* %217, i64 1, !dbg !58
  store i64 %rubyStr_18.i, i64* %218, align 8, !dbg !58, !tbaa !6
  %219 = getelementptr inbounds i64, i64* %218, i64 1, !dbg !58
  store i64* %219, i64** %215, align 8, !dbg !58
  %send56 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_Complex.32, i64 0), !dbg !58
  %220 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !59
  %221 = load i64*, i64** %220, align 8, !dbg !59
  store i64 %2, i64* %221, align 8, !dbg !59, !tbaa !6
  %222 = getelementptr inbounds i64, i64* %221, i64 1, !dbg !59
  store i64 199565758487855106, i64* %222, align 8, !dbg !59, !tbaa !6
  %223 = getelementptr inbounds i64, i64* %222, i64 1, !dbg !59
  store i64 %send56, i64* %223, align 8, !dbg !59, !tbaa !6
  %224 = getelementptr inbounds i64, i64* %223, i64 1, !dbg !59
  store i64* %224, i64** %220, align 8, !dbg !59
  %send58 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_minus.33, i64 0), !dbg !59
  %225 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !60
  %226 = load i64*, i64** %225, align 8, !dbg !60
  store i64 %2, i64* %226, align 8, !dbg !60, !tbaa !6
  %227 = getelementptr inbounds i64, i64* %226, i64 1, !dbg !60
  store i64 %send58, i64* %227, align 8, !dbg !60, !tbaa !6
  %228 = getelementptr inbounds i64, i64* %227, i64 1, !dbg !60
  store i64* %228, i64** %225, align 8, !dbg !60
  %send60 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_p.34, i64 0), !dbg !60
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 44), i64** %15, align 8, !dbg !60, !tbaa !72
  %229 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !61
  %230 = load i64*, i64** %229, align 8, !dbg !61
  store i64 %2, i64* %230, align 8, !dbg !61, !tbaa !6
  %231 = getelementptr inbounds i64, i64* %230, i64 1, !dbg !61
  %232 = getelementptr inbounds i64, i64* %231, i64 1, !dbg !61
  %233 = bitcast i64* %231 to <2 x i64>*, !dbg !61
  store <2 x i64> <i64 113040350646999450, i64 13>, <2 x i64>* %233, align 8, !dbg !61, !tbaa !6
  %234 = getelementptr inbounds i64, i64* %232, i64 1, !dbg !61
  store i64* %234, i64** %229, align 8, !dbg !61
  %send62 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_lt.35, i64 0), !dbg !61
  %235 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !62
  %236 = load i64*, i64** %235, align 8, !dbg !62
  store i64 %2, i64* %236, align 8, !dbg !62, !tbaa !6
  %237 = getelementptr inbounds i64, i64* %236, i64 1, !dbg !62
  store i64 %send62, i64* %237, align 8, !dbg !62, !tbaa !6
  %238 = getelementptr inbounds i64, i64* %237, i64 1, !dbg !62
  store i64* %238, i64** %235, align 8, !dbg !62
  %send64 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_p.36, i64 0), !dbg !62
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 45), i64** %15, align 8, !dbg !62, !tbaa !72
  %rubyStr_25.4.i = load i64, i64* getelementptr inbounds ([13 x i64], [13 x i64]* @sorbet_moduleRubyStringTable, i64 0, i64 11), align 8, !dbg !63, !invariant.load !5
  %239 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !63
  %240 = load i64*, i64** %239, align 8, !dbg !63
  store i64 %164, i64* %240, align 8, !dbg !63, !tbaa !6
  %241 = getelementptr inbounds i64, i64* %240, i64 1, !dbg !63
  store i64 %rubyStr_25.4.i, i64* %241, align 8, !dbg !63, !tbaa !6
  %242 = getelementptr inbounds i64, i64* %241, i64 1, !dbg !63
  store i64* %242, i64** %239, align 8, !dbg !63
  %send66 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_Rational.37, i64 0), !dbg !63
  %243 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !64
  %244 = load i64*, i64** %243, align 8, !dbg !64
  store i64 %2, i64* %244, align 8, !dbg !64, !tbaa !6
  %245 = getelementptr inbounds i64, i64* %244, i64 1, !dbg !64
  store i64 113040350646999450, i64* %245, align 8, !dbg !64, !tbaa !6
  %246 = getelementptr inbounds i64, i64* %245, i64 1, !dbg !64
  store i64 %send66, i64* %246, align 8, !dbg !64, !tbaa !6
  %247 = getelementptr inbounds i64, i64* %246, i64 1, !dbg !64
  store i64* %247, i64** %243, align 8, !dbg !64
  %send68 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_lt.38, i64 0), !dbg !64
  %248 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !65
  %249 = load i64*, i64** %248, align 8, !dbg !65
  store i64 %2, i64* %249, align 8, !dbg !65, !tbaa !6
  %250 = getelementptr inbounds i64, i64* %249, i64 1, !dbg !65
  store i64 %send68, i64* %250, align 8, !dbg !65, !tbaa !6
  %251 = getelementptr inbounds i64, i64* %250, i64 1, !dbg !65
  store i64* %251, i64** %248, align 8, !dbg !65
  %send70 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_p.39, i64 0), !dbg !65
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 47), i64** %15, align 8, !dbg !65, !tbaa !72
  %252 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !66
  %253 = load i64*, i64** %252, align 8, !dbg !66
  store i64 %2, i64* %253, align 8, !dbg !66, !tbaa !6
  %254 = getelementptr inbounds i64, i64* %253, i64 1, !dbg !66
  %255 = getelementptr inbounds i64, i64* %254, i64 1, !dbg !66
  %256 = bitcast i64* %254 to <2 x i64>*, !dbg !66
  store <2 x i64> <i64 113040350646999450, i64 41>, <2 x i64>* %256, align 8, !dbg !66, !tbaa !6
  %257 = getelementptr inbounds i64, i64* %255, i64 1, !dbg !66
  store i64* %257, i64** %252, align 8, !dbg !66
  %send72 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_lte.40, i64 0), !dbg !66
  %258 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !67
  %259 = load i64*, i64** %258, align 8, !dbg !67
  store i64 %2, i64* %259, align 8, !dbg !67, !tbaa !6
  %260 = getelementptr inbounds i64, i64* %259, i64 1, !dbg !67
  store i64 %send72, i64* %260, align 8, !dbg !67, !tbaa !6
  %261 = getelementptr inbounds i64, i64* %260, i64 1, !dbg !67
  store i64* %261, i64** %258, align 8, !dbg !67
  %send74 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_p.41, i64 0), !dbg !67
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 48), i64** %15, align 8, !dbg !67, !tbaa !72
  %rubyStr_5.923.i = load i64, i64* getelementptr inbounds ([13 x i64], [13 x i64]* @sorbet_moduleRubyStringTable, i64 0, i64 12), align 8, !dbg !68, !invariant.load !5
  %262 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !68
  %263 = load i64*, i64** %262, align 8, !dbg !68
  store i64 %164, i64* %263, align 8, !dbg !68, !tbaa !6
  %264 = getelementptr inbounds i64, i64* %263, i64 1, !dbg !68
  store i64 %rubyStr_5.923.i, i64* %264, align 8, !dbg !68, !tbaa !6
  %265 = getelementptr inbounds i64, i64* %264, i64 1, !dbg !68
  store i64* %265, i64** %262, align 8, !dbg !68
  %send76 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_Rational.42, i64 0), !dbg !68
  %266 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !69
  %267 = load i64*, i64** %266, align 8, !dbg !69
  store i64 %2, i64* %267, align 8, !dbg !69, !tbaa !6
  %268 = getelementptr inbounds i64, i64* %267, i64 1, !dbg !69
  store i64 113040350646999450, i64* %268, align 8, !dbg !69, !tbaa !6
  %269 = getelementptr inbounds i64, i64* %268, i64 1, !dbg !69
  store i64 %send76, i64* %269, align 8, !dbg !69, !tbaa !6
  %270 = getelementptr inbounds i64, i64* %269, i64 1, !dbg !69
  store i64* %270, i64** %266, align 8, !dbg !69
  %send78 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_lte.43, i64 0), !dbg !69
  %271 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %5, i64 0, i32 1, !dbg !70
  %272 = load i64*, i64** %271, align 8, !dbg !70
  store i64 %2, i64* %272, align 8, !dbg !70, !tbaa !6
  %273 = getelementptr inbounds i64, i64* %272, i64 1, !dbg !70
  store i64 %send78, i64* %273, align 8, !dbg !70, !tbaa !6
  %274 = getelementptr inbounds i64, i64* %273, i64 1, !dbg !70
  store i64* %274, i64** %271, align 8, !dbg !70
  %send80 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_p.44, i64 0), !dbg !70
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9)
  ret void
}

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #10

; Function Attrs: argmemonly nofree nosync nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #11

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: cold minsize noreturn nounwind sspreq uwtable
define internal fastcc void @"func_Object#2lt.cold.1"(i64 %0) unnamed_addr #12 !dbg !147 {
newFuncRoot:
  tail call void @sorbet_cast_failure(i64 %0, i8* getelementptr inbounds ([309 x i8], [309 x i8]* @sorbet_moduleStringTable, i64 0, i64 94), i8* getelementptr inbounds ([309 x i8], [309 x i8]* @sorbet_moduleStringTable, i64 0, i64 120)) #15
  unreachable
}

; Function Attrs: cold minsize noreturn nounwind sspreq uwtable
define internal fastcc void @"func_Object#2lt.cold.3"(i64 %rawArg_x) unnamed_addr #12 !dbg !149 {
newFuncRoot:
  tail call void @sorbet_cast_failure(i64 %rawArg_x, i8* getelementptr inbounds ([309 x i8], [309 x i8]* @sorbet_moduleStringTable, i64 0, i64 48), i8* getelementptr inbounds ([309 x i8], [309 x i8]* @sorbet_moduleStringTable, i64 0, i64 62)) #15, !dbg !150
  unreachable, !dbg !150
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.assume(i1 noundef) #13

; Function Attrs: ssp
define linkonce void @const_recompute_T() local_unnamed_addr #8 {
  %1 = tail call i64 @sorbet_getConstant(i8* getelementptr inbounds ([309 x i8], [309 x i8]* @sorbet_moduleStringTable, i64 0, i64 206), i64 1)
  store i64 %1, i64* @guarded_const_T, align 8
  %2 = load i64, i64* @ruby_vm_global_constant_state, align 8, !tbaa !118
  store i64 %2, i64* @guard_epoch_T, align 8
  ret void
}

; Function Attrs: ssp
define linkonce void @"const_recompute_T::Boolean"() local_unnamed_addr #8 {
  %1 = tail call i64 @sorbet_getConstant(i8* getelementptr inbounds ([309 x i8], [309 x i8]* @sorbet_moduleStringTable, i64 0, i64 120), i64 10)
  store i64 %1, i64* @"guarded_const_T::Boolean", align 8
  %2 = load i64, i64* @ruby_vm_global_constant_state, align 8, !tbaa !118
  store i64 %2, i64* @"guard_epoch_T::Boolean", align 8
  ret void
}

; Function Attrs: ssp
define linkonce void @"const_recompute_T::Sig"() local_unnamed_addr #8 {
  %1 = tail call i64 @sorbet_getConstant(i8* getelementptr inbounds ([309 x i8], [309 x i8]* @sorbet_moduleStringTable, i64 0, i64 223), i64 6)
  store i64 %1, i64* @"guarded_const_T::Sig", align 8
  %2 = load i64, i64* @ruby_vm_global_constant_state, align 8, !tbaa !118
  store i64 %2, i64* @"guard_epoch_T::Sig", align 8
  ret void
}

attributes #0 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone willreturn "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { allocsize(0,1) "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nosync nounwind willreturn }
attributes #6 = { nounwind ssp uwtable "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind sspreq uwtable }
attributes #8 = { ssp }
attributes #9 = { sspreq }
attributes #10 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #11 = { argmemonly nofree nosync nounwind willreturn writeonly }
attributes #12 = { cold minsize noreturn nounwind sspreq uwtable }
attributes #13 = { nofree nosync nounwind willreturn }
attributes #14 = { noreturn nounwind }
attributes #15 = { noreturn }
attributes #16 = { noinline }
attributes #17 = { nounwind }
attributes #18 = { nounwind allocsize(0,1) }

!llvm.module.flags = !{!0, !1, !2}
!llvm.dbg.cu = !{!3}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"cf-protection-return", i32 1}
!2 = !{i32 4, !"cf-protection-branch", i32 1}
!3 = distinct !DICompileUnit(language: DW_LANG_C, file: !4, producer: "Sorbet LLVM", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !5)
!4 = !DIFile(filename: "test/testdata/compiler/float-intrinsics.rb", directory: ".")
!5 = !{}
!6 = !{!7, !7, i64 0}
!7 = !{!"long", !8, i64 0}
!8 = !{!"omnipotent char", !9, i64 0}
!9 = !{!"Simple C/C++ TBAA"}
!10 = !DILocation(line: 14, column: 3, scope: !11)
!11 = distinct !DISubprogram(name: "Object#minus", linkageName: "func_Object#5minus", scope: null, file: !4, line: 13, type: !12, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3, retainedNodes: !5)
!12 = !DISubroutineType(types: !13)
!13 = !{!14}
!14 = !DIBasicType(name: "VALUE", size: 64, encoding: DW_ATE_signed)
!15 = !DILocation(line: 7, column: 26, scope: !16)
!16 = distinct !DISubprogram(name: "<root>.<static-init>", linkageName: "func_<root>.13<static-init>$block_1", scope: !17, file: !4, line: 5, type: !12, scopeLine: 5, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3, retainedNodes: !5)
!17 = distinct !DISubprogram(name: "<root>.<static-init>", linkageName: "func_<root>.13<static-init>", scope: null, file: !4, line: 5, type: !12, scopeLine: 5, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3, retainedNodes: !5)
!18 = !DILocation(line: 7, column: 6, scope: !16)
!19 = !DILocation(line: 7, column: 45, scope: !16)
!20 = !DILocation(line: 12, column: 26, scope: !21)
!21 = distinct !DISubprogram(name: "<root>.<static-init>", linkageName: "func_<root>.13<static-init>$block_2", scope: !17, file: !4, line: 5, type: !12, scopeLine: 5, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3, retainedNodes: !5)
!22 = !DILocation(line: 12, column: 6, scope: !21)
!23 = !DILocation(line: 12, column: 45, scope: !21)
!24 = !DILocation(line: 17, column: 26, scope: !25)
!25 = distinct !DISubprogram(name: "<root>.<static-init>", linkageName: "func_<root>.13<static-init>$block_3", scope: !17, file: !4, line: 5, type: !12, scopeLine: 5, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3, retainedNodes: !5)
!26 = !DILocation(line: 17, column: 6, scope: !25)
!27 = !DILocation(line: 22, column: 26, scope: !28)
!28 = distinct !DISubprogram(name: "<root>.<static-init>", linkageName: "func_<root>.13<static-init>$block_4", scope: !17, file: !4, line: 5, type: !12, scopeLine: 5, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3, retainedNodes: !5)
!29 = !DILocation(line: 22, column: 6, scope: !28)
!30 = !DILocation(line: 5, column: 1, scope: !17)
!31 = !DILocation(line: 27, column: 3, scope: !17)
!32 = !DILocation(line: 27, column: 1, scope: !17)
!33 = !DILocation(line: 28, column: 3, scope: !17)
!34 = !DILocation(line: 28, column: 1, scope: !17)
!35 = !DILocation(line: 29, column: 3, scope: !17)
!36 = !DILocation(line: 29, column: 1, scope: !17)
!37 = !DILocation(line: 30, column: 3, scope: !17)
!38 = !DILocation(line: 30, column: 1, scope: !17)
!39 = !DILocation(line: 31, column: 3, scope: !17)
!40 = !DILocation(line: 31, column: 1, scope: !17)
!41 = !DILocation(line: 32, column: 3, scope: !17)
!42 = !DILocation(line: 32, column: 1, scope: !17)
!43 = !DILocation(line: 33, column: 3, scope: !17)
!44 = !DILocation(line: 33, column: 1, scope: !17)
!45 = !DILocation(line: 36, column: 3, scope: !17)
!46 = !DILocation(line: 36, column: 1, scope: !17)
!47 = !DILocation(line: 37, column: 13, scope: !17)
!48 = !DILocation(line: 37, column: 3, scope: !17)
!49 = !DILocation(line: 37, column: 1, scope: !17)
!50 = !DILocation(line: 38, column: 13, scope: !17)
!51 = !DILocation(line: 38, column: 3, scope: !17)
!52 = !DILocation(line: 38, column: 1, scope: !17)
!53 = !DILocation(line: 40, column: 3, scope: !17)
!54 = !DILocation(line: 40, column: 1, scope: !17)
!55 = !DILocation(line: 41, column: 15, scope: !17)
!56 = !DILocation(line: 41, column: 3, scope: !17)
!57 = !DILocation(line: 41, column: 1, scope: !17)
!58 = !DILocation(line: 42, column: 15, scope: !17)
!59 = !DILocation(line: 42, column: 3, scope: !17)
!60 = !DILocation(line: 42, column: 1, scope: !17)
!61 = !DILocation(line: 44, column: 3, scope: !17)
!62 = !DILocation(line: 44, column: 1, scope: !17)
!63 = !DILocation(line: 45, column: 12, scope: !17)
!64 = !DILocation(line: 45, column: 3, scope: !17)
!65 = !DILocation(line: 45, column: 1, scope: !17)
!66 = !DILocation(line: 47, column: 3, scope: !17)
!67 = !DILocation(line: 47, column: 1, scope: !17)
!68 = !DILocation(line: 48, column: 13, scope: !17)
!69 = !DILocation(line: 48, column: 3, scope: !17)
!70 = !DILocation(line: 48, column: 1, scope: !17)
!71 = distinct !DISubprogram(name: "Object#plus", linkageName: "func_Object#4plus", scope: null, file: !4, line: 8, type: !12, scopeLine: 8, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3, retainedNodes: !5)
!72 = !{!73, !73, i64 0}
!73 = !{!"any pointer", !8, i64 0}
!74 = !DILocation(line: 8, column: 1, scope: !71)
!75 = !{!"branch_weights", i32 4001, i32 4000000}
!76 = !DILocation(line: 8, column: 10, scope: !71)
!77 = !{!78, !7, i64 0}
!78 = !{!"RBasic", !7, i64 0, !7, i64 8}
!79 = !{!"branch_weights", i32 2000, i32 1}
!80 = !DILocation(line: 8, column: 13, scope: !71)
!81 = !DILocation(line: 9, column: 3, scope: !71)
!82 = !{!83}
!83 = distinct !{!83, !84, !"sorbet_int_rb_float_plus: argument 0"}
!84 = distinct !{!84, !"sorbet_int_rb_float_plus"}
!85 = !{!86, !87, i64 40}
!86 = !{!"rb_execution_context_struct", !73, i64 0, !7, i64 8, !73, i64 16, !73, i64 24, !73, i64 32, !87, i64 40, !87, i64 44, !73, i64 48, !73, i64 56, !73, i64 64, !7, i64 72, !7, i64 80, !73, i64 88, !7, i64 96, !73, i64 104, !73, i64 112, !7, i64 120, !7, i64 128, !8, i64 136, !8, i64 137, !7, i64 144, !88, i64 152}
!87 = !{!"int", !8, i64 0}
!88 = !{!"", !73, i64 0, !73, i64 8, !7, i64 16, !8, i64 24}
!89 = !{!86, !87, i64 44}
!90 = !{!86, !73, i64 56}
!91 = !DILocation(line: 13, column: 1, scope: !11)
!92 = !DILocation(line: 13, column: 11, scope: !11)
!93 = !DILocation(line: 13, column: 14, scope: !11)
!94 = distinct !DISubprogram(name: "Object#lt", linkageName: "func_Object#2lt", scope: null, file: !4, line: 18, type: !12, scopeLine: 18, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3, retainedNodes: !5)
!95 = !DILocation(line: 18, column: 1, scope: !94)
!96 = !DILocation(line: 18, column: 8, scope: !94)
!97 = !DILocation(line: 18, column: 11, scope: !94)
!98 = !DILocation(line: 19, column: 3, scope: !94)
!99 = !{!100}
!100 = distinct !{!100, !101, !"sorbet_int_flo_lt: argument 0"}
!101 = distinct !{!101, !"sorbet_int_flo_lt"}
!102 = !{!"branch_weights", i32 1, i32 2001, i32 2000}
!103 = !DILocation(line: 0, scope: !94)
!104 = distinct !DISubprogram(name: "Object#lte", linkageName: "func_Object#3lte", scope: null, file: !4, line: 23, type: !12, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3, retainedNodes: !5)
!105 = !DILocation(line: 23, column: 1, scope: !104)
!106 = !DILocation(line: 23, column: 9, scope: !104)
!107 = !DILocation(line: 23, column: 12, scope: !104)
!108 = !DILocation(line: 24, column: 3, scope: !104)
!109 = !{!110}
!110 = distinct !{!110, !111, !"sorbet_int_flo_le: argument 0"}
!111 = distinct !{!111, !"sorbet_int_flo_le"}
!112 = !DILocation(line: 0, scope: !104)
!113 = !{!86, !73, i64 16}
!114 = !{!115, !7, i64 24}
!115 = !{!"rb_control_frame_struct", !73, i64 0, !73, i64 8, !73, i64 16, !7, i64 24, !73, i64 32, !73, i64 40, !73, i64 48}
!116 = !{!115, !73, i64 16}
!117 = !{!115, !73, i64 32}
!118 = !{!119, !119, i64 0}
!119 = !{!"long long", !8, i64 0}
!120 = !{!"branch_weights", i32 1, i32 10000}
!121 = !DILocation(line: 7, column: 1, scope: !16)
!122 = !DILocation(line: 12, column: 1, scope: !21)
!123 = !DILocation(line: 17, column: 1, scope: !25)
!124 = !DILocation(line: 22, column: 1, scope: !28)
!125 = !DILocation(line: 8, column: 1, scope: !17)
!126 = !DILocation(line: 13, column: 1, scope: !17)
!127 = !DILocation(line: 18, column: 1, scope: !17)
!128 = !DILocation(line: 23, column: 1, scope: !17)
!129 = !{!130, !7, i64 400}
!130 = !{!"rb_vm_struct", !7, i64 0, !131, i64 8, !73, i64 192, !73, i64 200, !73, i64 208, !119, i64 216, !8, i64 224, !132, i64 264, !132, i64 280, !132, i64 296, !132, i64 312, !7, i64 328, !87, i64 336, !87, i64 340, !87, i64 344, !87, i64 344, !87, i64 344, !87, i64 344, !87, i64 348, !7, i64 352, !8, i64 360, !7, i64 400, !7, i64 408, !7, i64 416, !7, i64 424, !7, i64 432, !7, i64 440, !7, i64 448, !73, i64 456, !73, i64 464, !134, i64 472, !135, i64 992, !73, i64 1016, !73, i64 1024, !87, i64 1032, !87, i64 1036, !132, i64 1040, !8, i64 1056, !7, i64 1096, !7, i64 1104, !7, i64 1112, !7, i64 1120, !7, i64 1128, !87, i64 1136, !73, i64 1144, !73, i64 1152, !73, i64 1160, !73, i64 1168, !73, i64 1176, !73, i64 1184, !87, i64 1192, !136, i64 1200, !8, i64 1232}
!131 = !{!"rb_global_vm_lock_struct", !73, i64 0, !8, i64 8, !132, i64 48, !73, i64 64, !87, i64 72, !8, i64 80, !8, i64 128, !87, i64 176, !87, i64 180}
!132 = !{!"list_head", !133, i64 0}
!133 = !{!"list_node", !73, i64 0, !73, i64 8}
!134 = !{!"", !8, i64 0}
!135 = !{!"rb_hook_list_struct", !73, i64 0, !87, i64 8, !87, i64 12, !87, i64 16}
!136 = !{!"", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24}
!137 = !DILocation(line: 0, scope: !17)
!138 = !DILocation(line: 7, column: 1, scope: !17)
!139 = !DILocation(line: 12, column: 1, scope: !17)
!140 = !DILocation(line: 17, column: 1, scope: !17)
!141 = !DILocation(line: 22, column: 1, scope: !17)
!142 = !{!143, !87, i64 8}
!143 = !{!"rb_sorbet_param_struct", !144, i64 0, !87, i64 4, !87, i64 8, !87, i64 12, !87, i64 16, !87, i64 20, !87, i64 24, !87, i64 28, !73, i64 32, !87, i64 40, !87, i64 44, !87, i64 48, !87, i64 52, !73, i64 56}
!144 = !{!"", !87, i64 0, !87, i64 0, !87, i64 0, !87, i64 0, !87, i64 0, !87, i64 0, !87, i64 0, !87, i64 0, !87, i64 1, !87, i64 1}
!145 = !{!143, !87, i64 4}
!146 = !{!143, !73, i64 32}
!147 = distinct !DISubprogram(name: "func_Object#2lt.cold.1", linkageName: "func_Object#2lt.cold.1", scope: null, file: !4, type: !148, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3, retainedNodes: !5)
!148 = !DISubroutineType(types: !5)
!149 = distinct !DISubprogram(name: "func_Object#2lt.cold.3", linkageName: "func_Object#2lt.cold.3", scope: null, file: !4, type: !148, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3, retainedNodes: !5)
!150 = !DILocation(line: 18, column: 8, scope: !149)
