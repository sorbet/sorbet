; ModuleID = 'payload'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

%struct.rb_vm_struct = type { i64, %struct.rb_global_vm_lock_struct, %struct.rb_thread_struct*, %struct.rb_thread_struct*, i8*, i64, %union.pthread_mutex_t, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i64, i32, i32, i8, i32, i64, [5 x i64], i64, i64, i64, i64, i64, i64, i64, %struct.st_table*, %struct.st_table*, %struct.anon.5, %struct.rb_hook_list_struct, %struct.st_table*, %struct.rb_postponed_job_struct*, i32, i32, %struct.list_head, %union.pthread_mutex_t, i64, i64, i64, i64, i64, i32, %struct.st_table*, %struct.rb_objspace*, %struct.rb_at_exit_list*, i64*, %struct.st_table*, %struct.rb_builtin_function*, i32, %struct.anon.6, [29 x i16] }
%struct.rb_global_vm_lock_struct = type { %struct.rb_thread_struct*, %union.pthread_mutex_t, %struct.list_head, %struct.rb_thread_struct*, i32, %union.pthread_cond_t, %union.pthread_cond_t, i32, i32 }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%struct.rb_thread_struct = type { %struct.list_node, i64, %struct.rb_vm_struct*, %struct.rb_execution_context_struct*, i64, %struct.rb_calling_info*, i64, i64, i64, i8, i8, i32, %struct.native_thread_data_struct, i8*, i64, i64, i64, i64, %union.pthread_mutex_t, %struct.rb_unblock_callback, i64, %struct.rb_mutex_struct*, %struct.rb_thread_list_struct*, %union.anon.10, i32, i64, %struct.rb_fiber_struct*, [5 x i8*], i64 }
%struct.list_node = type { %struct.list_node*, %struct.list_node* }
%struct.rb_execution_context_struct = type { i64*, i64, %struct.rb_control_frame_struct*, %struct.rb_vm_tag*, %struct.rb_vm_protect_tag*, i32, i32, %struct.rb_fiber_struct*, %struct.rb_thread_struct*, %struct.st_table*, i64, i64, i64*, i64, %struct.rb_ensure_list*, %struct.rb_trace_arg_struct*, i64, i64, i8, i8, i64, %struct.anon.7 }
%struct.rb_control_frame_struct = type { i64*, i64*, %struct.rb_iseq_struct*, i64, i64*, i8*, i64* }
%struct.rb_iseq_struct = type { i64, i64, %struct.rb_iseq_constant_body*, %union.anon.17 }
%struct.rb_iseq_constant_body = type { i32, i32, i64*, %struct.anon, %struct.rb_iseq_location_struct, %struct.iseq_insn_info, i64*, %struct.iseq_catch_table*, %struct.rb_iseq_struct*, %struct.rb_iseq_struct*, %union.iseq_inline_storage_entry*, %struct.rb_call_data*, %struct.anon.16, i32, i32, i32, i32, i32, i8, i64 }
%struct.anon = type { %struct.anon.0, i32, i32, i32, i32, i32, i32, i32, i64*, %struct.rb_iseq_param_keyword* }
%struct.anon.0 = type { i16, [2 x i8] }
%struct.rb_iseq_param_keyword = type { i32, i32, i32, i32, i64*, i64* }
%struct.rb_iseq_location_struct = type { i64, i64, i64, i64, i32, %struct.rb_code_location_struct }
%struct.rb_code_location_struct = type { %struct.rb_code_position_struct, %struct.rb_code_position_struct }
%struct.rb_code_position_struct = type { i32, i32 }
%struct.iseq_insn_info = type { %struct.iseq_insn_info_entry*, i32*, i32, %struct.succ_index_table* }
%struct.iseq_insn_info_entry = type opaque
%struct.succ_index_table = type opaque
%struct.iseq_catch_table = type opaque
%union.iseq_inline_storage_entry = type { %struct.iseq_inline_cache_entry }
%struct.iseq_inline_cache_entry = type { i64, %struct.rb_cref_struct*, i64 }
%struct.rb_cref_struct = type { i64, i64, i64, %struct.rb_cref_struct*, %struct.rb_scope_visi_struct }
%struct.rb_scope_visi_struct = type { i8, [3 x i8] }
%struct.rb_call_data = type { %struct.rb_call_cache, %struct.rb_call_info }
%struct.rb_call_cache = type { i64, [3 x i64], %struct.rb_callable_method_entry_struct*, i64, i64 (%struct.rb_execution_context_struct*, %struct.rb_control_frame_struct*, %struct.rb_calling_info*, %struct.rb_call_data*)*, %union.anon.15 }
%struct.rb_callable_method_entry_struct = type { i64, i64, %struct.rb_method_definition_struct*, i64, i64 }
%struct.rb_method_definition_struct = type { i64, %union.anon.13, i64, i64 }
%union.anon.13 = type { %struct.rb_method_cfunc_struct }
%struct.rb_method_cfunc_struct = type { i64 (...)*, i64 (i64, i32, i64*, i64 (...)*)*, i32 }
%union.anon.15 = type { i32 }
%struct.rb_call_info = type { i64, i32, i32 }
%struct.anon.16 = type { i64, i64, i64, i64* }
%union.anon.17 = type { %struct.anon.18 }
%struct.anon.18 = type { i64, i32 }
%struct.rb_vm_tag = type { i64, i64, [5 x i8*], %struct.rb_vm_tag*, i32 }
%struct.rb_vm_protect_tag = type { %struct.rb_vm_protect_tag* }
%struct.rb_ensure_list = type { %struct.rb_ensure_list*, %struct.rb_ensure_entry }
%struct.rb_ensure_entry = type { i64, i64 (i64)*, i64 }
%struct.rb_trace_arg_struct = type { i32, %struct.rb_execution_context_struct*, %struct.rb_control_frame_struct*, i64, i64, i64, i64, i64, i32, i32, i64 }
%struct.anon.7 = type { i64*, i64*, i64, [1 x %struct.__jmp_buf_tag] }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.rb_calling_info = type { i64, i64, i32, i32 }
%struct.native_thread_data_struct = type { %struct.list_head, %union.anon.9 }
%union.anon.9 = type { %union.pthread_cond_t }
%struct.rb_unblock_callback = type { void (i8*)*, i8* }
%struct.rb_mutex_struct = type opaque
%struct.rb_thread_list_struct = type { %struct.rb_thread_list_struct*, %struct.rb_thread_struct* }
%union.anon.10 = type { %struct.anon.11 }
%struct.anon.11 = type { i64, i64, i32 }
%struct.rb_fiber_struct = type opaque
%struct.anon.5 = type { [65 x i64] }
%struct.rb_hook_list_struct = type { %struct.rb_event_hook_struct*, i32, i32, i32 }
%struct.rb_event_hook_struct = type opaque
%struct.rb_postponed_job_struct = type opaque
%struct.list_head = type { %struct.list_node }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.rb_objspace = type opaque
%struct.rb_at_exit_list = type { void (%struct.rb_vm_struct*)*, %struct.rb_at_exit_list* }
%struct.st_table = type { i8, i8, i8, i32, %struct.st_hash_type*, i64, i64*, i64, i64, %struct.st_table_entry* }
%struct.st_hash_type = type { i32 (i64, i64)*, i64 (i64)* }
%struct.st_table_entry = type opaque
%struct.rb_builtin_function = type opaque
%struct.anon.6 = type { i64, i64, i64, i64 }
%struct.SorbetLineNumberInfo = type { i32, %struct.iseq_insn_info_entry*, i64* }
%struct.FunctionInlineCache = type { %struct.rb_kwarg_call_data }
%struct.rb_kwarg_call_data = type { %struct.rb_call_cache, %struct.rb_call_info_with_kwarg }
%struct.rb_call_info_with_kwarg = type { %struct.rb_call_info, %struct.rb_call_info_kw_arg* }
%struct.rb_call_info_kw_arg = type { i32, [1 x i64] }
%struct.iseq_inline_iv_cache_entry = type { i64, i64 }

@ruby_current_vm_ptr = external local_unnamed_addr global %struct.rb_vm_struct*, align 8
@ruby_current_execution_context_ptr = external local_unnamed_addr global %struct.rb_execution_context_struct*, align 8
@rb_eRuntimeError = external local_unnamed_addr global i64, align 8
@.str.9 = private unnamed_addr constant [95 x i8] c"sorbet_getBuildSCMRevision: Shared objects compiled by sorbet_llvm must be run by sorbet_ruby.\00", align 1
@.str.10 = private unnamed_addr constant [93 x i8] c"sorbet_getIsReleaseBuild: Shared objects compiled by sorbet_llvm must be run by sorbet_ruby.\00", align 1
@"stackFramePrecomputed_func_Object#14take_arguments" = unnamed_addr global %struct.rb_iseq_struct* null, align 8
@rubyIdPrecomputed_take_arguments = internal unnamed_addr global i64 0, align 8
@str_take_arguments = private unnamed_addr constant [15 x i8] c"take_arguments\00", align 1
@rubyStrFrozen_take_arguments = internal unnamed_addr global i64 0, align 8
@"rubyStrFrozen_test/testdata/compiler/all_arguments.rb" = internal unnamed_addr global i64 0, align 8
@"str_test/testdata/compiler/all_arguments.rb" = private unnamed_addr constant [40 x i8] c"test/testdata/compiler/all_arguments.rb\00", align 1
@iseqEncodedArray = internal global [32 x i64] zeroinitializer
@fileLineNumberInfo = internal global %struct.SorbetLineNumberInfo zeroinitializer
@rubyIdPrecomputed_d = internal unnamed_addr global i64 0, align 8
@str_d = private unnamed_addr constant [2 x i8] c"d\00", align 1
@rubyIdPrecomputed_e = internal unnamed_addr global i64 0, align 8
@str_e = private unnamed_addr constant [2 x i8] c"e\00", align 1
@"str_<build-array>" = private unnamed_addr constant [14 x i8] c"<build-array>\00", align 1
@ic_inspect = internal global %struct.FunctionInlineCache zeroinitializer
@rubyIdPrecomputed_inspect = internal unnamed_addr global i64 0, align 8
@str_inspect = private unnamed_addr constant [8 x i8] c"inspect\00", align 1
@ic_puts = internal global %struct.FunctionInlineCache zeroinitializer
@rubyIdPrecomputed_puts = internal unnamed_addr global i64 0, align 8
@str_puts = private unnamed_addr constant [5 x i8] c"puts\00", align 1
@"stackFramePrecomputed_func_<root>.17<static-init>$152" = unnamed_addr global %struct.rb_iseq_struct* null, align 8
@"rubyIdPrecomputed_<top (required)>" = internal unnamed_addr global i64 0, align 8
@"str_<top (required)>" = private unnamed_addr constant [17 x i8] c"<top (required)>\00", align 1
@rubyIdPrecomputed_normal = internal unnamed_addr global i64 0, align 8
@str_normal = private unnamed_addr constant [7 x i8] c"normal\00", align 1
@rubyIdPrecomputed_a = internal unnamed_addr global i64 0, align 8
@str_a = private unnamed_addr constant [2 x i8] c"a\00", align 1
@rubyIdPrecomputed_b = internal unnamed_addr global i64 0, align 8
@str_b = private unnamed_addr constant [2 x i8] c"b\00", align 1
@rubyIdPrecomputed_c = internal unnamed_addr global i64 0, align 8
@str_c = private unnamed_addr constant [2 x i8] c"c\00", align 1
@rubyIdPrecomputed_g = internal unnamed_addr global i64 0, align 8
@str_g = private unnamed_addr constant [2 x i8] c"g\00", align 1
@rubyIdPrecomputed_f = internal unnamed_addr global i64 0, align 8
@str_f = private unnamed_addr constant [2 x i8] c"f\00", align 1
@ic_take_arguments = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.1 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.2 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.3 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.4 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.5 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.6 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.7 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.8 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.9 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.10 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.11 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.12 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.13 = internal global %struct.FunctionInlineCache zeroinitializer
@rubyIdPrecomputed_baz = internal unnamed_addr global i64 0, align 8
@str_baz = private unnamed_addr constant [4 x i8] c"baz\00", align 1
@ic_take_arguments.14 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.15 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.16 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.17 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.18 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.19 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.20 = internal global %struct.FunctionInlineCache zeroinitializer
@rb_cObject = external local_unnamed_addr constant i64

declare i64 @rb_id2sym(i64) local_unnamed_addr #0

; Function Attrs: noreturn
declare void @sorbet_raiseArity(i32, i32, i32) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @sorbet_raiseMissingKeywords(i64) local_unnamed_addr #1

declare i64 @sorbet_addMissingKWArg(i64, i64) local_unnamed_addr #0

declare %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64, i64, i64, i64, %struct.rb_iseq_struct*, i32, i32, %struct.SorbetLineNumberInfo*, i64*, i32, i32) local_unnamed_addr #0

declare void @sorbet_initLineNumberInfo(%struct.SorbetLineNumberInfo*, i64*, i32) local_unnamed_addr #0

declare i64 @sorbet_readRealpath() local_unnamed_addr #0

declare void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache*, i64, i32, i32, i32, i64*) local_unnamed_addr #0

declare i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache*, i64) local_unnamed_addr #0

declare void @sorbet_setMethodStackFrame(%struct.rb_execution_context_struct*, %struct.rb_control_frame_struct*, %struct.rb_iseq_struct*) local_unnamed_addr #0

declare void @sorbet_vm_define_method(i64, i8*, i64 (i32, i64*, i64, %struct.rb_control_frame_struct*)*, i8*, %struct.rb_iseq_struct*, i1 zeroext) local_unnamed_addr #0

declare i64 @sorbet_vm_fstring_new(i8*, i64) local_unnamed_addr #0

declare i32 @rb_block_given_p() local_unnamed_addr #0

declare i64 @rb_block_proc() local_unnamed_addr #0

declare i64 @rb_intern2(i8*, i64) local_unnamed_addr #0

declare i64 @rb_ary_new_from_values(i64, i64*) local_unnamed_addr #0

declare i64 @rb_hash_new() local_unnamed_addr #0

declare i64 @rb_hash_dup(i64) local_unnamed_addr #0

declare void @rb_gc_register_mark_object(i64) local_unnamed_addr #0

; Function Attrs: noreturn
declare void @rb_raise(i64, i8*, ...) local_unnamed_addr #1

declare i64 @rb_ary_new() local_unnamed_addr #0

declare i64 @rb_hash_delete_entry(i64, i64) local_unnamed_addr #0

declare i32 @rb_threadptr_execute_interrupts(%struct.rb_thread_struct*, i32) local_unnamed_addr #0

; Function Attrs: allocsize(0,1)
declare noalias nonnull i8* @ruby_xcalloc(i64, i64) local_unnamed_addr #2

; Function Attrs: allocsize(0,1)
declare noalias nonnull i8* @ruby_xmalloc2(i64, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define weak i32 @sorbet_getIsReleaseBuild() local_unnamed_addr #4 {
  %1 = load i64, i64* @rb_eRuntimeError, align 8, !tbaa !6
  tail call void (i64, i8*, ...) @rb_raise(i64 %1, i8* noundef getelementptr inbounds ([93 x i8], [93 x i8]* @.str.10, i64 0, i64 0)) #8
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define weak i8* @sorbet_getBuildSCMRevision() local_unnamed_addr #4 {
  %1 = load i64, i64* @rb_eRuntimeError, align 8, !tbaa !6
  tail call void (i64, i8*, ...) @rb_raise(i64 %1, i8* noundef getelementptr inbounds ([95 x i8], [95 x i8]* @.str.9, i64 0, i64 0)) #8
  unreachable
}

; Function Attrs: nounwind sspreq uwtable
define i64 @"func_Object#14take_arguments"(i32 %argc, i64* %argArray, i64 %selfRaw, %struct.rb_control_frame_struct* nonnull align 8 dereferenceable(8) %cfp) #5 !dbg !10 {
functionEntryInitializers:
  %callArgs = alloca [8 x i64], align 8
  %0 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 0
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 4), i64** %0, align 8, !tbaa !14
  %hashAttemptReadGuard = icmp ult i32 1, %argc, !dbg !16
  br i1 %hashAttemptReadGuard, label %argCountSecondCheckBlock.thread, label %argCountSecondCheckBlock, !dbg !16

argCountSecondCheckBlock.thread:                  ; preds = %functionEntryInitializers
  %argsWithoutHashCount = sub nuw i32 %argc, 1, !dbg !16
  %1 = getelementptr i64, i64* %argArray, i32 %argsWithoutHashCount, !dbg !16
  %KWArgHash = load i64, i64* %1, align 8, !dbg !16
  %2 = and i64 %KWArgHash, 7, !dbg !16
  %3 = icmp ne i64 %2, 0, !dbg !16
  %4 = and i64 %KWArgHash, -9, !dbg !16
  %5 = icmp eq i64 %4, 0, !dbg !16
  %6 = or i1 %3, %5, !dbg !16
  br i1 %6, label %.thread, label %sorbet_isa_Hash.exit, !dbg !16

sorbet_isa_Hash.exit:                             ; preds = %argCountSecondCheckBlock.thread
  %7 = inttoptr i64 %KWArgHash to %struct.iseq_inline_iv_cache_entry*, !dbg !16
  %8 = getelementptr inbounds %struct.iseq_inline_iv_cache_entry, %struct.iseq_inline_iv_cache_entry* %7, i64 0, i32 0, !dbg !16
  %9 = load i64, i64* %8, align 8, !dbg !16, !tbaa !17
  %10 = and i64 %9, 31, !dbg !16
  %11 = icmp eq i64 %10, 8, !dbg !16
  br i1 %11, label %fillRequiredArgs, label %.thread, !dbg !16

.thread:                                          ; preds = %sorbet_isa_Hash.exit, %argCountSecondCheckBlock.thread
  br label %fillRequiredArgs, !dbg !16

argCountFailBlock:                                ; preds = %argCountSecondCheckBlock
  tail call void @sorbet_raiseArity(i32 noundef 0, i32 noundef 1, i32 noundef -1) #9, !dbg !16
  unreachable, !dbg !16

argCountSecondCheckBlock:                         ; preds = %functionEntryInitializers
  %tooFewArgs = icmp ult i32 %argc, 1, !dbg !16
  br i1 %tooFewArgs, label %argCountFailBlock, label %fillRequiredArgs, !dbg !16, !prof !19

fillFromDefaultBlockDone1:                        ; preds = %sorbet_getMethodBlockAsProc.exit
  %12 = getelementptr i64, i64* %argArray, i32 1, !dbg !16
  %rawArg_b = load i64, i64* %12, align 8, !dbg !16
  %13 = icmp sgt i32 %argcPhi87, 2, !dbg !16
  br i1 %13, label %15, label %fillFromDefaultBlockDone1.thread, !dbg !16

fillFromDefaultBlockDone1.thread:                 ; preds = %sorbet_getMethodBlockAsProc.exit, %fillFromDefaultBlockDone1
  %"<argPresent>.sroa.0.093" = phi i64 [ 20, %fillFromDefaultBlockDone1 ], [ 0, %sorbet_getMethodBlockAsProc.exit ]
  %b.sroa.0.191 = phi i64 [ %rawArg_b, %fillFromDefaultBlockDone1 ], [ 8, %sorbet_getMethodBlockAsProc.exit ]
  %14 = tail call i64 @rb_ary_new() #10, !dbg !16
  br label %sorbet_readRestArgs.exit, !dbg !16

15:                                               ; preds = %fillFromDefaultBlockDone1
  %16 = sub nuw nsw i32 %argcPhi87, 2, !dbg !16
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds i64, i64* %argArray, i64 2, !dbg !16
  %19 = tail call i64 @rb_ary_new_from_values(i64 %17, i64* nonnull %18) #10, !dbg !16
  br label %sorbet_readRestArgs.exit, !dbg !16

sorbet_readRestArgs.exit:                         ; preds = %fillFromDefaultBlockDone1.thread, %15
  %"<argPresent>.sroa.0.092" = phi i64 [ %"<argPresent>.sroa.0.093", %fillFromDefaultBlockDone1.thread ], [ 20, %15 ]
  %b.sroa.0.190 = phi i64 [ %b.sroa.0.191, %fillFromDefaultBlockDone1.thread ], [ %rawArg_b, %15 ]
  %20 = phi i64 [ %14, %fillFromDefaultBlockDone1.thread ], [ %19, %15 ], !dbg !16
  %rubyId_d = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !16
  %rawSym = tail call i64 @rb_id2sym(i64 %rubyId_d), !dbg !16
  %21 = icmp eq i64 %hashArgsPhi84, 52, !dbg !16
  br i1 %21, label %kwArgContinue, label %sorbet_removeKWArg.exit79, !dbg !16

sorbet_removeKWArg.exit79:                        ; preds = %sorbet_readRestArgs.exit
  %22 = tail call i64 @rb_hash_delete_entry(i64 %hashArgsPhi84, i64 %rawSym) #10, !dbg !16
  %23 = icmp eq i64 %22, 52, !dbg !16
  br i1 %23, label %kwArgContinue, label %kwArgContinue.thread, !dbg !16

kwArgContinue.thread:                             ; preds = %sorbet_removeKWArg.exit79
  %rubyId_e100 = load i64, i64* @rubyIdPrecomputed_e, align 8, !dbg !16
  %rawSym21101 = tail call i64 @rb_id2sym(i64 %rubyId_e100), !dbg !16
  br label %sorbet_removeKWArg.exit.thread, !dbg !16

fillRequiredArgs:                                 ; preds = %.thread, %sorbet_isa_Hash.exit, %argCountSecondCheckBlock
  %argcPhi87 = phi i32 [ 1, %argCountSecondCheckBlock ], [ %argc, %.thread ], [ %argsWithoutHashCount, %sorbet_isa_Hash.exit ]
  %hashArgsPhi84 = phi i64 [ 52, %argCountSecondCheckBlock ], [ 52, %.thread ], [ %KWArgHash, %sorbet_isa_Hash.exit ]
  %rawArg_a = load i64, i64* %argArray, align 8, !dbg !16
  %24 = tail call i32 @rb_block_given_p() #10, !dbg !16
  %25 = icmp eq i32 %24, 0, !dbg !16
  br i1 %25, label %sorbet_getMethodBlockAsProc.exit, label %26, !dbg !16

26:                                               ; preds = %fillRequiredArgs
  %27 = tail call i64 @rb_block_proc() #10, !dbg !16
  br label %sorbet_getMethodBlockAsProc.exit, !dbg !16

sorbet_getMethodBlockAsProc.exit:                 ; preds = %fillRequiredArgs, %26
  %28 = phi i64 [ %27, %26 ], [ 8, %fillRequiredArgs ], !dbg !16
  %default0 = icmp eq i32 %argcPhi87, 1, !dbg !16
  br i1 %default0, label %fillFromDefaultBlockDone1.thread, label %fillFromDefaultBlockDone1, !dbg !16, !prof !19

kwArgContinue:                                    ; preds = %sorbet_readRestArgs.exit, %sorbet_removeKWArg.exit79
  %29 = tail call i64 @sorbet_addMissingKWArg(i64 noundef 52, i64 %rawSym), !dbg !16
  %rubyId_e = load i64, i64* @rubyIdPrecomputed_e, align 8, !dbg !16
  %rawSym21 = tail call i64 @rb_id2sym(i64 %rubyId_e), !dbg !16
  br i1 %21, label %sorbet_removeKWArg.exit, label %sorbet_removeKWArg.exit.thread, !dbg !16

sorbet_removeKWArg.exit:                          ; preds = %kwArgContinue
  %30 = icmp eq i64 %29, 52, !dbg !16
  br i1 %30, label %sorbet_readKWRestArgs.exit.thread, label %34, !dbg !16, !prof !20

sorbet_removeKWArg.exit.thread:                   ; preds = %kwArgContinue, %kwArgContinue.thread
  %rawSym21107 = phi i64 [ %rawSym21101, %kwArgContinue.thread ], [ %rawSym21, %kwArgContinue ]
  %missingArgsPhi105 = phi i64 [ 52, %kwArgContinue.thread ], [ %29, %kwArgContinue ]
  %d.sroa.0.0103 = phi i64 [ %22, %kwArgContinue.thread ], [ 8, %kwArgContinue ]
  %31 = tail call i64 @rb_hash_delete_entry(i64 %hashArgsPhi84, i64 %rawSym21107) #10, !dbg !16
  %32 = icmp eq i64 %31, 52, !dbg !16
  %e.sroa.0.1111 = select i1 %32, i64 8, i64 %31, !dbg !16
  %"<argPresent>9.sroa.0.0112" = select i1 %32, i64 0, i64 20, !dbg !16
  %33 = icmp eq i64 %missingArgsPhi105, 52, !dbg !16
  br i1 %33, label %sorbet_readKWRestArgs.exit, label %34, !dbg !16, !prof !20

34:                                               ; preds = %sorbet_removeKWArg.exit.thread, %sorbet_removeKWArg.exit
  %missingArgsPhi106113 = phi i64 [ %missingArgsPhi105, %sorbet_removeKWArg.exit.thread ], [ %29, %sorbet_removeKWArg.exit ]
  tail call void @sorbet_raiseMissingKeywords(i64 %missingArgsPhi106113) #8, !dbg !16
  unreachable, !dbg !16

sorbet_readKWRestArgs.exit.thread:                ; preds = %sorbet_removeKWArg.exit
  %35 = tail call i64 @rb_hash_new() #10, !dbg !16
  %36 = and i64 %"<argPresent>.sroa.0.092", -9, !dbg !21
  %37 = icmp ne i64 %36, 0, !dbg !21
  %b.sroa.0.0138 = select i1 %37, i64 %b.sroa.0.190, i64 3, !dbg !21
  br label %43, !dbg !22

sorbet_readKWRestArgs.exit:                       ; preds = %sorbet_removeKWArg.exit.thread
  %38 = tail call i64 @rb_hash_dup(i64 %hashArgsPhi84) #10, !dbg !16
  %39 = and i64 %"<argPresent>.sroa.0.092", -9, !dbg !21
  %40 = icmp ne i64 %39, 0, !dbg !21
  %b.sroa.0.0 = select i1 %40, i64 %b.sroa.0.190, i64 3, !dbg !21
  %41 = icmp ne i64 %"<argPresent>9.sroa.0.0112", 0, !dbg !22
  br i1 %41, label %42, label %43, !dbg !22

42:                                               ; preds = %sorbet_readKWRestArgs.exit
  br label %43, !dbg !22

43:                                               ; preds = %sorbet_readKWRestArgs.exit.thread, %sorbet_readKWRestArgs.exit, %42
  %b.sroa.0.0140 = phi i64 [ %b.sroa.0.0, %42 ], [ %b.sroa.0.0, %sorbet_readKWRestArgs.exit ], [ %b.sroa.0.0138, %sorbet_readKWRestArgs.exit.thread ]
  %44 = phi i64 [ %38, %42 ], [ %38, %sorbet_readKWRestArgs.exit ], [ %35, %sorbet_readKWRestArgs.exit.thread ]
  %d.sroa.0.0104114127139 = phi i64 [ %d.sroa.0.0103, %42 ], [ %d.sroa.0.0103, %sorbet_readKWRestArgs.exit ], [ 8, %sorbet_readKWRestArgs.exit.thread ]
  %45 = phi i64 [ %e.sroa.0.1111, %42 ], [ 5, %sorbet_readKWRestArgs.exit ], [ 5, %sorbet_readKWRestArgs.exit.thread ]
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 5), i64** %0, align 8, !dbg !23, !tbaa !14
  %callArgs0Addr = getelementptr [8 x i64], [8 x i64]* %callArgs, i32 0, i64 0, !dbg !24
  store i64 %rawArg_a, i64* %callArgs0Addr, align 8, !dbg !24
  %callArgs1Addr = getelementptr [8 x i64], [8 x i64]* %callArgs, i32 0, i64 1, !dbg !24
  store i64 %b.sroa.0.0140, i64* %callArgs1Addr, align 8, !dbg !24
  %callArgs2Addr = getelementptr [8 x i64], [8 x i64]* %callArgs, i32 0, i64 2, !dbg !24
  store i64 %20, i64* %callArgs2Addr, align 8, !dbg !24
  %callArgs3Addr = getelementptr [8 x i64], [8 x i64]* %callArgs, i32 0, i64 3, !dbg !24
  store i64 %d.sroa.0.0104114127139, i64* %callArgs3Addr, align 8, !dbg !24
  %callArgs4Addr = getelementptr [8 x i64], [8 x i64]* %callArgs, i32 0, i64 4, !dbg !24
  store i64 %45, i64* %callArgs4Addr, align 8, !dbg !24
  %callArgs5Addr = getelementptr [8 x i64], [8 x i64]* %callArgs, i32 0, i64 5, !dbg !24
  store i64 %44, i64* %callArgs5Addr, align 8, !dbg !24
  %callArgs6Addr = getelementptr [8 x i64], [8 x i64]* %callArgs, i32 0, i64 6, !dbg !24
  store i64 %28, i64* %callArgs6Addr, align 8, !dbg !24
  %46 = getelementptr [8 x i64], [8 x i64]* %callArgs, i64 0, i64 0, !dbg !24
  tail call void @llvm.experimental.noalias.scope.decl(metadata !25) #11, !dbg !24
  %47 = call i64 @rb_ary_new_from_values(i64 noundef 7, i64* noundef nonnull %46) #10, !dbg !24
  %48 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !24
  %49 = load i64*, i64** %48, align 8, !dbg !24
  store i64 %47, i64* %49, align 8, !dbg !24, !tbaa !6
  %50 = getelementptr inbounds i64, i64* %49, i64 1, !dbg !24
  store i64* %50, i64** %48, align 8, !dbg !24
  %send = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_inspect, i64 0), !dbg !24
  %51 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !28
  %52 = load i64*, i64** %51, align 8, !dbg !28
  store i64 %selfRaw, i64* %52, align 8, !dbg !28, !tbaa !6
  %53 = getelementptr inbounds i64, i64* %52, i64 1, !dbg !28
  store i64 %send, i64* %53, align 8, !dbg !28, !tbaa !6
  %54 = getelementptr inbounds i64, i64* %53, i64 1, !dbg !28
  store i64* %54, i64** %51, align 8, !dbg !28
  %send134 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_puts, i64 0), !dbg !28
  ret i64 %send134
}

; Function Attrs: sspreq
define void @Init_all_arguments() local_unnamed_addr #6 {
entry:
  %positional_table.i = alloca i64, i32 4, align 8, !dbg !29
  %keyword_table.i = alloca i64, i32 3, align 8, !dbg !29
  %locals.i164.i = alloca i64, i32 0, align 8
  %locals.i.i = alloca i64, i32 0, align 8
  %keywords.i = alloca i64, align 8, !dbg !31
  %keywords4.i = alloca i64, align 8, !dbg !32
  %keywords10.i = alloca i64, align 8, !dbg !33
  %keywords16.i = alloca i64, align 8, !dbg !34
  %keywords22.i = alloca i64, align 8, !dbg !35
  %keywords28.i = alloca i64, align 8, !dbg !36
  %keywords34.i = alloca i64, align 8, !dbg !37
  %keywords40.i = alloca i64, i32 2, align 8, !dbg !38
  %keywords47.i = alloca i64, i32 2, align 8, !dbg !39
  %keywords55.i = alloca i64, i32 2, align 8, !dbg !40
  %keywords63.i = alloca i64, i32 2, align 8, !dbg !41
  %keywords71.i = alloca i64, i32 2, align 8, !dbg !42
  %keywords79.i = alloca i64, i32 2, align 8, !dbg !43
  %keywords87.i = alloca i64, i32 2, align 8, !dbg !44
  %keywords95.i = alloca i64, i32 3, align 8, !dbg !45
  %keywords104.i = alloca i64, i32 3, align 8, !dbg !46
  %keywords114.i = alloca i64, i32 3, align 8, !dbg !47
  %keywords124.i = alloca i64, i32 3, align 8, !dbg !48
  %keywords134.i = alloca i64, i32 3, align 8, !dbg !49
  %keywords144.i = alloca i64, i32 3, align 8, !dbg !50
  %keywords154.i = alloca i64, i32 3, align 8, !dbg !51
  %realpath = tail call i64 @sorbet_readRealpath()
  %0 = bitcast i64* %keywords.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0)
  %1 = bitcast i64* %keywords4.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1)
  %2 = bitcast i64* %keywords10.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2)
  %3 = bitcast i64* %keywords16.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3)
  %4 = bitcast i64* %keywords22.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4)
  %5 = bitcast i64* %keywords28.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5)
  %6 = bitcast i64* %keywords34.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6)
  %7 = bitcast i64* %keywords40.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7)
  %8 = bitcast i64* %keywords47.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8)
  %9 = bitcast i64* %keywords55.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9)
  %10 = bitcast i64* %keywords63.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10)
  %11 = bitcast i64* %keywords71.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11)
  %12 = bitcast i64* %keywords79.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12)
  %13 = bitcast i64* %keywords87.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13)
  %14 = bitcast i64* %keywords95.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14)
  %15 = bitcast i64* %keywords104.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15)
  %16 = bitcast i64* %keywords114.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16)
  %17 = bitcast i64* %keywords124.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17)
  %18 = bitcast i64* %keywords134.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18)
  %19 = bitcast i64* %keywords144.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19)
  %20 = bitcast i64* %keywords154.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20)
  %21 = tail call i64 @rb_intern2(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @str_take_arguments, i64 0, i64 0), i64 noundef 14) #10
  store i64 %21, i64* @rubyIdPrecomputed_take_arguments, align 8
  %22 = tail call i64 @rb_intern2(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @str_d, i64 0, i64 0), i64 noundef 1) #10
  store i64 %22, i64* @rubyIdPrecomputed_d, align 8
  %23 = tail call i64 @rb_intern2(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @str_e, i64 0, i64 0), i64 noundef 1) #10
  store i64 %23, i64* @rubyIdPrecomputed_e, align 8
  %24 = tail call i64 @rb_intern2(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @"str_<build-array>", i64 0, i64 0), i64 noundef 13) #10
  %25 = tail call i64 @rb_intern2(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @str_inspect, i64 0, i64 0), i64 noundef 7) #10
  store i64 %25, i64* @rubyIdPrecomputed_inspect, align 8
  %26 = tail call i64 @rb_intern2(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @str_puts, i64 0, i64 0), i64 noundef 4) #10
  store i64 %26, i64* @rubyIdPrecomputed_puts, align 8
  %27 = tail call i64 @rb_intern2(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @"str_<top (required)>", i64 0, i64 0), i64 noundef 16) #10
  store i64 %27, i64* @"rubyIdPrecomputed_<top (required)>", align 8
  %28 = tail call i64 @rb_intern2(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @str_normal, i64 0, i64 0), i64 noundef 6) #10
  store i64 %28, i64* @rubyIdPrecomputed_normal, align 8
  %29 = tail call i64 @rb_intern2(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @str_a, i64 0, i64 0), i64 noundef 1) #10
  store i64 %29, i64* @rubyIdPrecomputed_a, align 8
  %30 = tail call i64 @rb_intern2(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @str_b, i64 0, i64 0), i64 noundef 1) #10
  store i64 %30, i64* @rubyIdPrecomputed_b, align 8
  %31 = tail call i64 @rb_intern2(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @str_c, i64 0, i64 0), i64 noundef 1) #10
  store i64 %31, i64* @rubyIdPrecomputed_c, align 8
  %32 = tail call i64 @rb_intern2(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @str_g, i64 0, i64 0), i64 noundef 1) #10
  store i64 %32, i64* @rubyIdPrecomputed_g, align 8
  %33 = tail call i64 @rb_intern2(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @str_f, i64 0, i64 0), i64 noundef 1) #10
  store i64 %33, i64* @rubyIdPrecomputed_f, align 8
  %34 = tail call i64 @rb_intern2(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @str_baz, i64 0, i64 0), i64 noundef 3) #10
  store i64 %34, i64* @rubyIdPrecomputed_baz, align 8
  %35 = tail call i64 @sorbet_vm_fstring_new(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @str_take_arguments, i64 0, i64 0), i64 noundef 14) #10
  tail call void @rb_gc_register_mark_object(i64 %35) #10
  store i64 %35, i64* @rubyStrFrozen_take_arguments, align 8
  %36 = tail call i64 @sorbet_vm_fstring_new(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @"str_test/testdata/compiler/all_arguments.rb", i64 0, i64 0), i64 noundef 39) #10
  tail call void @rb_gc_register_mark_object(i64 %36) #10
  store i64 %36, i64* @"rubyStrFrozen_test/testdata/compiler/all_arguments.rb", align 8
  tail call void @sorbet_initLineNumberInfo(%struct.SorbetLineNumberInfo* noundef @fileLineNumberInfo, i64* noundef getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i32 0, i32 0), i32 noundef 32)
  %rubyId_take_arguments.i.i = load i64, i64* @rubyIdPrecomputed_take_arguments, align 8
  %rubyStr_take_arguments.i.i = load i64, i64* @rubyStrFrozen_take_arguments, align 8
  %"rubyStr_test/testdata/compiler/all_arguments.rb.i.i" = load i64, i64* @"rubyStrFrozen_test/testdata/compiler/all_arguments.rb", align 8
  %37 = call %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64 %rubyStr_take_arguments.i.i, i64 %rubyId_take_arguments.i.i, i64 %"rubyStr_test/testdata/compiler/all_arguments.rb.i.i", i64 %realpath, %struct.rb_iseq_struct* noundef null, i32 noundef 1, i32 noundef 4, %struct.SorbetLineNumberInfo* noundef @fileLineNumberInfo, i64* noundef nonnull %locals.i.i, i32 noundef 0, i32 noundef 8)
  store %struct.rb_iseq_struct* %37, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_Object#14take_arguments", align 8
  %rubyId_inspect.i = load i64, i64* @rubyIdPrecomputed_inspect, align 8, !dbg !24
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_inspect, i64 %rubyId_inspect.i, i32 noundef 16, i32 noundef 0, i32 noundef 0, i64* noundef null), !dbg !24
  %rubyId_puts.i = load i64, i64* @rubyIdPrecomputed_puts, align 8, !dbg !28
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_puts, i64 %rubyId_puts.i, i32 noundef 20, i32 noundef 1, i32 noundef 0, i64* noundef null), !dbg !28
  %38 = call i64 @sorbet_vm_fstring_new(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @"str_<top (required)>", i64 0, i64 0), i64 noundef 16) #10
  call void @rb_gc_register_mark_object(i64 %38) #10
  %"rubyId_<top (required)>.i.i" = load i64, i64* @"rubyIdPrecomputed_<top (required)>", align 8
  %"rubyStr_test/testdata/compiler/all_arguments.rb.i163.i" = load i64, i64* @"rubyStrFrozen_test/testdata/compiler/all_arguments.rb", align 8
  %39 = call %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64 %38, i64 %"rubyId_<top (required)>.i.i", i64 %"rubyStr_test/testdata/compiler/all_arguments.rb.i163.i", i64 %realpath, %struct.rb_iseq_struct* noundef null, i32 noundef 0, i32 noundef 4, %struct.SorbetLineNumberInfo* noundef @fileLineNumberInfo, i64* noundef nonnull %locals.i164.i, i32 noundef 0, i32 noundef 11)
  store %struct.rb_iseq_struct* %39, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.17<static-init>$152", align 8
  %rubyId_take_arguments.i = load i64, i64* @rubyIdPrecomputed_take_arguments, align 8, !dbg !31
  %rubyId_d.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !31
  %40 = call i64 @rb_id2sym(i64 %rubyId_d.i) #10, !dbg !31
  store i64 %40, i64* %keywords.i, align 8, !dbg !31
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments, i64 %rubyId_take_arguments.i, i32 noundef 68, i32 noundef 8, i32 noundef 1, i64* noundef nonnull %keywords.i), !dbg !31
  %rubyId_take_arguments3.i = load i64, i64* @rubyIdPrecomputed_take_arguments, align 8, !dbg !32
  %rubyId_d5.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !32
  %41 = call i64 @rb_id2sym(i64 %rubyId_d5.i) #10, !dbg !32
  store i64 %41, i64* %keywords4.i, align 8, !dbg !32
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.1, i64 %rubyId_take_arguments3.i, i32 noundef 68, i32 noundef 7, i32 noundef 1, i64* noundef nonnull %keywords4.i), !dbg !32
  %rubyId_take_arguments9.i = load i64, i64* @rubyIdPrecomputed_take_arguments, align 8, !dbg !33
  %rubyId_d11.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !33
  %42 = call i64 @rb_id2sym(i64 %rubyId_d11.i) #10, !dbg !33
  store i64 %42, i64* %keywords10.i, align 8, !dbg !33
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.2, i64 %rubyId_take_arguments9.i, i32 noundef 68, i32 noundef 6, i32 noundef 1, i64* noundef nonnull %keywords10.i), !dbg !33
  %rubyId_take_arguments15.i = load i64, i64* @rubyIdPrecomputed_take_arguments, align 8, !dbg !34
  %rubyId_d17.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !34
  %43 = call i64 @rb_id2sym(i64 %rubyId_d17.i) #10, !dbg !34
  store i64 %43, i64* %keywords16.i, align 8, !dbg !34
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.3, i64 %rubyId_take_arguments15.i, i32 noundef 68, i32 noundef 5, i32 noundef 1, i64* noundef nonnull %keywords16.i), !dbg !34
  %rubyId_take_arguments21.i = load i64, i64* @rubyIdPrecomputed_take_arguments, align 8, !dbg !35
  %rubyId_d23.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !35
  %44 = call i64 @rb_id2sym(i64 %rubyId_d23.i) #10, !dbg !35
  store i64 %44, i64* %keywords22.i, align 8, !dbg !35
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.4, i64 %rubyId_take_arguments21.i, i32 noundef 68, i32 noundef 4, i32 noundef 1, i64* noundef nonnull %keywords22.i), !dbg !35
  %rubyId_take_arguments27.i = load i64, i64* @rubyIdPrecomputed_take_arguments, align 8, !dbg !36
  %rubyId_d29.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !36
  %45 = call i64 @rb_id2sym(i64 %rubyId_d29.i) #10, !dbg !36
  store i64 %45, i64* %keywords28.i, align 8, !dbg !36
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.5, i64 %rubyId_take_arguments27.i, i32 noundef 68, i32 noundef 3, i32 noundef 1, i64* noundef nonnull %keywords28.i), !dbg !36
  %rubyId_take_arguments33.i = load i64, i64* @rubyIdPrecomputed_take_arguments, align 8, !dbg !37
  %rubyId_d35.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !37
  %46 = call i64 @rb_id2sym(i64 %rubyId_d35.i) #10, !dbg !37
  store i64 %46, i64* %keywords34.i, align 8, !dbg !37
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.6, i64 %rubyId_take_arguments33.i, i32 noundef 68, i32 noundef 2, i32 noundef 1, i64* noundef nonnull %keywords34.i), !dbg !37
  %rubyId_take_arguments39.i = load i64, i64* @rubyIdPrecomputed_take_arguments, align 8, !dbg !38
  %rubyId_d41.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !38
  %47 = call i64 @rb_id2sym(i64 %rubyId_d41.i) #10, !dbg !38
  store i64 %47, i64* %keywords40.i, align 8, !dbg !38
  %rubyId_e.i = load i64, i64* @rubyIdPrecomputed_e, align 8, !dbg !38
  %48 = call i64 @rb_id2sym(i64 %rubyId_e.i) #10, !dbg !38
  %49 = getelementptr i64, i64* %keywords40.i, i32 1, !dbg !38
  store i64 %48, i64* %49, align 8, !dbg !38
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.7, i64 %rubyId_take_arguments39.i, i32 noundef 68, i32 noundef 9, i32 noundef 2, i64* noundef nonnull %keywords40.i), !dbg !38
  %rubyId_take_arguments46.i = load i64, i64* @rubyIdPrecomputed_take_arguments, align 8, !dbg !39
  %rubyId_d48.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !39
  %50 = call i64 @rb_id2sym(i64 %rubyId_d48.i) #10, !dbg !39
  store i64 %50, i64* %keywords47.i, align 8, !dbg !39
  %rubyId_e50.i = load i64, i64* @rubyIdPrecomputed_e, align 8, !dbg !39
  %51 = call i64 @rb_id2sym(i64 %rubyId_e50.i) #10, !dbg !39
  %52 = getelementptr i64, i64* %keywords47.i, i32 1, !dbg !39
  store i64 %51, i64* %52, align 8, !dbg !39
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.8, i64 %rubyId_take_arguments46.i, i32 noundef 68, i32 noundef 8, i32 noundef 2, i64* noundef nonnull %keywords47.i), !dbg !39
  %rubyId_take_arguments54.i = load i64, i64* @rubyIdPrecomputed_take_arguments, align 8, !dbg !40
  %rubyId_d56.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !40
  %53 = call i64 @rb_id2sym(i64 %rubyId_d56.i) #10, !dbg !40
  store i64 %53, i64* %keywords55.i, align 8, !dbg !40
  %rubyId_e58.i = load i64, i64* @rubyIdPrecomputed_e, align 8, !dbg !40
  %54 = call i64 @rb_id2sym(i64 %rubyId_e58.i) #10, !dbg !40
  %55 = getelementptr i64, i64* %keywords55.i, i32 1, !dbg !40
  store i64 %54, i64* %55, align 8, !dbg !40
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.9, i64 %rubyId_take_arguments54.i, i32 noundef 68, i32 noundef 7, i32 noundef 2, i64* noundef nonnull %keywords55.i), !dbg !40
  %rubyId_take_arguments62.i = load i64, i64* @rubyIdPrecomputed_take_arguments, align 8, !dbg !41
  %rubyId_d64.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !41
  %56 = call i64 @rb_id2sym(i64 %rubyId_d64.i) #10, !dbg !41
  store i64 %56, i64* %keywords63.i, align 8, !dbg !41
  %rubyId_e66.i = load i64, i64* @rubyIdPrecomputed_e, align 8, !dbg !41
  %57 = call i64 @rb_id2sym(i64 %rubyId_e66.i) #10, !dbg !41
  %58 = getelementptr i64, i64* %keywords63.i, i32 1, !dbg !41
  store i64 %57, i64* %58, align 8, !dbg !41
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.10, i64 %rubyId_take_arguments62.i, i32 noundef 68, i32 noundef 6, i32 noundef 2, i64* noundef nonnull %keywords63.i), !dbg !41
  %rubyId_take_arguments70.i = load i64, i64* @rubyIdPrecomputed_take_arguments, align 8, !dbg !42
  %rubyId_d72.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !42
  %59 = call i64 @rb_id2sym(i64 %rubyId_d72.i) #10, !dbg !42
  store i64 %59, i64* %keywords71.i, align 8, !dbg !42
  %rubyId_e74.i = load i64, i64* @rubyIdPrecomputed_e, align 8, !dbg !42
  %60 = call i64 @rb_id2sym(i64 %rubyId_e74.i) #10, !dbg !42
  %61 = getelementptr i64, i64* %keywords71.i, i32 1, !dbg !42
  store i64 %60, i64* %61, align 8, !dbg !42
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.11, i64 %rubyId_take_arguments70.i, i32 noundef 68, i32 noundef 5, i32 noundef 2, i64* noundef nonnull %keywords71.i), !dbg !42
  %rubyId_take_arguments78.i = load i64, i64* @rubyIdPrecomputed_take_arguments, align 8, !dbg !43
  %rubyId_d80.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !43
  %62 = call i64 @rb_id2sym(i64 %rubyId_d80.i) #10, !dbg !43
  store i64 %62, i64* %keywords79.i, align 8, !dbg !43
  %rubyId_e82.i = load i64, i64* @rubyIdPrecomputed_e, align 8, !dbg !43
  %63 = call i64 @rb_id2sym(i64 %rubyId_e82.i) #10, !dbg !43
  %64 = getelementptr i64, i64* %keywords79.i, i32 1, !dbg !43
  store i64 %63, i64* %64, align 8, !dbg !43
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.12, i64 %rubyId_take_arguments78.i, i32 noundef 68, i32 noundef 4, i32 noundef 2, i64* noundef nonnull %keywords79.i), !dbg !43
  %rubyId_take_arguments86.i = load i64, i64* @rubyIdPrecomputed_take_arguments, align 8, !dbg !44
  %rubyId_d88.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !44
  %65 = call i64 @rb_id2sym(i64 %rubyId_d88.i) #10, !dbg !44
  store i64 %65, i64* %keywords87.i, align 8, !dbg !44
  %rubyId_e90.i = load i64, i64* @rubyIdPrecomputed_e, align 8, !dbg !44
  %66 = call i64 @rb_id2sym(i64 %rubyId_e90.i) #10, !dbg !44
  %67 = getelementptr i64, i64* %keywords87.i, i32 1, !dbg !44
  store i64 %66, i64* %67, align 8, !dbg !44
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.13, i64 %rubyId_take_arguments86.i, i32 noundef 68, i32 noundef 3, i32 noundef 2, i64* noundef nonnull %keywords87.i), !dbg !44
  %rubyId_take_arguments94.i = load i64, i64* @rubyIdPrecomputed_take_arguments, align 8, !dbg !45
  %rubyId_d96.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !45
  %68 = call i64 @rb_id2sym(i64 %rubyId_d96.i) #10, !dbg !45
  store i64 %68, i64* %keywords95.i, align 8, !dbg !45
  %rubyId_e98.i = load i64, i64* @rubyIdPrecomputed_e, align 8, !dbg !45
  %69 = call i64 @rb_id2sym(i64 %rubyId_e98.i) #10, !dbg !45
  %70 = getelementptr i64, i64* %keywords95.i, i32 1, !dbg !45
  store i64 %69, i64* %70, align 8, !dbg !45
  %rubyId_baz.i = load i64, i64* @rubyIdPrecomputed_baz, align 8, !dbg !45
  %71 = call i64 @rb_id2sym(i64 %rubyId_baz.i) #10, !dbg !45
  %72 = getelementptr i64, i64* %keywords95.i, i32 2, !dbg !45
  store i64 %71, i64* %72, align 8, !dbg !45
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.14, i64 %rubyId_take_arguments94.i, i32 noundef 68, i32 noundef 10, i32 noundef 3, i64* noundef nonnull %keywords95.i), !dbg !45
  %rubyId_take_arguments103.i = load i64, i64* @rubyIdPrecomputed_take_arguments, align 8, !dbg !46
  %rubyId_d105.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !46
  %73 = call i64 @rb_id2sym(i64 %rubyId_d105.i) #10, !dbg !46
  store i64 %73, i64* %keywords104.i, align 8, !dbg !46
  %rubyId_e107.i = load i64, i64* @rubyIdPrecomputed_e, align 8, !dbg !46
  %74 = call i64 @rb_id2sym(i64 %rubyId_e107.i) #10, !dbg !46
  %75 = getelementptr i64, i64* %keywords104.i, i32 1, !dbg !46
  store i64 %74, i64* %75, align 8, !dbg !46
  %rubyId_baz109.i = load i64, i64* @rubyIdPrecomputed_baz, align 8, !dbg !46
  %76 = call i64 @rb_id2sym(i64 %rubyId_baz109.i) #10, !dbg !46
  %77 = getelementptr i64, i64* %keywords104.i, i32 2, !dbg !46
  store i64 %76, i64* %77, align 8, !dbg !46
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.15, i64 %rubyId_take_arguments103.i, i32 noundef 68, i32 noundef 9, i32 noundef 3, i64* noundef nonnull %keywords104.i), !dbg !46
  %rubyId_take_arguments113.i = load i64, i64* @rubyIdPrecomputed_take_arguments, align 8, !dbg !47
  %rubyId_d115.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !47
  %78 = call i64 @rb_id2sym(i64 %rubyId_d115.i) #10, !dbg !47
  store i64 %78, i64* %keywords114.i, align 8, !dbg !47
  %rubyId_e117.i = load i64, i64* @rubyIdPrecomputed_e, align 8, !dbg !47
  %79 = call i64 @rb_id2sym(i64 %rubyId_e117.i) #10, !dbg !47
  %80 = getelementptr i64, i64* %keywords114.i, i32 1, !dbg !47
  store i64 %79, i64* %80, align 8, !dbg !47
  %rubyId_baz119.i = load i64, i64* @rubyIdPrecomputed_baz, align 8, !dbg !47
  %81 = call i64 @rb_id2sym(i64 %rubyId_baz119.i) #10, !dbg !47
  %82 = getelementptr i64, i64* %keywords114.i, i32 2, !dbg !47
  store i64 %81, i64* %82, align 8, !dbg !47
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.16, i64 %rubyId_take_arguments113.i, i32 noundef 68, i32 noundef 8, i32 noundef 3, i64* noundef nonnull %keywords114.i), !dbg !47
  %rubyId_take_arguments123.i = load i64, i64* @rubyIdPrecomputed_take_arguments, align 8, !dbg !48
  %rubyId_d125.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !48
  %83 = call i64 @rb_id2sym(i64 %rubyId_d125.i) #10, !dbg !48
  store i64 %83, i64* %keywords124.i, align 8, !dbg !48
  %rubyId_e127.i = load i64, i64* @rubyIdPrecomputed_e, align 8, !dbg !48
  %84 = call i64 @rb_id2sym(i64 %rubyId_e127.i) #10, !dbg !48
  %85 = getelementptr i64, i64* %keywords124.i, i32 1, !dbg !48
  store i64 %84, i64* %85, align 8, !dbg !48
  %rubyId_baz129.i = load i64, i64* @rubyIdPrecomputed_baz, align 8, !dbg !48
  %86 = call i64 @rb_id2sym(i64 %rubyId_baz129.i) #10, !dbg !48
  %87 = getelementptr i64, i64* %keywords124.i, i32 2, !dbg !48
  store i64 %86, i64* %87, align 8, !dbg !48
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.17, i64 %rubyId_take_arguments123.i, i32 noundef 68, i32 noundef 7, i32 noundef 3, i64* noundef nonnull %keywords124.i), !dbg !48
  %rubyId_take_arguments133.i = load i64, i64* @rubyIdPrecomputed_take_arguments, align 8, !dbg !49
  %rubyId_d135.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !49
  %88 = call i64 @rb_id2sym(i64 %rubyId_d135.i) #10, !dbg !49
  store i64 %88, i64* %keywords134.i, align 8, !dbg !49
  %rubyId_e137.i = load i64, i64* @rubyIdPrecomputed_e, align 8, !dbg !49
  %89 = call i64 @rb_id2sym(i64 %rubyId_e137.i) #10, !dbg !49
  %90 = getelementptr i64, i64* %keywords134.i, i32 1, !dbg !49
  store i64 %89, i64* %90, align 8, !dbg !49
  %rubyId_baz139.i = load i64, i64* @rubyIdPrecomputed_baz, align 8, !dbg !49
  %91 = call i64 @rb_id2sym(i64 %rubyId_baz139.i) #10, !dbg !49
  %92 = getelementptr i64, i64* %keywords134.i, i32 2, !dbg !49
  store i64 %91, i64* %92, align 8, !dbg !49
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.18, i64 %rubyId_take_arguments133.i, i32 noundef 68, i32 noundef 6, i32 noundef 3, i64* noundef nonnull %keywords134.i), !dbg !49
  %rubyId_take_arguments143.i = load i64, i64* @rubyIdPrecomputed_take_arguments, align 8, !dbg !50
  %rubyId_d145.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !50
  %93 = call i64 @rb_id2sym(i64 %rubyId_d145.i) #10, !dbg !50
  store i64 %93, i64* %keywords144.i, align 8, !dbg !50
  %rubyId_e147.i = load i64, i64* @rubyIdPrecomputed_e, align 8, !dbg !50
  %94 = call i64 @rb_id2sym(i64 %rubyId_e147.i) #10, !dbg !50
  %95 = getelementptr i64, i64* %keywords144.i, i32 1, !dbg !50
  store i64 %94, i64* %95, align 8, !dbg !50
  %rubyId_baz149.i = load i64, i64* @rubyIdPrecomputed_baz, align 8, !dbg !50
  %96 = call i64 @rb_id2sym(i64 %rubyId_baz149.i) #10, !dbg !50
  %97 = getelementptr i64, i64* %keywords144.i, i32 2, !dbg !50
  store i64 %96, i64* %97, align 8, !dbg !50
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.19, i64 %rubyId_take_arguments143.i, i32 noundef 68, i32 noundef 5, i32 noundef 3, i64* noundef nonnull %keywords144.i), !dbg !50
  %rubyId_take_arguments153.i = load i64, i64* @rubyIdPrecomputed_take_arguments, align 8, !dbg !51
  %rubyId_d155.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !51
  %98 = call i64 @rb_id2sym(i64 %rubyId_d155.i) #10, !dbg !51
  store i64 %98, i64* %keywords154.i, align 8, !dbg !51
  %rubyId_e157.i = load i64, i64* @rubyIdPrecomputed_e, align 8, !dbg !51
  %99 = call i64 @rb_id2sym(i64 %rubyId_e157.i) #10, !dbg !51
  %100 = getelementptr i64, i64* %keywords154.i, i32 1, !dbg !51
  store i64 %99, i64* %100, align 8, !dbg !51
  %rubyId_baz159.i = load i64, i64* @rubyIdPrecomputed_baz, align 8, !dbg !51
  %101 = call i64 @rb_id2sym(i64 %rubyId_baz159.i) #10, !dbg !51
  %102 = getelementptr i64, i64* %keywords154.i, i32 2, !dbg !51
  store i64 %101, i64* %102, align 8, !dbg !51
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.20, i64 %rubyId_take_arguments153.i, i32 noundef 68, i32 noundef 4, i32 noundef 3, i64* noundef nonnull %keywords154.i), !dbg !51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20)
  %103 = load %struct.rb_vm_struct*, %struct.rb_vm_struct** @ruby_current_vm_ptr, align 8, !tbaa !14
  %104 = getelementptr inbounds %struct.rb_vm_struct, %struct.rb_vm_struct* %103, i64 0, i32 18
  %105 = load i64, i64* %104, align 8, !tbaa !52
  %106 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !14
  %107 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %106, i64 0, i32 2
  %108 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %107, align 8, !tbaa !62
  %109 = bitcast i64* %positional_table.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %109)
  %110 = bitcast i64* %keyword_table.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %110)
  %stackFrame.i = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.17<static-init>$152", align 8
  %111 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %108, i64 0, i32 2
  store %struct.rb_iseq_struct* %stackFrame.i, %struct.rb_iseq_struct** %111, align 8, !tbaa !65
  %112 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %108, i64 0, i32 4
  %113 = load i64*, i64** %112, align 8, !tbaa !67
  %114 = load i64, i64* %113, align 8, !tbaa !6
  %115 = and i64 %114, -33
  store i64 %115, i64* %113, align 8, !tbaa !6
  call void @sorbet_setMethodStackFrame(%struct.rb_execution_context_struct* %106, %struct.rb_control_frame_struct* %108, %struct.rb_iseq_struct* %stackFrame.i) #10
  %116 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %108, i64 0, i32 0
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 4), i64** %116, align 8, !dbg !68, !tbaa !14
  %rubyId_take_arguments.i1 = load i64, i64* @rubyIdPrecomputed_take_arguments, align 8, !dbg !29
  %rawSym.i = call i64 @rb_id2sym(i64 %rubyId_take_arguments.i1) #10, !dbg !29
  %rubyId_normal.i = load i64, i64* @rubyIdPrecomputed_normal, align 8, !dbg !29
  %rawSym386.i = call i64 @rb_id2sym(i64 %rubyId_normal.i) #10, !dbg !29
  %117 = load i64, i64* @rb_cObject, align 8, !dbg !29
  %stackFrame387.i = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_Object#14take_arguments", align 8, !dbg !29
  %118 = call noalias nonnull i8* @ruby_xcalloc(i64 noundef 1, i64 noundef 64) #12, !dbg !29
  %119 = bitcast i8* %118 to i16*, !dbg !29
  %120 = load i16, i16* %119, align 8, !dbg !29
  %121 = and i16 %120, -384, !dbg !29
  %122 = or i16 %121, 119, !dbg !29
  store i16 %122, i16* %119, align 8, !dbg !29
  %123 = getelementptr inbounds i8, i8* %118, i64 8, !dbg !29
  %124 = bitcast i8* %123 to i32*, !dbg !29
  %125 = getelementptr inbounds i8, i8* %118, i64 12, !dbg !29
  %126 = bitcast i8* %125 to i32*, !dbg !29
  %127 = getelementptr inbounds i8, i8* %118, i64 16, !dbg !29
  %128 = getelementptr inbounds i8, i8* %118, i64 20, !dbg !29
  %129 = bitcast i8* %128 to i32*, !dbg !29
  store i32 0, i32* %129, align 4, !dbg !29, !tbaa !69
  %130 = getelementptr inbounds i8, i8* %118, i64 24, !dbg !29
  %131 = bitcast i8* %130 to i32*, !dbg !29
  store i32 0, i32* %131, align 8, !dbg !29, !tbaa !72
  %132 = getelementptr inbounds i8, i8* %118, i64 28, !dbg !29
  %133 = bitcast i8* %132 to i32*, !dbg !29
  store i32 3, i32* %133, align 4, !dbg !29, !tbaa !73
  %134 = getelementptr inbounds i8, i8* %118, i64 4, !dbg !29
  %135 = bitcast i8* %134 to i32*, !dbg !29
  %136 = bitcast i32* %135 to <4 x i32>*, !dbg !29
  store <4 x i32> <i32 7, i32 1, i32 1, i32 2>, <4 x i32>* %136, align 4, !dbg !29, !tbaa !74
  %rubyId_a.i = load i64, i64* @rubyIdPrecomputed_a, align 8, !dbg !29
  store i64 %rubyId_a.i, i64* %positional_table.i, align 8, !dbg !29
  %rubyId_b.i = load i64, i64* @rubyIdPrecomputed_b, align 8, !dbg !29
  %137 = getelementptr i64, i64* %positional_table.i, i32 1, !dbg !29
  store i64 %rubyId_b.i, i64* %137, align 8, !dbg !29
  %rubyId_c.i = load i64, i64* @rubyIdPrecomputed_c, align 8, !dbg !29
  %138 = getelementptr i64, i64* %positional_table.i, i32 2, !dbg !29
  store i64 %rubyId_c.i, i64* %138, align 8, !dbg !29
  %rubyId_g.i = load i64, i64* @rubyIdPrecomputed_g, align 8, !dbg !29
  %139 = getelementptr i64, i64* %positional_table.i, i32 3, !dbg !29
  store i64 %rubyId_g.i, i64* %139, align 8, !dbg !29
  %140 = call noalias nonnull i8* @ruby_xmalloc2(i64 noundef 4, i64 noundef 8) #12, !dbg !29
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture nonnull writeonly align 1 %140, i8* nocapture noundef nonnull readonly align 8 dereferenceable(24) %109, i64 noundef 32, i1 noundef false) #10, !dbg !29
  %141 = getelementptr inbounds i8, i8* %118, i64 32, !dbg !29
  %142 = bitcast i8* %141 to i8**, !dbg !29
  store i8* %140, i8** %142, align 8, !dbg !29, !tbaa !75
  %rubyId_d.i2 = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !29
  store i64 %rubyId_d.i2, i64* %keyword_table.i, align 8, !dbg !29
  %rubyId_e.i3 = load i64, i64* @rubyIdPrecomputed_e, align 8, !dbg !29
  %143 = getelementptr i64, i64* %keyword_table.i, i32 1, !dbg !29
  store i64 %rubyId_e.i3, i64* %143, align 8, !dbg !29
  %rubyId_f.i = load i64, i64* @rubyIdPrecomputed_f, align 8, !dbg !29
  %144 = getelementptr i64, i64* %keyword_table.i, i32 2, !dbg !29
  store i64 %rubyId_f.i, i64* %144, align 8, !dbg !29
  %145 = getelementptr inbounds i8, i8* %118, i64 40, !dbg !29
  %146 = bitcast i8* %145 to i32*, !dbg !29
  store i32 2, i32* %146, align 8, !dbg !29, !tbaa !76
  %147 = getelementptr inbounds i8, i8* %118, i64 44, !dbg !29
  %148 = bitcast i8* %147 to i32*, !dbg !29
  store i32 1, i32* %148, align 4, !dbg !29, !tbaa !77
  %149 = load i32, i32* %124, align 8, !dbg !29, !tbaa !78
  %150 = load i32, i32* %126, align 4, !dbg !29, !tbaa !79
  %151 = add i32 %149, 2, !dbg !29
  %152 = add i32 %151, %150, !dbg !29
  %153 = getelementptr inbounds i8, i8* %118, i64 48, !dbg !29
  %154 = bitcast i8* %153 to i32*, !dbg !29
  store i32 %152, i32* %154, align 8, !dbg !29, !tbaa !80
  %155 = load i16, i16* %119, align 8, !dbg !29
  %156 = and i16 %155, 32, !dbg !29
  %157 = icmp eq i16 %156, 0, !dbg !29
  br i1 %157, label %sorbet_setupParamKeywords.exit.i, label %158, !dbg !29

158:                                              ; preds = %entry
  %159 = add nsw i32 %152, 1, !dbg !29
  %160 = getelementptr inbounds i8, i8* %118, i64 52, !dbg !29
  %161 = bitcast i8* %160 to i32*, !dbg !29
  store i32 %159, i32* %161, align 4, !dbg !29, !tbaa !81
  br label %sorbet_setupParamKeywords.exit.i, !dbg !29

sorbet_setupParamKeywords.exit.i:                 ; preds = %158, %entry
  %162 = call noalias nonnull i8* @ruby_xmalloc2(i64 noundef 3, i64 noundef 8) #12, !dbg !29
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture nonnull writeonly align 1 %162, i8* nocapture noundef nonnull readonly align 8 dereferenceable(24) %110, i64 noundef 24, i1 noundef false) #10, !dbg !29
  %163 = getelementptr inbounds i8, i8* %118, i64 56, !dbg !29
  %164 = bitcast i8* %163 to i8**, !dbg !29
  store i8* %162, i8** %164, align 8, !dbg !29, !tbaa !82
  call void @sorbet_vm_define_method(i64 %117, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @str_take_arguments, i64 0, i64 0), i64 (i32, i64*, i64, %struct.rb_control_frame_struct*)* noundef @"func_Object#14take_arguments", i8* nonnull %118, %struct.rb_iseq_struct* %stackFrame387.i, i1 noundef zeroext false) #10, !dbg !29
  %165 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !29, !tbaa !14
  %166 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %165, i64 0, i32 5, !dbg !29
  %167 = load i32, i32* %166, align 8, !dbg !29, !tbaa !83
  %168 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %165, i64 0, i32 6, !dbg !29
  %169 = load i32, i32* %168, align 4, !dbg !29, !tbaa !84
  %170 = xor i32 %169, -1, !dbg !29
  %171 = and i32 %170, %167, !dbg !29
  %172 = icmp eq i32 %171, 0, !dbg !29
  br i1 %172, label %"func_<root>.17<static-init>$152.exit", label %173, !dbg !29, !prof !20

173:                                              ; preds = %sorbet_setupParamKeywords.exit.i
  %174 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %165, i64 0, i32 8, !dbg !29
  %175 = load %struct.rb_thread_struct*, %struct.rb_thread_struct** %174, align 8, !dbg !29, !tbaa !85
  %176 = call i32 @rb_threadptr_execute_interrupts(%struct.rb_thread_struct* %175, i32 noundef 0) #10, !dbg !29
  br label %"func_<root>.17<static-init>$152.exit", !dbg !29

"func_<root>.17<static-init>$152.exit":           ; preds = %sorbet_setupParamKeywords.exit.i, %173
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 8), i64** %116, align 8, !dbg !29, !tbaa !14
  %rubyId_d395.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !86
  %rawSym396.i = call i64 @rb_id2sym(i64 %rubyId_d395.i) #10, !dbg !86
  %177 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %108, i64 0, i32 1, !dbg !31
  %178 = load i64*, i64** %177, align 8, !dbg !31
  store i64 %105, i64* %178, align 8, !dbg !31, !tbaa !6
  %179 = getelementptr inbounds i64, i64* %178, i64 1, !dbg !31
  %180 = getelementptr inbounds i64, i64* %179, i64 1, !dbg !31
  %181 = getelementptr inbounds i64, i64* %180, i64 1, !dbg !31
  %182 = getelementptr inbounds i64, i64* %181, i64 1, !dbg !31
  %183 = bitcast i64* %179 to <4 x i64>*, !dbg !31
  store <4 x i64> <i64 -1, i64 -3, i64 -5, i64 -7>, <4 x i64>* %183, align 8, !dbg !31, !tbaa !6
  %184 = getelementptr inbounds i64, i64* %182, i64 1, !dbg !31
  %185 = getelementptr inbounds i64, i64* %184, i64 1, !dbg !31
  %186 = bitcast i64* %184 to <2 x i64>*, !dbg !31
  store <2 x i64> <i64 -9, i64 -11>, <2 x i64>* %186, align 8, !dbg !31, !tbaa !6
  %187 = getelementptr inbounds i64, i64* %185, i64 1, !dbg !31
  store i64 -13, i64* %187, align 8, !dbg !31, !tbaa !6
  %188 = getelementptr inbounds i64, i64* %187, i64 1, !dbg !31
  store i64 -15, i64* %188, align 8, !dbg !31, !tbaa !6
  %189 = getelementptr inbounds i64, i64* %188, i64 1, !dbg !31
  store i64* %189, i64** %177, align 8, !dbg !31
  %send = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments, i64 0), !dbg !31
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 9), i64** %116, align 8, !dbg !31, !tbaa !14
  %rubyId_d416.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !87
  %rawSym417.i = call i64 @rb_id2sym(i64 %rubyId_d416.i) #10, !dbg !87
  %190 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %108, i64 0, i32 1, !dbg !32
  %191 = load i64*, i64** %190, align 8, !dbg !32
  store i64 %105, i64* %191, align 8, !dbg !32, !tbaa !6
  %192 = getelementptr inbounds i64, i64* %191, i64 1, !dbg !32
  %193 = getelementptr inbounds i64, i64* %192, i64 1, !dbg !32
  %194 = getelementptr inbounds i64, i64* %193, i64 1, !dbg !32
  %195 = getelementptr inbounds i64, i64* %194, i64 1, !dbg !32
  %196 = bitcast i64* %192 to <4 x i64>*, !dbg !32
  store <4 x i64> <i64 -1, i64 -3, i64 -5, i64 -7>, <4 x i64>* %196, align 8, !dbg !32, !tbaa !6
  %197 = getelementptr inbounds i64, i64* %195, i64 1, !dbg !32
  %198 = getelementptr inbounds i64, i64* %197, i64 1, !dbg !32
  %199 = bitcast i64* %197 to <2 x i64>*, !dbg !32
  store <2 x i64> <i64 -9, i64 -11>, <2 x i64>* %199, align 8, !dbg !32, !tbaa !6
  %200 = getelementptr inbounds i64, i64* %198, i64 1, !dbg !32
  store i64 -15, i64* %200, align 8, !dbg !32, !tbaa !6
  %201 = getelementptr inbounds i64, i64* %200, i64 1, !dbg !32
  store i64* %201, i64** %190, align 8, !dbg !32
  %send6 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.1, i64 0), !dbg !32
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 10), i64** %116, align 8, !dbg !32, !tbaa !14
  %rubyId_d436.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !88
  %rawSym437.i = call i64 @rb_id2sym(i64 %rubyId_d436.i) #10, !dbg !88
  %202 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %108, i64 0, i32 1, !dbg !33
  %203 = load i64*, i64** %202, align 8, !dbg !33
  store i64 %105, i64* %203, align 8, !dbg !33, !tbaa !6
  %204 = getelementptr inbounds i64, i64* %203, i64 1, !dbg !33
  %205 = getelementptr inbounds i64, i64* %204, i64 1, !dbg !33
  %206 = getelementptr inbounds i64, i64* %205, i64 1, !dbg !33
  %207 = getelementptr inbounds i64, i64* %206, i64 1, !dbg !33
  %208 = bitcast i64* %204 to <4 x i64>*, !dbg !33
  store <4 x i64> <i64 -1, i64 -3, i64 -5, i64 -7>, <4 x i64>* %208, align 8, !dbg !33, !tbaa !6
  %209 = getelementptr inbounds i64, i64* %207, i64 1, !dbg !33
  %210 = getelementptr inbounds i64, i64* %209, i64 1, !dbg !33
  %211 = bitcast i64* %209 to <2 x i64>*, !dbg !33
  store <2 x i64> <i64 -9, i64 -15>, <2 x i64>* %211, align 8, !dbg !33, !tbaa !6
  %212 = getelementptr inbounds i64, i64* %210, i64 1, !dbg !33
  store i64* %212, i64** %202, align 8, !dbg !33
  %send8 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.2, i64 0), !dbg !33
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 11), i64** %116, align 8, !dbg !33, !tbaa !14
  %rubyId_d454.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !89
  %rawSym455.i = call i64 @rb_id2sym(i64 %rubyId_d454.i) #10, !dbg !89
  %213 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %108, i64 0, i32 1, !dbg !34
  %214 = load i64*, i64** %213, align 8, !dbg !34
  store i64 %105, i64* %214, align 8, !dbg !34, !tbaa !6
  %215 = getelementptr inbounds i64, i64* %214, i64 1, !dbg !34
  %216 = getelementptr inbounds i64, i64* %215, i64 1, !dbg !34
  %217 = getelementptr inbounds i64, i64* %216, i64 1, !dbg !34
  %218 = getelementptr inbounds i64, i64* %217, i64 1, !dbg !34
  %219 = bitcast i64* %215 to <4 x i64>*, !dbg !34
  store <4 x i64> <i64 -1, i64 -3, i64 -5, i64 -7>, <4 x i64>* %219, align 8, !dbg !34, !tbaa !6
  %220 = getelementptr inbounds i64, i64* %218, i64 1, !dbg !34
  store i64 -15, i64* %220, align 8, !dbg !34, !tbaa !6
  %221 = getelementptr inbounds i64, i64* %220, i64 1, !dbg !34
  store i64* %221, i64** %213, align 8, !dbg !34
  %send10 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.3, i64 0), !dbg !34
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 12), i64** %116, align 8, !dbg !34, !tbaa !14
  %rubyId_d470.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !90
  %rawSym471.i = call i64 @rb_id2sym(i64 %rubyId_d470.i) #10, !dbg !90
  %222 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %108, i64 0, i32 1, !dbg !35
  %223 = load i64*, i64** %222, align 8, !dbg !35
  store i64 %105, i64* %223, align 8, !dbg !35, !tbaa !6
  %224 = getelementptr inbounds i64, i64* %223, i64 1, !dbg !35
  %225 = getelementptr inbounds i64, i64* %224, i64 1, !dbg !35
  %226 = getelementptr inbounds i64, i64* %225, i64 1, !dbg !35
  %227 = getelementptr inbounds i64, i64* %226, i64 1, !dbg !35
  %228 = bitcast i64* %224 to <4 x i64>*, !dbg !35
  store <4 x i64> <i64 -1, i64 -3, i64 -5, i64 -15>, <4 x i64>* %228, align 8, !dbg !35, !tbaa !6
  %229 = getelementptr inbounds i64, i64* %227, i64 1, !dbg !35
  store i64* %229, i64** %222, align 8, !dbg !35
  %send12 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.4, i64 0), !dbg !35
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 13), i64** %116, align 8, !dbg !35, !tbaa !14
  %rubyId_d484.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !91
  %rawSym485.i = call i64 @rb_id2sym(i64 %rubyId_d484.i) #10, !dbg !91
  %230 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %108, i64 0, i32 1, !dbg !36
  %231 = load i64*, i64** %230, align 8, !dbg !36
  store i64 %105, i64* %231, align 8, !dbg !36, !tbaa !6
  %232 = getelementptr inbounds i64, i64* %231, i64 1, !dbg !36
  %233 = getelementptr inbounds i64, i64* %232, i64 1, !dbg !36
  %234 = bitcast i64* %232 to <2 x i64>*, !dbg !36
  store <2 x i64> <i64 -1, i64 -3>, <2 x i64>* %234, align 8, !dbg !36, !tbaa !6
  %235 = getelementptr inbounds i64, i64* %233, i64 1, !dbg !36
  store i64 -15, i64* %235, align 8, !dbg !36, !tbaa !6
  %236 = getelementptr inbounds i64, i64* %235, i64 1, !dbg !36
  store i64* %236, i64** %230, align 8, !dbg !36
  %send14 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.5, i64 0), !dbg !36
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 14), i64** %116, align 8, !dbg !36, !tbaa !14
  %rubyId_d496.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !92
  %rawSym497.i = call i64 @rb_id2sym(i64 %rubyId_d496.i) #10, !dbg !92
  %237 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %108, i64 0, i32 1, !dbg !37
  %238 = load i64*, i64** %237, align 8, !dbg !37
  store i64 %105, i64* %238, align 8, !dbg !37, !tbaa !6
  %239 = getelementptr inbounds i64, i64* %238, i64 1, !dbg !37
  %240 = getelementptr inbounds i64, i64* %239, i64 1, !dbg !37
  %241 = bitcast i64* %239 to <2 x i64>*, !dbg !37
  store <2 x i64> <i64 -1, i64 -15>, <2 x i64>* %241, align 8, !dbg !37, !tbaa !6
  %242 = getelementptr inbounds i64, i64* %240, i64 1, !dbg !37
  store i64* %242, i64** %237, align 8, !dbg !37
  %send16 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.6, i64 0), !dbg !37
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 16), i64** %116, align 8, !dbg !37, !tbaa !14
  %rubyId_d513.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !93
  %rawSym514.i = call i64 @rb_id2sym(i64 %rubyId_d513.i) #10, !dbg !93
  %rubyId_e516.i = load i64, i64* @rubyIdPrecomputed_e, align 8, !dbg !94
  %rawSym517.i = call i64 @rb_id2sym(i64 %rubyId_e516.i) #10, !dbg !94
  %243 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %108, i64 0, i32 1, !dbg !38
  %244 = load i64*, i64** %243, align 8, !dbg !38
  store i64 %105, i64* %244, align 8, !dbg !38, !tbaa !6
  %245 = getelementptr inbounds i64, i64* %244, i64 1, !dbg !38
  %246 = getelementptr inbounds i64, i64* %245, i64 1, !dbg !38
  %247 = getelementptr inbounds i64, i64* %246, i64 1, !dbg !38
  %248 = getelementptr inbounds i64, i64* %247, i64 1, !dbg !38
  %249 = bitcast i64* %245 to <4 x i64>*, !dbg !38
  store <4 x i64> <i64 -1, i64 -3, i64 -5, i64 -7>, <4 x i64>* %249, align 8, !dbg !38, !tbaa !6
  %250 = getelementptr inbounds i64, i64* %248, i64 1, !dbg !38
  %251 = getelementptr inbounds i64, i64* %250, i64 1, !dbg !38
  %252 = bitcast i64* %250 to <2 x i64>*, !dbg !38
  store <2 x i64> <i64 -9, i64 -11>, <2 x i64>* %252, align 8, !dbg !38, !tbaa !6
  %253 = getelementptr inbounds i64, i64* %251, i64 1, !dbg !38
  store i64 -13, i64* %253, align 8, !dbg !38, !tbaa !6
  %254 = getelementptr inbounds i64, i64* %253, i64 1, !dbg !38
  store i64 -15, i64* %254, align 8, !dbg !38, !tbaa !6
  %255 = getelementptr inbounds i64, i64* %254, i64 1, !dbg !38
  store i64 -17, i64* %255, align 8, !dbg !38, !tbaa !6
  %256 = getelementptr inbounds i64, i64* %255, i64 1, !dbg !38
  store i64* %256, i64** %243, align 8, !dbg !38
  %send18 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.7, i64 0), !dbg !38
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 17), i64** %116, align 8, !dbg !38, !tbaa !14
  %rubyId_d539.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !95
  %rawSym540.i = call i64 @rb_id2sym(i64 %rubyId_d539.i) #10, !dbg !95
  %rubyId_e542.i = load i64, i64* @rubyIdPrecomputed_e, align 8, !dbg !96
  %rawSym543.i = call i64 @rb_id2sym(i64 %rubyId_e542.i) #10, !dbg !96
  %257 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %108, i64 0, i32 1, !dbg !39
  %258 = load i64*, i64** %257, align 8, !dbg !39
  store i64 %105, i64* %258, align 8, !dbg !39, !tbaa !6
  %259 = getelementptr inbounds i64, i64* %258, i64 1, !dbg !39
  %260 = getelementptr inbounds i64, i64* %259, i64 1, !dbg !39
  %261 = getelementptr inbounds i64, i64* %260, i64 1, !dbg !39
  %262 = getelementptr inbounds i64, i64* %261, i64 1, !dbg !39
  %263 = bitcast i64* %259 to <4 x i64>*, !dbg !39
  store <4 x i64> <i64 -1, i64 -3, i64 -5, i64 -7>, <4 x i64>* %263, align 8, !dbg !39, !tbaa !6
  %264 = getelementptr inbounds i64, i64* %262, i64 1, !dbg !39
  %265 = getelementptr inbounds i64, i64* %264, i64 1, !dbg !39
  %266 = bitcast i64* %264 to <2 x i64>*, !dbg !39
  store <2 x i64> <i64 -9, i64 -11>, <2 x i64>* %266, align 8, !dbg !39, !tbaa !6
  %267 = getelementptr inbounds i64, i64* %265, i64 1, !dbg !39
  store i64 -15, i64* %267, align 8, !dbg !39, !tbaa !6
  %268 = getelementptr inbounds i64, i64* %267, i64 1, !dbg !39
  store i64 -17, i64* %268, align 8, !dbg !39, !tbaa !6
  %269 = getelementptr inbounds i64, i64* %268, i64 1, !dbg !39
  store i64* %269, i64** %257, align 8, !dbg !39
  %send20 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.8, i64 0), !dbg !39
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 18), i64** %116, align 8, !dbg !39, !tbaa !14
  %rubyId_d563.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !97
  %rawSym564.i = call i64 @rb_id2sym(i64 %rubyId_d563.i) #10, !dbg !97
  %rubyId_e566.i = load i64, i64* @rubyIdPrecomputed_e, align 8, !dbg !98
  %rawSym567.i = call i64 @rb_id2sym(i64 %rubyId_e566.i) #10, !dbg !98
  %270 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %108, i64 0, i32 1, !dbg !40
  %271 = load i64*, i64** %270, align 8, !dbg !40
  store i64 %105, i64* %271, align 8, !dbg !40, !tbaa !6
  %272 = getelementptr inbounds i64, i64* %271, i64 1, !dbg !40
  %273 = getelementptr inbounds i64, i64* %272, i64 1, !dbg !40
  %274 = getelementptr inbounds i64, i64* %273, i64 1, !dbg !40
  %275 = getelementptr inbounds i64, i64* %274, i64 1, !dbg !40
  %276 = bitcast i64* %272 to <4 x i64>*, !dbg !40
  store <4 x i64> <i64 -1, i64 -3, i64 -5, i64 -7>, <4 x i64>* %276, align 8, !dbg !40, !tbaa !6
  %277 = getelementptr inbounds i64, i64* %275, i64 1, !dbg !40
  %278 = getelementptr inbounds i64, i64* %277, i64 1, !dbg !40
  %279 = bitcast i64* %277 to <2 x i64>*, !dbg !40
  store <2 x i64> <i64 -9, i64 -15>, <2 x i64>* %279, align 8, !dbg !40, !tbaa !6
  %280 = getelementptr inbounds i64, i64* %278, i64 1, !dbg !40
  store i64 -17, i64* %280, align 8, !dbg !40, !tbaa !6
  %281 = getelementptr inbounds i64, i64* %280, i64 1, !dbg !40
  store i64* %281, i64** %270, align 8, !dbg !40
  %send22 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.9, i64 0), !dbg !40
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 19), i64** %116, align 8, !dbg !40, !tbaa !14
  %rubyId_d585.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !99
  %rawSym586.i = call i64 @rb_id2sym(i64 %rubyId_d585.i) #10, !dbg !99
  %rubyId_e588.i = load i64, i64* @rubyIdPrecomputed_e, align 8, !dbg !100
  %rawSym589.i = call i64 @rb_id2sym(i64 %rubyId_e588.i) #10, !dbg !100
  %282 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %108, i64 0, i32 1, !dbg !41
  %283 = load i64*, i64** %282, align 8, !dbg !41
  store i64 %105, i64* %283, align 8, !dbg !41, !tbaa !6
  %284 = getelementptr inbounds i64, i64* %283, i64 1, !dbg !41
  %285 = getelementptr inbounds i64, i64* %284, i64 1, !dbg !41
  %286 = getelementptr inbounds i64, i64* %285, i64 1, !dbg !41
  %287 = getelementptr inbounds i64, i64* %286, i64 1, !dbg !41
  %288 = bitcast i64* %284 to <4 x i64>*, !dbg !41
  store <4 x i64> <i64 -1, i64 -3, i64 -5, i64 -7>, <4 x i64>* %288, align 8, !dbg !41, !tbaa !6
  %289 = getelementptr inbounds i64, i64* %287, i64 1, !dbg !41
  %290 = getelementptr inbounds i64, i64* %289, i64 1, !dbg !41
  %291 = bitcast i64* %289 to <2 x i64>*, !dbg !41
  store <2 x i64> <i64 -15, i64 -17>, <2 x i64>* %291, align 8, !dbg !41, !tbaa !6
  %292 = getelementptr inbounds i64, i64* %290, i64 1, !dbg !41
  store i64* %292, i64** %282, align 8, !dbg !41
  %send24 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.10, i64 0), !dbg !41
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 20), i64** %116, align 8, !dbg !41, !tbaa !14
  %rubyId_d605.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !101
  %rawSym606.i = call i64 @rb_id2sym(i64 %rubyId_d605.i) #10, !dbg !101
  %rubyId_e608.i = load i64, i64* @rubyIdPrecomputed_e, align 8, !dbg !102
  %rawSym609.i = call i64 @rb_id2sym(i64 %rubyId_e608.i) #10, !dbg !102
  %293 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %108, i64 0, i32 1, !dbg !42
  %294 = load i64*, i64** %293, align 8, !dbg !42
  store i64 %105, i64* %294, align 8, !dbg !42, !tbaa !6
  %295 = getelementptr inbounds i64, i64* %294, i64 1, !dbg !42
  %296 = getelementptr inbounds i64, i64* %295, i64 1, !dbg !42
  %297 = getelementptr inbounds i64, i64* %296, i64 1, !dbg !42
  %298 = getelementptr inbounds i64, i64* %297, i64 1, !dbg !42
  %299 = bitcast i64* %295 to <4 x i64>*, !dbg !42
  store <4 x i64> <i64 -1, i64 -3, i64 -5, i64 -15>, <4 x i64>* %299, align 8, !dbg !42, !tbaa !6
  %300 = getelementptr inbounds i64, i64* %298, i64 1, !dbg !42
  store i64 -17, i64* %300, align 8, !dbg !42, !tbaa !6
  %301 = getelementptr inbounds i64, i64* %300, i64 1, !dbg !42
  store i64* %301, i64** %293, align 8, !dbg !42
  %send26 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.11, i64 0), !dbg !42
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 21), i64** %116, align 8, !dbg !42, !tbaa !14
  %rubyId_d623.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !103
  %rawSym624.i = call i64 @rb_id2sym(i64 %rubyId_d623.i) #10, !dbg !103
  %rubyId_e626.i = load i64, i64* @rubyIdPrecomputed_e, align 8, !dbg !104
  %rawSym627.i = call i64 @rb_id2sym(i64 %rubyId_e626.i) #10, !dbg !104
  %302 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %108, i64 0, i32 1, !dbg !43
  %303 = load i64*, i64** %302, align 8, !dbg !43
  store i64 %105, i64* %303, align 8, !dbg !43, !tbaa !6
  %304 = getelementptr inbounds i64, i64* %303, i64 1, !dbg !43
  %305 = getelementptr inbounds i64, i64* %304, i64 1, !dbg !43
  %306 = getelementptr inbounds i64, i64* %305, i64 1, !dbg !43
  %307 = getelementptr inbounds i64, i64* %306, i64 1, !dbg !43
  %308 = bitcast i64* %304 to <4 x i64>*, !dbg !43
  store <4 x i64> <i64 -1, i64 -3, i64 -15, i64 -17>, <4 x i64>* %308, align 8, !dbg !43, !tbaa !6
  %309 = getelementptr inbounds i64, i64* %307, i64 1, !dbg !43
  store i64* %309, i64** %302, align 8, !dbg !43
  %send28 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.12, i64 0), !dbg !43
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 22), i64** %116, align 8, !dbg !43, !tbaa !14
  %rubyId_d639.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !105
  %rawSym640.i = call i64 @rb_id2sym(i64 %rubyId_d639.i) #10, !dbg !105
  %rubyId_e642.i = load i64, i64* @rubyIdPrecomputed_e, align 8, !dbg !106
  %rawSym643.i = call i64 @rb_id2sym(i64 %rubyId_e642.i) #10, !dbg !106
  %310 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %108, i64 0, i32 1, !dbg !44
  %311 = load i64*, i64** %310, align 8, !dbg !44
  store i64 %105, i64* %311, align 8, !dbg !44, !tbaa !6
  %312 = getelementptr inbounds i64, i64* %311, i64 1, !dbg !44
  %313 = getelementptr inbounds i64, i64* %312, i64 1, !dbg !44
  %314 = bitcast i64* %312 to <2 x i64>*, !dbg !44
  store <2 x i64> <i64 -1, i64 -15>, <2 x i64>* %314, align 8, !dbg !44, !tbaa !6
  %315 = getelementptr inbounds i64, i64* %313, i64 1, !dbg !44
  store i64 -17, i64* %315, align 8, !dbg !44, !tbaa !6
  %316 = getelementptr inbounds i64, i64* %315, i64 1, !dbg !44
  store i64* %316, i64** %310, align 8, !dbg !44
  %send30 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.13, i64 0), !dbg !44
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 24), i64** %116, align 8, !dbg !44, !tbaa !14
  %rubyId_d660.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !107
  %rawSym661.i = call i64 @rb_id2sym(i64 %rubyId_d660.i) #10, !dbg !107
  %rubyId_e663.i = load i64, i64* @rubyIdPrecomputed_e, align 8, !dbg !108
  %rawSym664.i = call i64 @rb_id2sym(i64 %rubyId_e663.i) #10, !dbg !108
  %rubyId_baz.i4 = load i64, i64* @rubyIdPrecomputed_baz, align 8, !dbg !109
  %rawSym666.i = call i64 @rb_id2sym(i64 %rubyId_baz.i4) #10, !dbg !109
  %317 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %108, i64 0, i32 1, !dbg !45
  %318 = load i64*, i64** %317, align 8, !dbg !45
  store i64 %105, i64* %318, align 8, !dbg !45, !tbaa !6
  %319 = getelementptr inbounds i64, i64* %318, i64 1, !dbg !45
  %320 = getelementptr inbounds i64, i64* %319, i64 1, !dbg !45
  %321 = getelementptr inbounds i64, i64* %320, i64 1, !dbg !45
  %322 = getelementptr inbounds i64, i64* %321, i64 1, !dbg !45
  %323 = bitcast i64* %319 to <4 x i64>*, !dbg !45
  store <4 x i64> <i64 -1, i64 -3, i64 -5, i64 -7>, <4 x i64>* %323, align 8, !dbg !45, !tbaa !6
  %324 = getelementptr inbounds i64, i64* %322, i64 1, !dbg !45
  %325 = getelementptr inbounds i64, i64* %324, i64 1, !dbg !45
  %326 = bitcast i64* %324 to <2 x i64>*, !dbg !45
  store <2 x i64> <i64 -9, i64 -11>, <2 x i64>* %326, align 8, !dbg !45, !tbaa !6
  %327 = getelementptr inbounds i64, i64* %325, i64 1, !dbg !45
  store i64 -13, i64* %327, align 8, !dbg !45, !tbaa !6
  %328 = getelementptr inbounds i64, i64* %327, i64 1, !dbg !45
  store i64 -15, i64* %328, align 8, !dbg !45, !tbaa !6
  %329 = getelementptr inbounds i64, i64* %328, i64 1, !dbg !45
  store i64 -17, i64* %329, align 8, !dbg !45, !tbaa !6
  %330 = getelementptr inbounds i64, i64* %329, i64 1, !dbg !45
  store i64 -19, i64* %330, align 8, !dbg !45, !tbaa !6
  %331 = getelementptr inbounds i64, i64* %330, i64 1, !dbg !45
  store i64* %331, i64** %317, align 8, !dbg !45
  %send32 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.14, i64 0), !dbg !45
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 25), i64** %116, align 8, !dbg !45, !tbaa !14
  %rubyId_d689.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !110
  %rawSym690.i = call i64 @rb_id2sym(i64 %rubyId_d689.i) #10, !dbg !110
  %rubyId_e692.i = load i64, i64* @rubyIdPrecomputed_e, align 8, !dbg !111
  %rawSym693.i = call i64 @rb_id2sym(i64 %rubyId_e692.i) #10, !dbg !111
  %rubyId_baz695.i = load i64, i64* @rubyIdPrecomputed_baz, align 8, !dbg !112
  %rawSym696.i = call i64 @rb_id2sym(i64 %rubyId_baz695.i) #10, !dbg !112
  %332 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %108, i64 0, i32 1, !dbg !46
  %333 = load i64*, i64** %332, align 8, !dbg !46
  store i64 %105, i64* %333, align 8, !dbg !46, !tbaa !6
  %334 = getelementptr inbounds i64, i64* %333, i64 1, !dbg !46
  %335 = getelementptr inbounds i64, i64* %334, i64 1, !dbg !46
  %336 = getelementptr inbounds i64, i64* %335, i64 1, !dbg !46
  %337 = getelementptr inbounds i64, i64* %336, i64 1, !dbg !46
  %338 = bitcast i64* %334 to <4 x i64>*, !dbg !46
  store <4 x i64> <i64 -1, i64 -3, i64 -5, i64 -7>, <4 x i64>* %338, align 8, !dbg !46, !tbaa !6
  %339 = getelementptr inbounds i64, i64* %337, i64 1, !dbg !46
  %340 = getelementptr inbounds i64, i64* %339, i64 1, !dbg !46
  %341 = bitcast i64* %339 to <2 x i64>*, !dbg !46
  store <2 x i64> <i64 -9, i64 -11>, <2 x i64>* %341, align 8, !dbg !46, !tbaa !6
  %342 = getelementptr inbounds i64, i64* %340, i64 1, !dbg !46
  store i64 -15, i64* %342, align 8, !dbg !46, !tbaa !6
  %343 = getelementptr inbounds i64, i64* %342, i64 1, !dbg !46
  store i64 -17, i64* %343, align 8, !dbg !46, !tbaa !6
  %344 = getelementptr inbounds i64, i64* %343, i64 1, !dbg !46
  store i64 -19, i64* %344, align 8, !dbg !46, !tbaa !6
  %345 = getelementptr inbounds i64, i64* %344, i64 1, !dbg !46
  store i64* %345, i64** %332, align 8, !dbg !46
  %send34 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.15, i64 0), !dbg !46
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 26), i64** %116, align 8, !dbg !46, !tbaa !14
  %rubyId_d717.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !113
  %rawSym718.i = call i64 @rb_id2sym(i64 %rubyId_d717.i) #10, !dbg !113
  %rubyId_e720.i = load i64, i64* @rubyIdPrecomputed_e, align 8, !dbg !114
  %rawSym721.i = call i64 @rb_id2sym(i64 %rubyId_e720.i) #10, !dbg !114
  %rubyId_baz723.i = load i64, i64* @rubyIdPrecomputed_baz, align 8, !dbg !115
  %rawSym724.i = call i64 @rb_id2sym(i64 %rubyId_baz723.i) #10, !dbg !115
  %346 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %108, i64 0, i32 1, !dbg !47
  %347 = load i64*, i64** %346, align 8, !dbg !47
  store i64 %105, i64* %347, align 8, !dbg !47, !tbaa !6
  %348 = getelementptr inbounds i64, i64* %347, i64 1, !dbg !47
  %349 = getelementptr inbounds i64, i64* %348, i64 1, !dbg !47
  %350 = getelementptr inbounds i64, i64* %349, i64 1, !dbg !47
  %351 = getelementptr inbounds i64, i64* %350, i64 1, !dbg !47
  %352 = bitcast i64* %348 to <4 x i64>*, !dbg !47
  store <4 x i64> <i64 -1, i64 -3, i64 -5, i64 -7>, <4 x i64>* %352, align 8, !dbg !47, !tbaa !6
  %353 = getelementptr inbounds i64, i64* %351, i64 1, !dbg !47
  %354 = getelementptr inbounds i64, i64* %353, i64 1, !dbg !47
  %355 = bitcast i64* %353 to <2 x i64>*, !dbg !47
  store <2 x i64> <i64 -9, i64 -15>, <2 x i64>* %355, align 8, !dbg !47, !tbaa !6
  %356 = getelementptr inbounds i64, i64* %354, i64 1, !dbg !47
  store i64 -17, i64* %356, align 8, !dbg !47, !tbaa !6
  %357 = getelementptr inbounds i64, i64* %356, i64 1, !dbg !47
  store i64 -19, i64* %357, align 8, !dbg !47, !tbaa !6
  %358 = getelementptr inbounds i64, i64* %357, i64 1, !dbg !47
  store i64* %358, i64** %346, align 8, !dbg !47
  %send36 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.16, i64 0), !dbg !47
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 27), i64** %116, align 8, !dbg !47, !tbaa !14
  %rubyId_d743.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !116
  %rawSym744.i = call i64 @rb_id2sym(i64 %rubyId_d743.i) #10, !dbg !116
  %rubyId_e746.i = load i64, i64* @rubyIdPrecomputed_e, align 8, !dbg !117
  %rawSym747.i = call i64 @rb_id2sym(i64 %rubyId_e746.i) #10, !dbg !117
  %rubyId_baz749.i = load i64, i64* @rubyIdPrecomputed_baz, align 8, !dbg !118
  %rawSym750.i = call i64 @rb_id2sym(i64 %rubyId_baz749.i) #10, !dbg !118
  %359 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %108, i64 0, i32 1, !dbg !48
  %360 = load i64*, i64** %359, align 8, !dbg !48
  store i64 %105, i64* %360, align 8, !dbg !48, !tbaa !6
  %361 = getelementptr inbounds i64, i64* %360, i64 1, !dbg !48
  %362 = getelementptr inbounds i64, i64* %361, i64 1, !dbg !48
  %363 = getelementptr inbounds i64, i64* %362, i64 1, !dbg !48
  %364 = getelementptr inbounds i64, i64* %363, i64 1, !dbg !48
  %365 = bitcast i64* %361 to <4 x i64>*, !dbg !48
  store <4 x i64> <i64 -1, i64 -3, i64 -5, i64 -7>, <4 x i64>* %365, align 8, !dbg !48, !tbaa !6
  %366 = getelementptr inbounds i64, i64* %364, i64 1, !dbg !48
  %367 = getelementptr inbounds i64, i64* %366, i64 1, !dbg !48
  %368 = bitcast i64* %366 to <2 x i64>*, !dbg !48
  store <2 x i64> <i64 -15, i64 -17>, <2 x i64>* %368, align 8, !dbg !48, !tbaa !6
  %369 = getelementptr inbounds i64, i64* %367, i64 1, !dbg !48
  store i64 -19, i64* %369, align 8, !dbg !48, !tbaa !6
  %370 = getelementptr inbounds i64, i64* %369, i64 1, !dbg !48
  store i64* %370, i64** %359, align 8, !dbg !48
  %send38 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.17, i64 0), !dbg !48
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 28), i64** %116, align 8, !dbg !48, !tbaa !14
  %rubyId_d767.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !119
  %rawSym768.i = call i64 @rb_id2sym(i64 %rubyId_d767.i) #10, !dbg !119
  %rubyId_e770.i = load i64, i64* @rubyIdPrecomputed_e, align 8, !dbg !120
  %rawSym771.i = call i64 @rb_id2sym(i64 %rubyId_e770.i) #10, !dbg !120
  %rubyId_baz773.i = load i64, i64* @rubyIdPrecomputed_baz, align 8, !dbg !121
  %rawSym774.i = call i64 @rb_id2sym(i64 %rubyId_baz773.i) #10, !dbg !121
  %371 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %108, i64 0, i32 1, !dbg !49
  %372 = load i64*, i64** %371, align 8, !dbg !49
  store i64 %105, i64* %372, align 8, !dbg !49, !tbaa !6
  %373 = getelementptr inbounds i64, i64* %372, i64 1, !dbg !49
  %374 = getelementptr inbounds i64, i64* %373, i64 1, !dbg !49
  %375 = getelementptr inbounds i64, i64* %374, i64 1, !dbg !49
  %376 = getelementptr inbounds i64, i64* %375, i64 1, !dbg !49
  %377 = bitcast i64* %373 to <4 x i64>*, !dbg !49
  store <4 x i64> <i64 -1, i64 -3, i64 -5, i64 -15>, <4 x i64>* %377, align 8, !dbg !49, !tbaa !6
  %378 = getelementptr inbounds i64, i64* %376, i64 1, !dbg !49
  %379 = getelementptr inbounds i64, i64* %378, i64 1, !dbg !49
  %380 = bitcast i64* %378 to <2 x i64>*, !dbg !49
  store <2 x i64> <i64 -17, i64 -19>, <2 x i64>* %380, align 8, !dbg !49, !tbaa !6
  %381 = getelementptr inbounds i64, i64* %379, i64 1, !dbg !49
  store i64* %381, i64** %371, align 8, !dbg !49
  %send40 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.18, i64 0), !dbg !49
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 29), i64** %116, align 8, !dbg !49, !tbaa !14
  %rubyId_d789.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !122
  %rawSym790.i = call i64 @rb_id2sym(i64 %rubyId_d789.i) #10, !dbg !122
  %rubyId_e792.i = load i64, i64* @rubyIdPrecomputed_e, align 8, !dbg !123
  %rawSym793.i = call i64 @rb_id2sym(i64 %rubyId_e792.i) #10, !dbg !123
  %rubyId_baz795.i = load i64, i64* @rubyIdPrecomputed_baz, align 8, !dbg !124
  %rawSym796.i = call i64 @rb_id2sym(i64 %rubyId_baz795.i) #10, !dbg !124
  %382 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %108, i64 0, i32 1, !dbg !50
  %383 = load i64*, i64** %382, align 8, !dbg !50
  store i64 %105, i64* %383, align 8, !dbg !50, !tbaa !6
  %384 = getelementptr inbounds i64, i64* %383, i64 1, !dbg !50
  %385 = getelementptr inbounds i64, i64* %384, i64 1, !dbg !50
  %386 = getelementptr inbounds i64, i64* %385, i64 1, !dbg !50
  %387 = getelementptr inbounds i64, i64* %386, i64 1, !dbg !50
  %388 = bitcast i64* %384 to <4 x i64>*, !dbg !50
  store <4 x i64> <i64 -1, i64 -3, i64 -15, i64 -17>, <4 x i64>* %388, align 8, !dbg !50, !tbaa !6
  %389 = getelementptr inbounds i64, i64* %387, i64 1, !dbg !50
  store i64 -19, i64* %389, align 8, !dbg !50, !tbaa !6
  %390 = getelementptr inbounds i64, i64* %389, i64 1, !dbg !50
  store i64* %390, i64** %382, align 8, !dbg !50
  %send42 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.19, i64 0), !dbg !50
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 30), i64** %116, align 8, !dbg !50, !tbaa !14
  %rubyId_d809.i = load i64, i64* @rubyIdPrecomputed_d, align 8, !dbg !125
  %rawSym810.i = call i64 @rb_id2sym(i64 %rubyId_d809.i) #10, !dbg !125
  %rubyId_e812.i = load i64, i64* @rubyIdPrecomputed_e, align 8, !dbg !126
  %rawSym813.i = call i64 @rb_id2sym(i64 %rubyId_e812.i) #10, !dbg !126
  %rubyId_baz815.i = load i64, i64* @rubyIdPrecomputed_baz, align 8, !dbg !127
  %rawSym816.i = call i64 @rb_id2sym(i64 %rubyId_baz815.i) #10, !dbg !127
  %391 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %108, i64 0, i32 1, !dbg !51
  %392 = load i64*, i64** %391, align 8, !dbg !51
  store i64 %105, i64* %392, align 8, !dbg !51, !tbaa !6
  %393 = getelementptr inbounds i64, i64* %392, i64 1, !dbg !51
  %394 = getelementptr inbounds i64, i64* %393, i64 1, !dbg !51
  %395 = getelementptr inbounds i64, i64* %394, i64 1, !dbg !51
  %396 = getelementptr inbounds i64, i64* %395, i64 1, !dbg !51
  %397 = bitcast i64* %393 to <4 x i64>*, !dbg !51
  store <4 x i64> <i64 -1, i64 -15, i64 -17, i64 -19>, <4 x i64>* %397, align 8, !dbg !51, !tbaa !6
  %398 = getelementptr inbounds i64, i64* %396, i64 1, !dbg !51
  store i64* %398, i64** %391, align 8, !dbg !51
  %send44 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.20, i64 0), !dbg !51
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %109)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %110)
  ret void
}

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #7

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

attributes #0 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { allocsize(0,1) "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { nounwind ssp uwtable "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind sspreq uwtable }
attributes #6 = { sspreq }
attributes #7 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #8 = { noreturn nounwind }
attributes #9 = { noreturn }
attributes #10 = { nounwind }
attributes #11 = { willreturn }
attributes #12 = { nounwind allocsize(0,1) }

!llvm.module.flags = !{!0, !1, !2}
!llvm.dbg.cu = !{!3}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"cf-protection-return", i32 1}
!2 = !{i32 4, !"cf-protection-branch", i32 1}
!3 = distinct !DICompileUnit(language: DW_LANG_C, file: !4, producer: "Sorbet LLVM", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !5)
!4 = !DIFile(filename: "test/testdata/compiler/all_arguments.rb", directory: ".")
!5 = !{}
!6 = !{!7, !7, i64 0}
!7 = !{!"long", !8, i64 0}
!8 = !{!"omnipotent char", !9, i64 0}
!9 = !{!"Simple C/C++ TBAA"}
!10 = distinct !DISubprogram(name: "Object#take_arguments", linkageName: "func_Object#14take_arguments", scope: null, file: !4, line: 4, type: !11, scopeLine: 4, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3, retainedNodes: !5)
!11 = !DISubroutineType(types: !12)
!12 = !{!13}
!13 = !DIBasicType(name: "VALUE", size: 64, encoding: DW_ATE_signed)
!14 = !{!15, !15, i64 0}
!15 = !{!"any pointer", !8, i64 0}
!16 = !DILocation(line: 4, column: 1, scope: !10)
!17 = !{!18, !7, i64 0}
!18 = !{!"RBasic", !7, i64 0, !7, i64 8}
!19 = !{!"branch_weights", i32 1, i32 2000}
!20 = !{!"branch_weights", i32 2000, i32 1}
!21 = !DILocation(line: 4, column: 23, scope: !10)
!22 = !DILocation(line: 4, column: 36, scope: !10)
!23 = !DILocation(line: 0, scope: !10)
!24 = !DILocation(line: 5, column: 10, scope: !10)
!25 = !{!26}
!26 = distinct !{!26, !27, !"sorbet_buildArrayIntrinsic: argument 0"}
!27 = distinct !{!27, !"sorbet_buildArrayIntrinsic"}
!28 = !DILocation(line: 5, column: 5, scope: !10)
!29 = !DILocation(line: 4, column: 1, scope: !30)
!30 = distinct !DISubprogram(name: "<root>.<static-init>", linkageName: "func_<root>.17<static-init>$152", scope: null, file: !4, line: 4, type: !11, scopeLine: 4, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3, retainedNodes: !5)
!31 = !DILocation(line: 8, column: 1, scope: !30)
!32 = !DILocation(line: 9, column: 1, scope: !30)
!33 = !DILocation(line: 10, column: 1, scope: !30)
!34 = !DILocation(line: 11, column: 1, scope: !30)
!35 = !DILocation(line: 12, column: 1, scope: !30)
!36 = !DILocation(line: 13, column: 1, scope: !30)
!37 = !DILocation(line: 14, column: 1, scope: !30)
!38 = !DILocation(line: 16, column: 1, scope: !30)
!39 = !DILocation(line: 17, column: 1, scope: !30)
!40 = !DILocation(line: 18, column: 1, scope: !30)
!41 = !DILocation(line: 19, column: 1, scope: !30)
!42 = !DILocation(line: 20, column: 1, scope: !30)
!43 = !DILocation(line: 21, column: 1, scope: !30)
!44 = !DILocation(line: 22, column: 1, scope: !30)
!45 = !DILocation(line: 24, column: 1, scope: !30)
!46 = !DILocation(line: 25, column: 1, scope: !30)
!47 = !DILocation(line: 26, column: 1, scope: !30)
!48 = !DILocation(line: 27, column: 1, scope: !30)
!49 = !DILocation(line: 28, column: 1, scope: !30)
!50 = !DILocation(line: 29, column: 1, scope: !30)
!51 = !DILocation(line: 30, column: 1, scope: !30)
!52 = !{!53, !7, i64 400}
!53 = !{!"rb_vm_struct", !7, i64 0, !54, i64 8, !15, i64 192, !15, i64 200, !15, i64 208, !58, i64 216, !8, i64 224, !55, i64 264, !55, i64 280, !55, i64 296, !55, i64 312, !7, i64 328, !57, i64 336, !57, i64 340, !57, i64 344, !57, i64 344, !57, i64 344, !57, i64 344, !57, i64 348, !7, i64 352, !8, i64 360, !7, i64 400, !7, i64 408, !7, i64 416, !7, i64 424, !7, i64 432, !7, i64 440, !7, i64 448, !15, i64 456, !15, i64 464, !59, i64 472, !60, i64 992, !15, i64 1016, !15, i64 1024, !57, i64 1032, !57, i64 1036, !55, i64 1040, !8, i64 1056, !7, i64 1096, !7, i64 1104, !7, i64 1112, !7, i64 1120, !7, i64 1128, !57, i64 1136, !15, i64 1144, !15, i64 1152, !15, i64 1160, !15, i64 1168, !15, i64 1176, !15, i64 1184, !57, i64 1192, !61, i64 1200, !8, i64 1232}
!54 = !{!"rb_global_vm_lock_struct", !15, i64 0, !8, i64 8, !55, i64 48, !15, i64 64, !57, i64 72, !8, i64 80, !8, i64 128, !57, i64 176, !57, i64 180}
!55 = !{!"list_head", !56, i64 0}
!56 = !{!"list_node", !15, i64 0, !15, i64 8}
!57 = !{!"int", !8, i64 0}
!58 = !{!"long long", !8, i64 0}
!59 = !{!"", !8, i64 0}
!60 = !{!"rb_hook_list_struct", !15, i64 0, !57, i64 8, !57, i64 12, !57, i64 16}
!61 = !{!"", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24}
!62 = !{!63, !15, i64 16}
!63 = !{!"rb_execution_context_struct", !15, i64 0, !7, i64 8, !15, i64 16, !15, i64 24, !15, i64 32, !57, i64 40, !57, i64 44, !15, i64 48, !15, i64 56, !15, i64 64, !7, i64 72, !7, i64 80, !15, i64 88, !7, i64 96, !15, i64 104, !15, i64 112, !7, i64 120, !7, i64 128, !8, i64 136, !8, i64 137, !7, i64 144, !64, i64 152}
!64 = !{!"", !15, i64 0, !15, i64 8, !7, i64 16, !8, i64 24}
!65 = !{!66, !15, i64 16}
!66 = !{!"rb_control_frame_struct", !15, i64 0, !15, i64 8, !15, i64 16, !7, i64 24, !15, i64 32, !15, i64 40, !15, i64 48}
!67 = !{!66, !15, i64 32}
!68 = !DILocation(line: 0, scope: !30)
!69 = !{!70, !57, i64 20}
!70 = !{!"rb_sorbet_param_struct", !71, i64 0, !57, i64 4, !57, i64 8, !57, i64 12, !57, i64 16, !57, i64 20, !57, i64 24, !57, i64 28, !15, i64 32, !57, i64 40, !57, i64 44, !57, i64 48, !57, i64 52, !15, i64 56}
!71 = !{!"", !57, i64 0, !57, i64 0, !57, i64 0, !57, i64 0, !57, i64 0, !57, i64 0, !57, i64 0, !57, i64 0, !57, i64 1, !57, i64 1}
!72 = !{!70, !57, i64 24}
!73 = !{!70, !57, i64 28}
!74 = !{!57, !57, i64 0}
!75 = !{!70, !15, i64 32}
!76 = !{!70, !57, i64 40}
!77 = !{!70, !57, i64 44}
!78 = !{!70, !57, i64 8}
!79 = !{!70, !57, i64 12}
!80 = !{!70, !57, i64 48}
!81 = !{!70, !57, i64 52}
!82 = !{!70, !15, i64 56}
!83 = !{!63, !57, i64 40}
!84 = !{!63, !57, i64 44}
!85 = !{!63, !15, i64 56}
!86 = !DILocation(line: 8, column: 44, scope: !30)
!87 = !DILocation(line: 9, column: 40, scope: !30)
!88 = !DILocation(line: 10, column: 36, scope: !30)
!89 = !DILocation(line: 11, column: 32, scope: !30)
!90 = !DILocation(line: 12, column: 28, scope: !30)
!91 = !DILocation(line: 13, column: 24, scope: !30)
!92 = !DILocation(line: 14, column: 20, scope: !30)
!93 = !DILocation(line: 16, column: 44, scope: !30)
!94 = !DILocation(line: 16, column: 51, scope: !30)
!95 = !DILocation(line: 17, column: 40, scope: !30)
!96 = !DILocation(line: 17, column: 47, scope: !30)
!97 = !DILocation(line: 18, column: 36, scope: !30)
!98 = !DILocation(line: 18, column: 43, scope: !30)
!99 = !DILocation(line: 19, column: 32, scope: !30)
!100 = !DILocation(line: 19, column: 39, scope: !30)
!101 = !DILocation(line: 20, column: 28, scope: !30)
!102 = !DILocation(line: 20, column: 35, scope: !30)
!103 = !DILocation(line: 21, column: 24, scope: !30)
!104 = !DILocation(line: 21, column: 31, scope: !30)
!105 = !DILocation(line: 22, column: 20, scope: !30)
!106 = !DILocation(line: 22, column: 27, scope: !30)
!107 = !DILocation(line: 24, column: 44, scope: !30)
!108 = !DILocation(line: 24, column: 51, scope: !30)
!109 = !DILocation(line: 24, column: 58, scope: !30)
!110 = !DILocation(line: 25, column: 40, scope: !30)
!111 = !DILocation(line: 25, column: 47, scope: !30)
!112 = !DILocation(line: 25, column: 54, scope: !30)
!113 = !DILocation(line: 26, column: 36, scope: !30)
!114 = !DILocation(line: 26, column: 43, scope: !30)
!115 = !DILocation(line: 26, column: 50, scope: !30)
!116 = !DILocation(line: 27, column: 32, scope: !30)
!117 = !DILocation(line: 27, column: 39, scope: !30)
!118 = !DILocation(line: 27, column: 46, scope: !30)
!119 = !DILocation(line: 28, column: 28, scope: !30)
!120 = !DILocation(line: 28, column: 35, scope: !30)
!121 = !DILocation(line: 28, column: 42, scope: !30)
!122 = !DILocation(line: 29, column: 24, scope: !30)
!123 = !DILocation(line: 29, column: 31, scope: !30)
!124 = !DILocation(line: 29, column: 38, scope: !30)
!125 = !DILocation(line: 30, column: 20, scope: !30)
!126 = !DILocation(line: 30, column: 27, scope: !30)
!127 = !DILocation(line: 30, column: 34, scope: !30)
