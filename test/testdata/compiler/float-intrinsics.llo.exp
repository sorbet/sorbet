; ModuleID = 'payload'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

%struct.rb_vm_struct = type { i64, %struct.rb_global_vm_lock_struct, %struct.rb_thread_struct*, %struct.rb_thread_struct*, i8*, i64, %union.pthread_mutex_t, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i64, i32, i32, i8, i32, i64, [5 x i64], i64, i64, i64, i64, i64, i64, i64, %struct.st_table*, %struct.st_table*, %struct.anon.3, %struct.rb_hook_list_struct, %struct.st_table*, %struct.rb_postponed_job_struct*, i32, i32, %struct.list_head, %union.pthread_mutex_t, i64, i64, i64, i64, i64, i32, %struct.st_table*, %struct.rb_objspace*, %struct.rb_at_exit_list*, i64*, %struct.st_table*, %struct.rb_builtin_function*, i32, %struct.anon.4, [29 x i16] }
%struct.rb_global_vm_lock_struct = type { %struct.rb_thread_struct*, %union.pthread_mutex_t, %struct.list_head, %struct.rb_thread_struct*, i32, %union.pthread_cond_t, %union.pthread_cond_t, i32, i32 }
%union.pthread_cond_t = type { %struct.anon.2 }
%struct.anon.2 = type { i32, i32, i64, i64, i64, i8*, i32, i32 }
%struct.rb_thread_struct = type { %struct.list_node, i64, %struct.rb_vm_struct*, %struct.rb_execution_context_struct*, i64, %struct.rb_calling_info*, i64, i64, i64, i8, i8, i32, %struct.native_thread_data_struct, i8*, i64, i64, i64, i64, %union.pthread_mutex_t, %struct.rb_unblock_callback, i64, %struct.rb_mutex_struct*, %struct.rb_thread_list_struct*, %union.anon.7, i32, i64, %struct.rb_fiber_struct*, [5 x i8*], i64 }
%struct.list_node = type { %struct.list_node*, %struct.list_node* }
%struct.rb_execution_context_struct = type { i64*, i64, %struct.rb_control_frame_struct*, %struct.rb_vm_tag*, %struct.rb_vm_protect_tag*, i32, i32, %struct.rb_fiber_struct*, %struct.rb_thread_struct*, %struct.st_table*, i64, i64, i64*, i64, %struct.rb_ensure_list*, %struct.rb_trace_arg_struct*, i64, i64, i8, i8, i64, %struct.anon.5 }
%struct.rb_control_frame_struct = type { i64*, i64*, %struct.rb_iseq_struct*, i64, i64*, i8*, i64* }
%struct.rb_iseq_struct = type { i64, i64, %struct.rb_iseq_constant_body*, %union.anon.14 }
%struct.rb_iseq_constant_body = type { i32, i32, i64*, %struct.anon, %struct.rb_iseq_location_struct, %struct.iseq_insn_info, i64*, %struct.iseq_catch_table*, %struct.rb_iseq_struct*, %struct.rb_iseq_struct*, %union.iseq_inline_storage_entry*, %struct.rb_call_data*, %struct.anon.13, i32, i32, i32, i32, i32, i8, i64 }
%struct.anon = type { %struct.anon.0, i32, i32, i32, i32, i32, i32, i32, i64*, %struct.rb_iseq_param_keyword* }
%struct.anon.0 = type { i16, [2 x i8] }
%struct.rb_iseq_param_keyword = type { i32, i32, i32, i32, i64*, i64* }
%struct.rb_iseq_location_struct = type { i64, i64, i64, i64, i32, %struct.rb_code_location_struct }
%struct.rb_code_location_struct = type { %struct.rb_code_position_struct, %struct.rb_code_position_struct }
%struct.rb_code_position_struct = type { i32, i32 }
%struct.iseq_insn_info = type { %struct.iseq_insn_info_entry*, i32*, i32, %struct.succ_index_table* }
%struct.iseq_insn_info_entry = type opaque
%struct.succ_index_table = type opaque
%struct.iseq_catch_table = type opaque
%union.iseq_inline_storage_entry = type { %struct.iseq_inline_cache_entry }
%struct.iseq_inline_cache_entry = type { i64, %struct.rb_cref_struct*, i64 }
%struct.rb_cref_struct = type { i64, i64, i64, %struct.rb_cref_struct*, %struct.rb_scope_visi_struct }
%struct.rb_scope_visi_struct = type { i8, [3 x i8] }
%struct.rb_call_data = type { %struct.rb_call_cache, %struct.rb_call_info }
%struct.rb_call_cache = type { i64, [3 x i64], %struct.rb_callable_method_entry_struct*, i64, i64 (%struct.rb_execution_context_struct*, %struct.rb_control_frame_struct*, %struct.rb_calling_info*, %struct.rb_call_data*)*, %union.anon.12 }
%struct.rb_callable_method_entry_struct = type { i64, i64, %struct.rb_method_definition_struct*, i64, i64 }
%struct.rb_method_definition_struct = type { i64, %union.anon.10, i64, i64 }
%union.anon.10 = type { %struct.rb_method_cfunc_struct }
%struct.rb_method_cfunc_struct = type { i64 (...)*, i64 (i64, i32, i64*, i64 (...)*)*, i32 }
%union.anon.12 = type { i32 }
%struct.rb_call_info = type { i64, i32, i32 }
%struct.anon.13 = type { i64, i64, i64, i64* }
%union.anon.14 = type { %struct.anon.15 }
%struct.anon.15 = type { i64, i32 }
%struct.rb_vm_tag = type { i64, i64, [5 x i8*], %struct.rb_vm_tag*, i32 }
%struct.rb_vm_protect_tag = type { %struct.rb_vm_protect_tag* }
%struct.rb_ensure_list = type { %struct.rb_ensure_list*, %struct.rb_ensure_entry }
%struct.rb_ensure_entry = type { i64, i64 (i64)*, i64 }
%struct.rb_trace_arg_struct = type { i32, %struct.rb_execution_context_struct*, %struct.rb_control_frame_struct*, i64, i64, i64, i64, i64, i32, i32, i64 }
%struct.anon.5 = type { i64*, i64*, i64, [1 x %struct.__jmp_buf_tag] }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.rb_calling_info = type { i64, i64, i32, i32 }
%struct.native_thread_data_struct = type { %struct.list_head, %union.anon.6 }
%union.anon.6 = type { %union.pthread_cond_t }
%struct.rb_unblock_callback = type { void (i8*)*, i8* }
%struct.rb_mutex_struct = type opaque
%struct.rb_thread_list_struct = type { %struct.rb_thread_list_struct*, %struct.rb_thread_struct* }
%union.anon.7 = type { %struct.anon.8 }
%struct.anon.8 = type { i64, i64, i32 }
%struct.rb_fiber_struct = type opaque
%struct.anon.3 = type { [65 x i64] }
%struct.rb_hook_list_struct = type { %struct.rb_event_hook_struct*, i32, i32, i32 }
%struct.rb_event_hook_struct = type opaque
%struct.rb_postponed_job_struct = type opaque
%struct.list_head = type { %struct.list_node }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.rb_objspace = type opaque
%struct.rb_at_exit_list = type { void (%struct.rb_vm_struct*)*, %struct.rb_at_exit_list* }
%struct.st_table = type { i8, i8, i8, i32, %struct.st_hash_type*, i64, i64*, i64, i64, %struct.st_table_entry* }
%struct.st_hash_type = type { i32 (i64, i64)*, i64 (i64)* }
%struct.st_table_entry = type opaque
%struct.rb_builtin_function = type opaque
%struct.anon.4 = type { i64, i64, i64, i64 }
%struct.SorbetLineNumberInfo = type { i32, %struct.iseq_insn_info_entry*, i64* }
%struct.FunctionInlineCache = type { %struct.rb_kwarg_call_data }
%struct.rb_kwarg_call_data = type { %struct.rb_call_cache, %struct.rb_call_info_with_kwarg }
%struct.rb_call_info_with_kwarg = type { %struct.rb_call_info, %struct.rb_call_info_kw_arg* }
%struct.rb_call_info_kw_arg = type { i32, [1 x i64] }
%struct.iseq_inline_iv_cache_entry = type { i64, i64 }

@ruby_current_vm_ptr = external local_unnamed_addr global %struct.rb_vm_struct*, align 8
@ruby_current_execution_context_ptr = external local_unnamed_addr global %struct.rb_execution_context_struct*, align 8
@ruby_vm_global_constant_state = external local_unnamed_addr global i64, align 8
@rb_eRuntimeError = external local_unnamed_addr global i64, align 8
@.str.9 = private unnamed_addr constant [95 x i8] c"sorbet_getBuildSCMRevision: Shared objects compiled by sorbet_llvm must be run by sorbet_ruby.\00", align 1
@.str.10 = private unnamed_addr constant [93 x i8] c"sorbet_getIsReleaseBuild: Shared objects compiled by sorbet_llvm must be run by sorbet_ruby.\00", align 1
@"stackFramePrecomputed_func_Object#4plus" = unnamed_addr global %struct.rb_iseq_struct* null, align 8
@rubyIdPrecomputed_plus = internal unnamed_addr global i64 0, align 8
@str_plus = private unnamed_addr constant [5 x i8] c"plus\00", align 1
@rubyStrFrozen_plus = internal unnamed_addr global i64 0, align 8
@"rubyStrFrozen_test/testdata/compiler/float-intrinsics.rb" = internal unnamed_addr global i64 0, align 8
@"str_test/testdata/compiler/float-intrinsics.rb" = private unnamed_addr constant [43 x i8] c"test/testdata/compiler/float-intrinsics.rb\00", align 1
@iseqEncodedArray = internal global [49 x i64] zeroinitializer
@fileLineNumberInfo = internal global %struct.SorbetLineNumberInfo zeroinitializer
@str_sig = private unnamed_addr constant [4 x i8] c"sig\00", align 1
@str_Float = private unnamed_addr constant [6 x i8] c"Float\00", align 1
@"str_+" = private unnamed_addr constant [2 x i8] c"+\00", align 1
@"str_Return value" = private unnamed_addr constant [13 x i8] c"Return value\00", align 1
@"stackFramePrecomputed_func_Object#5minus" = unnamed_addr global %struct.rb_iseq_struct* null, align 8
@rubyIdPrecomputed_minus = internal unnamed_addr global i64 0, align 8
@str_minus = private unnamed_addr constant [6 x i8] c"minus\00", align 1
@ic_- = internal global %struct.FunctionInlineCache zeroinitializer
@rubyIdPrecomputed_- = internal unnamed_addr global i64 0, align 8
@str_- = private unnamed_addr constant [2 x i8] c"-\00", align 1
@"stackFramePrecomputed_func_Object#2lt" = unnamed_addr global %struct.rb_iseq_struct* null, align 8
@rubyIdPrecomputed_lt = internal unnamed_addr global i64 0, align 8
@str_lt = private unnamed_addr constant [3 x i8] c"lt\00", align 1
@"str_<" = private unnamed_addr constant [2 x i8] c"<\00", align 1
@"str_T::Boolean" = private unnamed_addr constant [11 x i8] c"T::Boolean\00", align 1
@"stackFramePrecomputed_func_Object#3lte" = unnamed_addr global %struct.rb_iseq_struct* null, align 8
@rubyIdPrecomputed_lte = internal unnamed_addr global i64 0, align 8
@str_lte = private unnamed_addr constant [4 x i8] c"lte\00", align 1
@"str_<=" = private unnamed_addr constant [3 x i8] c"<=\00", align 1
@"stackFramePrecomputed_func_<root>.17<static-init>$152" = unnamed_addr global %struct.rb_iseq_struct* null, align 8
@"rubyIdPrecomputed_<top (required)>" = internal unnamed_addr global i64 0, align 8
@"str_<top (required)>" = private unnamed_addr constant [17 x i8] c"<top (required)>\00", align 1
@"rubyIdPrecomputed_<block-call>" = internal unnamed_addr global i64 0, align 8
@"str_<block-call>" = private unnamed_addr constant [13 x i8] c"<block-call>\00", align 1
@"stackFramePrecomputed_func_<root>.17<static-init>$152$block_1" = unnamed_addr global %struct.rb_iseq_struct* null, align 8
@"rubyIdPrecomputed_block in <top (required)>" = internal unnamed_addr global i64 0, align 8
@"str_block in <top (required)>" = private unnamed_addr constant [26 x i8] c"block in <top (required)>\00", align 1
@"rubyStrFrozen_block in <top (required)>" = internal unnamed_addr global i64 0, align 8
@"stackFramePrecomputed_func_<root>.17<static-init>$152$block_2" = unnamed_addr global %struct.rb_iseq_struct* null, align 8
@"stackFramePrecomputed_func_<root>.17<static-init>$152$block_3" = unnamed_addr global %struct.rb_iseq_struct* null, align 8
@"stackFramePrecomputed_func_<root>.17<static-init>$152$block_4" = unnamed_addr global %struct.rb_iseq_struct* null, align 8
@ic_sig = internal global %struct.FunctionInlineCache zeroinitializer
@rubyIdPrecomputed_sig = internal unnamed_addr global i64 0, align 8
@rubyIdPrecomputed_x = internal unnamed_addr global i64 0, align 8
@str_x = private unnamed_addr constant [2 x i8] c"x\00", align 1
@rubyIdPrecomputed_y = internal unnamed_addr global i64 0, align 8
@str_y = private unnamed_addr constant [2 x i8] c"y\00", align 1
@ic_untyped = internal global %struct.FunctionInlineCache zeroinitializer
@rubyIdPrecomputed_untyped = internal unnamed_addr global i64 0, align 8
@str_untyped = private unnamed_addr constant [8 x i8] c"untyped\00", align 1
@str_T = private unnamed_addr constant [2 x i8] c"T\00", align 1
@ic_params = internal global %struct.FunctionInlineCache zeroinitializer
@rubyIdPrecomputed_params = internal unnamed_addr global i64 0, align 8
@str_params = private unnamed_addr constant [7 x i8] c"params\00", align 1
@ic_untyped.1 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_returns = internal global %struct.FunctionInlineCache zeroinitializer
@rubyIdPrecomputed_returns = internal unnamed_addr global i64 0, align 8
@str_returns = private unnamed_addr constant [8 x i8] c"returns\00", align 1
@ic_sig.2 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_untyped.3 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_params.4 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_untyped.5 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_returns.6 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_sig.7 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_untyped.8 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_params.9 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_returns.10 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_sig.11 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_untyped.12 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_params.13 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_returns.14 = internal global %struct.FunctionInlineCache zeroinitializer
@"str_T::Sig" = private unnamed_addr constant [7 x i8] c"T::Sig\00", align 1
@ic_extend = internal global %struct.FunctionInlineCache zeroinitializer
@rubyIdPrecomputed_extend = internal unnamed_addr global i64 0, align 8
@str_extend = private unnamed_addr constant [7 x i8] c"extend\00", align 1
@rubyIdPrecomputed_normal = internal unnamed_addr global i64 0, align 8
@str_normal = private unnamed_addr constant [7 x i8] c"normal\00", align 1
@ic_plus = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p = internal global %struct.FunctionInlineCache zeroinitializer
@rubyIdPrecomputed_p = internal unnamed_addr global i64 0, align 8
@str_p = private unnamed_addr constant [2 x i8] c"p\00", align 1
@ic_minus = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.15 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_lt = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.16 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_lt.17 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.18 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_lte = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.19 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_lte.20 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.21 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_lte.22 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.23 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_plus.24 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.25 = internal global %struct.FunctionInlineCache zeroinitializer
@rubyStrFrozen_8.9 = internal unnamed_addr global i64 0, align 8
@str_8.9 = private unnamed_addr constant [4 x i8] c"8.9\00", align 1
@ic_Rational = internal global %struct.FunctionInlineCache zeroinitializer
@rubyIdPrecomputed_Rational = internal unnamed_addr global i64 0, align 8
@str_Rational = private unnamed_addr constant [9 x i8] c"Rational\00", align 1
@ic_plus.26 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.27 = internal global %struct.FunctionInlineCache zeroinitializer
@rubyStrFrozen_5 = internal unnamed_addr global i64 0, align 8
@str_5 = private unnamed_addr constant [2 x i8] c"5\00", align 1
@ic_Complex = internal global %struct.FunctionInlineCache zeroinitializer
@rubyIdPrecomputed_Complex = internal unnamed_addr global i64 0, align 8
@str_Complex = private unnamed_addr constant [8 x i8] c"Complex\00", align 1
@ic_plus.28 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.29 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_minus.30 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.31 = internal global %struct.FunctionInlineCache zeroinitializer
@rubyStrFrozen_15.4 = internal unnamed_addr global i64 0, align 8
@str_15.4 = private unnamed_addr constant [5 x i8] c"15.4\00", align 1
@ic_Rational.32 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_minus.33 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.34 = internal global %struct.FunctionInlineCache zeroinitializer
@rubyStrFrozen_18 = internal unnamed_addr global i64 0, align 8
@str_18 = private unnamed_addr constant [3 x i8] c"18\00", align 1
@ic_Complex.35 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_minus.36 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.37 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_lt.38 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.39 = internal global %struct.FunctionInlineCache zeroinitializer
@rubyStrFrozen_25.4 = internal unnamed_addr global i64 0, align 8
@str_25.4 = private unnamed_addr constant [5 x i8] c"25.4\00", align 1
@ic_Rational.40 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_lt.41 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.42 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_lte.43 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.44 = internal global %struct.FunctionInlineCache zeroinitializer
@rubyStrFrozen_5.923 = internal unnamed_addr global i64 0, align 8
@str_5.923 = private unnamed_addr constant [6 x i8] c"5.923\00", align 1
@ic_Rational.45 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_lte.46 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.47 = internal global %struct.FunctionInlineCache zeroinitializer
@"guard_epoch_T::Sig" = linkonce local_unnamed_addr global i64 0
@"guarded_const_T::Sig" = linkonce local_unnamed_addr global i64 0
@rb_cObject = external local_unnamed_addr constant i64
@rb_mKernel = external local_unnamed_addr constant i64
@guard_epoch_T = linkonce local_unnamed_addr global i64 0
@guarded_const_T = linkonce local_unnamed_addr global i64 0
@rb_cFloat = external local_unnamed_addr constant i64
@"guard_epoch_T::Boolean" = linkonce local_unnamed_addr global i64 0
@"guarded_const_T::Boolean" = linkonce local_unnamed_addr global i64 0

declare i64 @rb_float_plus(i64, i64) local_unnamed_addr #0

declare i64 @sorbet_flo_lt(i64, i64) local_unnamed_addr #0

declare i64 @sorbet_flo_le(i64, i64) local_unnamed_addr #0

declare i64 @rb_id2sym(i64) local_unnamed_addr #0

; Function Attrs: cold noreturn
declare void @sorbet_cast_failure(i64, i8*, i8*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @sorbet_raiseArity(i32, i32, i32) local_unnamed_addr #2

declare %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64, i64, i64, i64, %struct.rb_iseq_struct*, i32, i32, %struct.SorbetLineNumberInfo*, i64*, i32, i32) local_unnamed_addr #0

declare void @sorbet_initLineNumberInfo(%struct.SorbetLineNumberInfo*, i64*, i32) local_unnamed_addr #0

declare i64 @sorbet_getConstant(i8*, i64) local_unnamed_addr #0

declare i64 @sorbet_readRealpath() local_unnamed_addr #0

declare void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache*, i64, i32, i32, i32, i64*) local_unnamed_addr #0

declare i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache*, i64) local_unnamed_addr #0

declare void @sorbet_setMethodStackFrame(%struct.rb_execution_context_struct*, %struct.rb_control_frame_struct*, %struct.rb_iseq_struct*) local_unnamed_addr #0

declare void @sorbet_vm_register_sig(i64, i64, i64, i64, i64 (i64, i64, i32, i64*, i64)*) local_unnamed_addr #0

declare void @sorbet_vm_define_method(i64, i8*, i64 (i32, i64*, i64, %struct.rb_control_frame_struct*)*, i8*, %struct.rb_iseq_struct*, i1 zeroext) local_unnamed_addr #0

declare i64 @sorbet_vm_fstring_new(i8*, i64) local_unnamed_addr #0

declare i64 @rb_intern2(i8*, i64) local_unnamed_addr #0

declare void @rb_gc_register_mark_object(i64) local_unnamed_addr #0

; Function Attrs: noreturn
declare void @rb_raise(i64, i8*, ...) local_unnamed_addr #2

declare i32 @rb_threadptr_execute_interrupts(%struct.rb_thread_struct*, i32) local_unnamed_addr #0

; Function Attrs: allocsize(0,1)
declare noalias nonnull i8* @ruby_xcalloc(i64, i64) local_unnamed_addr #3

; Function Attrs: allocsize(0,1)
declare noalias nonnull i8* @ruby_xmalloc2(i64, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define weak i32 @sorbet_getIsReleaseBuild() local_unnamed_addr #5 {
  %1 = load i64, i64* @rb_eRuntimeError, align 8, !tbaa !6
  tail call void (i64, i8*, ...) @rb_raise(i64 %1, i8* noundef getelementptr inbounds ([93 x i8], [93 x i8]* @.str.10, i64 0, i64 0)) #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define weak i8* @sorbet_getBuildSCMRevision() local_unnamed_addr #5 {
  %1 = load i64, i64* @rb_eRuntimeError, align 8, !tbaa !6
  tail call void (i64, i8*, ...) @rb_raise(i64 %1, i8* noundef getelementptr inbounds ([95 x i8], [95 x i8]* @.str.9, i64 0, i64 0)) #12
  unreachable
}

; Function Attrs: nounwind sspreq uwtable
define i64 @"func_Object#4plus"(i32 %argc, i64* nocapture readonly %argArray, i64 %selfRaw, %struct.rb_control_frame_struct* nocapture nonnull writeonly align 8 dereferenceable(8) %cfp) #6 !dbg !10 {
functionEntryInitializers:
  %callArgs = alloca [2 x i64], align 8
  %0 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 0
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 8), i64** %0, align 8, !tbaa !14
  %tooManyArgs = icmp ugt i32 %argc, 2, !dbg !16
  %tooFewArgs = icmp ult i32 %argc, 2, !dbg !16
  %or.cond = or i1 %tooManyArgs, %tooFewArgs, !dbg !16
  br i1 %or.cond, label %argCountFailBlock, label %fillRequiredArgs, !dbg !16, !prof !17

argCountFailBlock:                                ; preds = %functionEntryInitializers
  tail call void @sorbet_raiseArity(i32 %argc, i32 noundef 2, i32 noundef 2) #13, !dbg !16
  unreachable, !dbg !16

fillRequiredArgs:                                 ; preds = %functionEntryInitializers
  %rawArg_x = load i64, i64* %argArray, align 8, !dbg !16
  %1 = getelementptr i64, i64* %argArray, i32 1, !dbg !16
  %rawArg_y = load i64, i64* %1, align 8, !dbg !16
  %2 = and i64 %rawArg_x, 3, !dbg !18
  %3 = icmp eq i64 %2, 2, !dbg !18
  br i1 %3, label %typeTestSuccess7, label %4, !dbg !18

4:                                                ; preds = %fillRequiredArgs
  %5 = and i64 %rawArg_x, 7, !dbg !18
  %6 = icmp ne i64 %5, 0, !dbg !18
  %7 = and i64 %rawArg_x, -9, !dbg !18
  %8 = icmp eq i64 %7, 0, !dbg !18
  %9 = or i1 %6, %8, !dbg !18
  br i1 %9, label %codeRepl22, label %sorbet_isa_Float.exit, !dbg !18

sorbet_isa_Float.exit:                            ; preds = %4
  %10 = inttoptr i64 %rawArg_x to %struct.iseq_inline_iv_cache_entry*, !dbg !18
  %11 = getelementptr inbounds %struct.iseq_inline_iv_cache_entry, %struct.iseq_inline_iv_cache_entry* %10, i64 0, i32 0, !dbg !18
  %12 = load i64, i64* %11, align 8, !dbg !18, !tbaa !19
  %13 = and i64 %12, 31, !dbg !18
  %14 = icmp eq i64 %13, 4, !dbg !18
  br i1 %14, label %typeTestSuccess7, label %codeRepl22, !dbg !18, !prof !21

codeRepl22:                                       ; preds = %4, %sorbet_isa_Float.exit
  tail call fastcc void @"func_Object#2lt.cold.3"(i64 %rawArg_x) #14, !dbg !18
  unreachable

typeTestSuccess7:                                 ; preds = %fillRequiredArgs, %sorbet_isa_Float.exit
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 9), i64** %0, align 8, !dbg !22, !tbaa !14
  %callArgs0Addr = getelementptr [2 x i64], [2 x i64]* %callArgs, i32 0, i64 0, !dbg !23
  store i64 %rawArg_y, i64* %callArgs0Addr, align 8, !dbg !23
  %15 = getelementptr [2 x i64], [2 x i64]* %callArgs, i64 0, i64 0, !dbg !23
  tail call void @llvm.experimental.noalias.scope.decl(metadata !24), !dbg !23
  %16 = load i64, i64* %15, align 8, !dbg !23, !tbaa !6, !alias.scope !24
  %17 = tail call i64 @rb_float_plus(i64 %rawArg_x, i64 %16) #15, !dbg !23, !noalias !24
  %18 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !23, !tbaa !14
  %19 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %18, i64 0, i32 5, !dbg !23
  %20 = load i32, i32* %19, align 8, !dbg !23, !tbaa !27
  %21 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %18, i64 0, i32 6, !dbg !23
  %22 = load i32, i32* %21, align 4, !dbg !23, !tbaa !31
  %23 = xor i32 %22, -1, !dbg !23
  %24 = and i32 %23, %20, !dbg !23
  %25 = icmp eq i32 %24, 0, !dbg !23
  br i1 %25, label %typeTestSuccess14, label %26, !dbg !23, !prof !21

26:                                               ; preds = %typeTestSuccess7
  %27 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %18, i64 0, i32 8, !dbg !23
  %28 = load %struct.rb_thread_struct*, %struct.rb_thread_struct** %27, align 8, !dbg !23, !tbaa !32
  %29 = tail call i32 @rb_threadptr_execute_interrupts(%struct.rb_thread_struct* %28, i32 noundef 0) #15, !dbg !23
  br label %typeTestSuccess14, !dbg !23

typeTestSuccess14:                                ; preds = %26, %typeTestSuccess7
  ret i64 %17
}

; Function Attrs: nounwind sspreq uwtable
define i64 @"func_Object#5minus"(i32 %argc, i64* nocapture readonly %argArray, i64 %selfRaw, %struct.rb_control_frame_struct* nonnull align 8 dereferenceable(8) %cfp) #6 !dbg !33 {
functionEntryInitializers:
  %0 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 0
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 13), i64** %0, align 8, !tbaa !14
  %tooManyArgs = icmp ugt i32 %argc, 2, !dbg !34
  %tooFewArgs = icmp ult i32 %argc, 2, !dbg !34
  %or.cond = or i1 %tooManyArgs, %tooFewArgs, !dbg !34
  br i1 %or.cond, label %argCountFailBlock, label %fillRequiredArgs, !dbg !34, !prof !17

argCountFailBlock:                                ; preds = %functionEntryInitializers
  tail call void @sorbet_raiseArity(i32 %argc, i32 noundef 2, i32 noundef 2) #13, !dbg !34
  unreachable, !dbg !34

fillRequiredArgs:                                 ; preds = %functionEntryInitializers
  %1 = getelementptr i64, i64* %argArray, i32 1, !dbg !34
  %2 = bitcast i64* %argArray to <2 x i64>*, !dbg !34
  %3 = load <2 x i64>, <2 x i64>* %2, align 8, !dbg !34
  %4 = extractelement <2 x i64> %3, i32 0, !dbg !35
  %5 = and i64 %4, 3, !dbg !35
  %6 = icmp eq i64 %5, 2, !dbg !35
  br i1 %6, label %typeTestSuccess7, label %7, !dbg !35

7:                                                ; preds = %fillRequiredArgs
  %8 = and i64 %4, 7, !dbg !35
  %9 = icmp ne i64 %8, 0, !dbg !35
  %10 = and i64 %4, -9, !dbg !35
  %11 = icmp eq i64 %10, 0, !dbg !35
  %12 = or i1 %9, %11, !dbg !35
  br i1 %12, label %codeRepl20, label %sorbet_isa_Float.exit, !dbg !35

sorbet_isa_Float.exit:                            ; preds = %7
  %13 = inttoptr i64 %4 to %struct.iseq_inline_iv_cache_entry*, !dbg !35
  %14 = getelementptr inbounds %struct.iseq_inline_iv_cache_entry, %struct.iseq_inline_iv_cache_entry* %13, i64 0, i32 0, !dbg !35
  %15 = load i64, i64* %14, align 8, !dbg !35, !tbaa !19
  %16 = and i64 %15, 31, !dbg !35
  %17 = icmp eq i64 %16, 4, !dbg !35
  br i1 %17, label %typeTestSuccess7, label %codeRepl20, !dbg !35, !prof !21

codeRepl20:                                       ; preds = %7, %sorbet_isa_Float.exit
  tail call fastcc void @"func_Object#2lt.cold.3"(i64 %4) #14, !dbg !35
  unreachable

typeTestSuccess7:                                 ; preds = %fillRequiredArgs, %sorbet_isa_Float.exit
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 14), i64** %0, align 8, !dbg !36, !tbaa !14
  %18 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !37
  %19 = load i64*, i64** %18, align 8, !dbg !37
  %20 = getelementptr inbounds i64, i64* %19, i64 1, !dbg !37
  %21 = bitcast i64* %19 to <2 x i64>*, !dbg !37
  store <2 x i64> %3, <2 x i64>* %21, align 8, !dbg !37, !tbaa !6
  %22 = getelementptr inbounds i64, i64* %20, i64 1, !dbg !37
  store i64* %22, i64** %18, align 8, !dbg !37
  %send = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_-, i64 0), !dbg !37
  ret i64 %send
}

; Function Attrs: nounwind sspreq uwtable
define i64 @"func_Object#2lt"(i32 %argc, i64* nocapture readonly %argArray, i64 %selfRaw, %struct.rb_control_frame_struct* nocapture nonnull writeonly align 8 dereferenceable(8) %cfp) #6 !dbg !38 {
functionEntryInitializers:
  %callArgs = alloca [2 x i64], align 8
  %0 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 0
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 18), i64** %0, align 8, !tbaa !14
  %tooManyArgs = icmp ugt i32 %argc, 2, !dbg !39
  %tooFewArgs = icmp ult i32 %argc, 2, !dbg !39
  %or.cond = or i1 %tooManyArgs, %tooFewArgs, !dbg !39
  br i1 %or.cond, label %argCountFailBlock, label %fillRequiredArgs, !dbg !39, !prof !17

argCountFailBlock:                                ; preds = %functionEntryInitializers
  tail call void @sorbet_raiseArity(i32 %argc, i32 noundef 2, i32 noundef 2) #13, !dbg !39
  unreachable, !dbg !39

fillRequiredArgs:                                 ; preds = %functionEntryInitializers
  %rawArg_x = load i64, i64* %argArray, align 8, !dbg !39
  %1 = getelementptr i64, i64* %argArray, i32 1, !dbg !39
  %rawArg_y = load i64, i64* %1, align 8, !dbg !39
  %2 = and i64 %rawArg_x, 3, !dbg !40
  %3 = icmp eq i64 %2, 2, !dbg !40
  br i1 %3, label %typeTestSuccess7, label %4, !dbg !40

4:                                                ; preds = %fillRequiredArgs
  %5 = and i64 %rawArg_x, 7, !dbg !40
  %6 = icmp ne i64 %5, 0, !dbg !40
  %7 = and i64 %rawArg_x, -9, !dbg !40
  %8 = icmp eq i64 %7, 0, !dbg !40
  %9 = or i1 %6, %8, !dbg !40
  br i1 %9, label %codeRepl22, label %sorbet_isa_Float.exit, !dbg !40

sorbet_isa_Float.exit:                            ; preds = %4
  %10 = inttoptr i64 %rawArg_x to %struct.iseq_inline_iv_cache_entry*, !dbg !40
  %11 = getelementptr inbounds %struct.iseq_inline_iv_cache_entry, %struct.iseq_inline_iv_cache_entry* %10, i64 0, i32 0, !dbg !40
  %12 = load i64, i64* %11, align 8, !dbg !40, !tbaa !19
  %13 = and i64 %12, 31, !dbg !40
  %14 = icmp eq i64 %13, 4, !dbg !40
  br i1 %14, label %typeTestSuccess7, label %codeRepl22, !dbg !40, !prof !21

codeRepl22:                                       ; preds = %4, %sorbet_isa_Float.exit
  tail call fastcc void @"func_Object#2lt.cold.3"(i64 %rawArg_x) #14, !dbg !40
  unreachable

typeTestSuccess7:                                 ; preds = %fillRequiredArgs, %sorbet_isa_Float.exit
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 19), i64** %0, align 8, !dbg !41, !tbaa !14
  %callArgs0Addr = getelementptr [2 x i64], [2 x i64]* %callArgs, i32 0, i64 0, !dbg !42
  store i64 %rawArg_y, i64* %callArgs0Addr, align 8, !dbg !42
  %15 = getelementptr [2 x i64], [2 x i64]* %callArgs, i64 0, i64 0, !dbg !42
  tail call void @llvm.experimental.noalias.scope.decl(metadata !43), !dbg !42
  %16 = load i64, i64* %15, align 8, !dbg !42, !tbaa !6, !alias.scope !43
  %17 = tail call i64 @sorbet_flo_lt(i64 %rawArg_x, i64 %16) #15, !dbg !42, !noalias !43
  %18 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !42, !tbaa !14
  %19 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %18, i64 0, i32 5, !dbg !42
  %20 = load i32, i32* %19, align 8, !dbg !42, !tbaa !27
  %21 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %18, i64 0, i32 6, !dbg !42
  %22 = load i32, i32* %21, align 4, !dbg !42, !tbaa !31
  %23 = xor i32 %22, -1, !dbg !42
  %24 = and i32 %23, %20, !dbg !42
  %25 = icmp eq i32 %24, 0, !dbg !42
  br i1 %25, label %rb_vm_check_ints.exit, label %26, !dbg !42, !prof !21

26:                                               ; preds = %typeTestSuccess7
  %27 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %18, i64 0, i32 8, !dbg !42
  %28 = load %struct.rb_thread_struct*, %struct.rb_thread_struct** %27, align 8, !dbg !42, !tbaa !32
  %29 = tail call i32 @rb_threadptr_execute_interrupts(%struct.rb_thread_struct* %28, i32 noundef 0) #15, !dbg !42
  br label %rb_vm_check_ints.exit, !dbg !42

rb_vm_check_ints.exit:                            ; preds = %typeTestSuccess7, %26
  switch i64 %17, label %codeRepl [
    i64 20, label %typeTestSuccess14
    i64 0, label %typeTestSuccess14
  ], !prof !46

typeTestSuccess14:                                ; preds = %rb_vm_check_ints.exit, %rb_vm_check_ints.exit
  ret i64 %17

codeRepl:                                         ; preds = %rb_vm_check_ints.exit
  tail call fastcc void @"func_Object#2lt.cold.1"(i64 %17) #14, !dbg !47
  unreachable
}

; Function Attrs: nounwind sspreq uwtable
define i64 @"func_Object#3lte"(i32 %argc, i64* nocapture readonly %argArray, i64 %selfRaw, %struct.rb_control_frame_struct* nocapture nonnull writeonly align 8 dereferenceable(8) %cfp) #6 !dbg !48 {
functionEntryInitializers:
  %callArgs = alloca [2 x i64], align 8
  %0 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 0
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 23), i64** %0, align 8, !tbaa !14
  %tooManyArgs = icmp ugt i32 %argc, 2, !dbg !49
  %tooFewArgs = icmp ult i32 %argc, 2, !dbg !49
  %or.cond = or i1 %tooManyArgs, %tooFewArgs, !dbg !49
  br i1 %or.cond, label %argCountFailBlock, label %fillRequiredArgs, !dbg !49, !prof !17

argCountFailBlock:                                ; preds = %functionEntryInitializers
  tail call void @sorbet_raiseArity(i32 %argc, i32 noundef 2, i32 noundef 2) #13, !dbg !49
  unreachable, !dbg !49

fillRequiredArgs:                                 ; preds = %functionEntryInitializers
  %rawArg_x = load i64, i64* %argArray, align 8, !dbg !49
  %1 = getelementptr i64, i64* %argArray, i32 1, !dbg !49
  %rawArg_y = load i64, i64* %1, align 8, !dbg !49
  %2 = and i64 %rawArg_x, 3, !dbg !50
  %3 = icmp eq i64 %2, 2, !dbg !50
  br i1 %3, label %typeTestSuccess7, label %4, !dbg !50

4:                                                ; preds = %fillRequiredArgs
  %5 = and i64 %rawArg_x, 7, !dbg !50
  %6 = icmp ne i64 %5, 0, !dbg !50
  %7 = and i64 %rawArg_x, -9, !dbg !50
  %8 = icmp eq i64 %7, 0, !dbg !50
  %9 = or i1 %6, %8, !dbg !50
  br i1 %9, label %codeRepl22, label %sorbet_isa_Float.exit, !dbg !50

sorbet_isa_Float.exit:                            ; preds = %4
  %10 = inttoptr i64 %rawArg_x to %struct.iseq_inline_iv_cache_entry*, !dbg !50
  %11 = getelementptr inbounds %struct.iseq_inline_iv_cache_entry, %struct.iseq_inline_iv_cache_entry* %10, i64 0, i32 0, !dbg !50
  %12 = load i64, i64* %11, align 8, !dbg !50, !tbaa !19
  %13 = and i64 %12, 31, !dbg !50
  %14 = icmp eq i64 %13, 4, !dbg !50
  br i1 %14, label %typeTestSuccess7, label %codeRepl22, !dbg !50, !prof !21

codeRepl22:                                       ; preds = %4, %sorbet_isa_Float.exit
  tail call fastcc void @"func_Object#2lt.cold.3"(i64 %rawArg_x) #14, !dbg !50
  unreachable

typeTestSuccess7:                                 ; preds = %fillRequiredArgs, %sorbet_isa_Float.exit
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 24), i64** %0, align 8, !dbg !51, !tbaa !14
  %callArgs0Addr = getelementptr [2 x i64], [2 x i64]* %callArgs, i32 0, i64 0, !dbg !52
  store i64 %rawArg_y, i64* %callArgs0Addr, align 8, !dbg !52
  %15 = getelementptr [2 x i64], [2 x i64]* %callArgs, i64 0, i64 0, !dbg !52
  tail call void @llvm.experimental.noalias.scope.decl(metadata !53), !dbg !52
  %16 = load i64, i64* %15, align 8, !dbg !52, !tbaa !6, !alias.scope !53
  %17 = tail call i64 @sorbet_flo_le(i64 %rawArg_x, i64 %16) #15, !dbg !52, !noalias !53
  %18 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !52, !tbaa !14
  %19 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %18, i64 0, i32 5, !dbg !52
  %20 = load i32, i32* %19, align 8, !dbg !52, !tbaa !27
  %21 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %18, i64 0, i32 6, !dbg !52
  %22 = load i32, i32* %21, align 4, !dbg !52, !tbaa !31
  %23 = xor i32 %22, -1, !dbg !52
  %24 = and i32 %23, %20, !dbg !52
  %25 = icmp eq i32 %24, 0, !dbg !52
  br i1 %25, label %rb_vm_check_ints.exit, label %26, !dbg !52, !prof !21

26:                                               ; preds = %typeTestSuccess7
  %27 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %18, i64 0, i32 8, !dbg !52
  %28 = load %struct.rb_thread_struct*, %struct.rb_thread_struct** %27, align 8, !dbg !52, !tbaa !32
  %29 = tail call i32 @rb_threadptr_execute_interrupts(%struct.rb_thread_struct* %28, i32 noundef 0) #15, !dbg !52
  br label %rb_vm_check_ints.exit, !dbg !52

rb_vm_check_ints.exit:                            ; preds = %typeTestSuccess7, %26
  switch i64 %17, label %codeRepl [
    i64 20, label %typeTestSuccess14
    i64 0, label %typeTestSuccess14
  ], !prof !46

typeTestSuccess14:                                ; preds = %rb_vm_check_ints.exit, %rb_vm_check_ints.exit
  ret i64 %17

codeRepl:                                         ; preds = %rb_vm_check_ints.exit
  tail call fastcc void @"func_Object#2lt.cold.1"(i64 %17) #14, !dbg !56
  unreachable
}

; Function Attrs: nounwind sspreq uwtable
define internal fastcc void @"func_<root>.17<static-init>$152"(i64 %selfRaw, %struct.rb_control_frame_struct* %cfp) unnamed_addr #6 !dbg !57 {
fastSymCallIntrinsic_ResolvedSig_sig:
  %stackFrame = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.17<static-init>$152", align 8
  %0 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !14
  %1 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %0, i64 0, i32 2
  %2 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %1, align 8, !tbaa !58
  %3 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 2
  store %struct.rb_iseq_struct* %stackFrame, %struct.rb_iseq_struct** %3, align 8, !tbaa !59
  %4 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 4
  %5 = load i64*, i64** %4, align 8, !tbaa !61
  %6 = load i64, i64* %5, align 8, !tbaa !6
  %7 = and i64 %6, -33
  store i64 %7, i64* %5, align 8, !tbaa !6
  tail call void @sorbet_setMethodStackFrame(%struct.rb_execution_context_struct* %0, %struct.rb_control_frame_struct* %2, %struct.rb_iseq_struct* %stackFrame) #15
  %8 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 0
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 7), i64** %8, align 8, !dbg !62, !tbaa !14
  %rubyId_plus = load i64, i64* @rubyIdPrecomputed_plus, align 8, !dbg !63
  %rawSym = tail call i64 @rb_id2sym(i64 %rubyId_plus), !dbg !63
  tail call void @sorbet_vm_register_sig(i64 noundef 0, i64 %rawSym, i64 %selfRaw, i64 noundef 8, i64 (i64, i64, i32, i64*, i64)* noundef @"func_<root>.17<static-init>$152$block_1"), !dbg !63
  %9 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !63, !tbaa !14
  %10 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %9, i64 0, i32 5, !dbg !63
  %11 = load i32, i32* %10, align 8, !dbg !63, !tbaa !27
  %12 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %9, i64 0, i32 6, !dbg !63
  %13 = load i32, i32* %12, align 4, !dbg !63, !tbaa !31
  %14 = xor i32 %13, -1, !dbg !63
  %15 = and i32 %14, %11, !dbg !63
  %16 = icmp eq i32 %15, 0, !dbg !63
  br i1 %16, label %fastSymCallIntrinsic_ResolvedSig_sig267, label %17, !dbg !63, !prof !21

17:                                               ; preds = %fastSymCallIntrinsic_ResolvedSig_sig
  %18 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %9, i64 0, i32 8, !dbg !63
  %19 = load %struct.rb_thread_struct*, %struct.rb_thread_struct** %18, align 8, !dbg !63, !tbaa !32
  %20 = tail call i32 @rb_threadptr_execute_interrupts(%struct.rb_thread_struct* %19, i32 noundef 0) #15, !dbg !63
  br label %fastSymCallIntrinsic_ResolvedSig_sig267, !dbg !63

fastSymCallIntrinsic_ResolvedSig_sig267:          ; preds = %fastSymCallIntrinsic_ResolvedSig_sig, %17
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 12), i64** %8, align 8, !dbg !63, !tbaa !14
  %rubyId_minus = load i64, i64* @rubyIdPrecomputed_minus, align 8, !dbg !64
  %rawSym261 = tail call i64 @rb_id2sym(i64 %rubyId_minus), !dbg !64
  tail call void @sorbet_vm_register_sig(i64 noundef 0, i64 %rawSym261, i64 %selfRaw, i64 noundef 8, i64 (i64, i64, i32, i64*, i64)* noundef @"func_<root>.17<static-init>$152$block_2"), !dbg !64
  %21 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !64, !tbaa !14
  %22 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %21, i64 0, i32 5, !dbg !64
  %23 = load i32, i32* %22, align 8, !dbg !64, !tbaa !27
  %24 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %21, i64 0, i32 6, !dbg !64
  %25 = load i32, i32* %24, align 4, !dbg !64, !tbaa !31
  %26 = xor i32 %25, -1, !dbg !64
  %27 = and i32 %26, %23, !dbg !64
  %28 = icmp eq i32 %27, 0, !dbg !64
  br i1 %28, label %fastSymCallIntrinsic_ResolvedSig_sig286, label %29, !dbg !64, !prof !21

29:                                               ; preds = %fastSymCallIntrinsic_ResolvedSig_sig267
  %30 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %21, i64 0, i32 8, !dbg !64
  %31 = load %struct.rb_thread_struct*, %struct.rb_thread_struct** %30, align 8, !dbg !64, !tbaa !32
  %32 = tail call i32 @rb_threadptr_execute_interrupts(%struct.rb_thread_struct* %31, i32 noundef 0) #15, !dbg !64
  br label %fastSymCallIntrinsic_ResolvedSig_sig286, !dbg !64

fastSymCallIntrinsic_ResolvedSig_sig286:          ; preds = %fastSymCallIntrinsic_ResolvedSig_sig267, %29
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 17), i64** %8, align 8, !dbg !64, !tbaa !14
  %rubyId_lt = load i64, i64* @rubyIdPrecomputed_lt, align 8, !dbg !65
  %rawSym280 = tail call i64 @rb_id2sym(i64 %rubyId_lt), !dbg !65
  tail call void @sorbet_vm_register_sig(i64 noundef 0, i64 %rawSym280, i64 %selfRaw, i64 noundef 8, i64 (i64, i64, i32, i64*, i64)* noundef @"func_<root>.17<static-init>$152$block_3"), !dbg !65
  %33 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !65, !tbaa !14
  %34 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %33, i64 0, i32 5, !dbg !65
  %35 = load i32, i32* %34, align 8, !dbg !65, !tbaa !27
  %36 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %33, i64 0, i32 6, !dbg !65
  %37 = load i32, i32* %36, align 4, !dbg !65, !tbaa !31
  %38 = xor i32 %37, -1, !dbg !65
  %39 = and i32 %38, %35, !dbg !65
  %40 = icmp eq i32 %39, 0, !dbg !65
  br i1 %40, label %fastSymCallIntrinsic_ResolvedSig_sig305, label %41, !dbg !65, !prof !21

41:                                               ; preds = %fastSymCallIntrinsic_ResolvedSig_sig286
  %42 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %33, i64 0, i32 8, !dbg !65
  %43 = load %struct.rb_thread_struct*, %struct.rb_thread_struct** %42, align 8, !dbg !65, !tbaa !32
  %44 = tail call i32 @rb_threadptr_execute_interrupts(%struct.rb_thread_struct* %43, i32 noundef 0) #15, !dbg !65
  br label %fastSymCallIntrinsic_ResolvedSig_sig305, !dbg !65

afterSend302:                                     ; preds = %368, %fastSymCallIntrinsic_ResolvedSig_sig305
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 5), i64** %8, align 8, !dbg !66, !tbaa !14
  %45 = load i64, i64* @"guard_epoch_T::Sig", align 8, !dbg !67
  %46 = load i64, i64* @ruby_vm_global_constant_state, align 8, !dbg !67, !tbaa !68
  %needTakeSlowPath = icmp ne i64 %45, %46, !dbg !67
  br i1 %needTakeSlowPath, label %47, label %48, !dbg !67, !prof !70

47:                                               ; preds = %afterSend302
  tail call void @"const_recompute_T::Sig"(), !dbg !67
  br label %48, !dbg !67

48:                                               ; preds = %afterSend302, %47
  %49 = load i64, i64* @"guarded_const_T::Sig", align 8, !dbg !67
  %50 = load i64, i64* @"guard_epoch_T::Sig", align 8, !dbg !67
  %51 = load i64, i64* @ruby_vm_global_constant_state, align 8, !dbg !67, !tbaa !68
  %guardUpdated = icmp eq i64 %50, %51, !dbg !67
  tail call void @llvm.assume(i1 %guardUpdated), !dbg !67
  %52 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !67
  %53 = load i64*, i64** %52, align 8, !dbg !67
  store i64 %selfRaw, i64* %53, align 8, !dbg !67, !tbaa !6
  %54 = getelementptr inbounds i64, i64* %53, i64 1, !dbg !67
  store i64 %49, i64* %54, align 8, !dbg !67, !tbaa !6
  %55 = getelementptr inbounds i64, i64* %54, i64 1, !dbg !67
  store i64* %55, i64** %52, align 8, !dbg !67
  %send = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_extend, i64 0), !dbg !67
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 8), i64** %8, align 8, !dbg !67, !tbaa !14
  %rubyId_plus321 = load i64, i64* @rubyIdPrecomputed_plus, align 8, !dbg !71
  %rawSym322 = tail call i64 @rb_id2sym(i64 %rubyId_plus321), !dbg !71
  %rubyId_normal = load i64, i64* @rubyIdPrecomputed_normal, align 8, !dbg !71
  %rawSym323 = tail call i64 @rb_id2sym(i64 %rubyId_normal), !dbg !71
  %56 = load i64, i64* @rb_cObject, align 8, !dbg !71
  %stackFrame327 = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_Object#4plus", align 8, !dbg !71
  %57 = tail call noalias nonnull i8* @ruby_xcalloc(i64 noundef 1, i64 noundef 64) #16, !dbg !71
  %58 = bitcast i8* %57 to i16*, !dbg !71
  %59 = load i16, i16* %58, align 8, !dbg !71
  %60 = and i16 %59, -384, !dbg !71
  %61 = or i16 %60, 1, !dbg !71
  store i16 %61, i16* %58, align 8, !dbg !71
  %62 = getelementptr inbounds i8, i8* %57, i64 8, !dbg !71
  %63 = bitcast i8* %62 to i32*, !dbg !71
  store i32 2, i32* %63, align 8, !dbg !71, !tbaa !72
  %64 = getelementptr inbounds i8, i8* %57, i64 12, !dbg !71
  %65 = bitcast i8* %64 to i32*, !dbg !71
  %66 = getelementptr inbounds i8, i8* %57, i64 4, !dbg !71
  %67 = bitcast i8* %66 to i32*, !dbg !71
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %64, i8 0, i64 20, i1 false), !dbg !71
  store i32 2, i32* %67, align 4, !dbg !71, !tbaa !75
  %positional_table = alloca i64, i32 2, align 8, !dbg !71
  %rubyId_x = load i64, i64* @rubyIdPrecomputed_x, align 8, !dbg !71
  store i64 %rubyId_x, i64* %positional_table, align 8, !dbg !71
  %rubyId_y = load i64, i64* @rubyIdPrecomputed_y, align 8, !dbg !71
  %68 = getelementptr i64, i64* %positional_table, i32 1, !dbg !71
  store i64 %rubyId_y, i64* %68, align 8, !dbg !71
  %69 = tail call noalias nonnull i8* @ruby_xmalloc2(i64 noundef 2, i64 noundef 8) #16, !dbg !71
  %70 = bitcast i64* %positional_table to i8*, !dbg !71
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture nonnull writeonly align 1 %69, i8* nocapture noundef nonnull readonly align 8 dereferenceable(16) %70, i64 noundef 16, i1 noundef false) #15, !dbg !71
  %71 = getelementptr inbounds i8, i8* %57, i64 32, !dbg !71
  %72 = bitcast i8* %71 to i8**, !dbg !71
  store i8* %69, i8** %72, align 8, !dbg !71, !tbaa !76
  tail call void @sorbet_vm_define_method(i64 %56, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @str_plus, i64 0, i64 0), i64 (i32, i64*, i64, %struct.rb_control_frame_struct*)* noundef @"func_Object#4plus", i8* nonnull %57, %struct.rb_iseq_struct* %stackFrame327, i1 noundef zeroext false) #15, !dbg !71
  %73 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !71, !tbaa !14
  %74 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %73, i64 0, i32 5, !dbg !71
  %75 = load i32, i32* %74, align 8, !dbg !71, !tbaa !27
  %76 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %73, i64 0, i32 6, !dbg !71
  %77 = load i32, i32* %76, align 4, !dbg !71, !tbaa !31
  %78 = xor i32 %77, -1, !dbg !71
  %79 = and i32 %78, %75, !dbg !71
  %80 = icmp eq i32 %79, 0, !dbg !71
  br i1 %80, label %rb_vm_check_ints.exit5, label %81, !dbg !71, !prof !21

81:                                               ; preds = %48
  %82 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %73, i64 0, i32 8, !dbg !71
  %83 = load %struct.rb_thread_struct*, %struct.rb_thread_struct** %82, align 8, !dbg !71, !tbaa !32
  %84 = tail call i32 @rb_threadptr_execute_interrupts(%struct.rb_thread_struct* %83, i32 noundef 0) #15, !dbg !71
  br label %rb_vm_check_ints.exit5, !dbg !71

rb_vm_check_ints.exit5:                           ; preds = %48, %81
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 13), i64** %8, align 8, !dbg !71, !tbaa !14
  %rubyId_minus329 = load i64, i64* @rubyIdPrecomputed_minus, align 8, !dbg !77
  %rawSym330 = tail call i64 @rb_id2sym(i64 %rubyId_minus329), !dbg !77
  %rubyId_normal331 = load i64, i64* @rubyIdPrecomputed_normal, align 8, !dbg !77
  %rawSym332 = tail call i64 @rb_id2sym(i64 %rubyId_normal331), !dbg !77
  %stackFrame337 = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_Object#5minus", align 8, !dbg !77
  %85 = tail call noalias nonnull i8* @ruby_xcalloc(i64 noundef 1, i64 noundef 64) #16, !dbg !77
  %86 = bitcast i8* %85 to i16*, !dbg !77
  %87 = load i16, i16* %86, align 8, !dbg !77
  %88 = and i16 %87, -384, !dbg !77
  %89 = or i16 %88, 1, !dbg !77
  store i16 %89, i16* %86, align 8, !dbg !77
  %90 = getelementptr inbounds i8, i8* %85, i64 8, !dbg !77
  %91 = bitcast i8* %90 to i32*, !dbg !77
  store i32 2, i32* %91, align 8, !dbg !77, !tbaa !72
  %92 = getelementptr inbounds i8, i8* %85, i64 12, !dbg !77
  %93 = bitcast i8* %92 to i32*, !dbg !77
  %94 = getelementptr inbounds i8, i8* %85, i64 4, !dbg !77
  %95 = bitcast i8* %94 to i32*, !dbg !77
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %92, i8 0, i64 20, i1 false), !dbg !77
  store i32 2, i32* %95, align 4, !dbg !77, !tbaa !75
  %positional_table339 = alloca i64, i32 2, align 8, !dbg !77
  %rubyId_x340 = load i64, i64* @rubyIdPrecomputed_x, align 8, !dbg !77
  store i64 %rubyId_x340, i64* %positional_table339, align 8, !dbg !77
  %rubyId_y341 = load i64, i64* @rubyIdPrecomputed_y, align 8, !dbg !77
  %96 = getelementptr i64, i64* %positional_table339, i32 1, !dbg !77
  store i64 %rubyId_y341, i64* %96, align 8, !dbg !77
  %97 = tail call noalias nonnull i8* @ruby_xmalloc2(i64 noundef 2, i64 noundef 8) #16, !dbg !77
  %98 = bitcast i64* %positional_table339 to i8*, !dbg !77
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture nonnull writeonly align 1 %97, i8* nocapture noundef nonnull readonly align 8 dereferenceable(16) %98, i64 noundef 16, i1 noundef false) #15, !dbg !77
  %99 = getelementptr inbounds i8, i8* %85, i64 32, !dbg !77
  %100 = bitcast i8* %99 to i8**, !dbg !77
  store i8* %97, i8** %100, align 8, !dbg !77, !tbaa !76
  tail call void @sorbet_vm_define_method(i64 %56, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @str_minus, i64 0, i64 0), i64 (i32, i64*, i64, %struct.rb_control_frame_struct*)* noundef @"func_Object#5minus", i8* nonnull %85, %struct.rb_iseq_struct* %stackFrame337, i1 noundef zeroext false) #15, !dbg !77
  %101 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !77, !tbaa !14
  %102 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %101, i64 0, i32 5, !dbg !77
  %103 = load i32, i32* %102, align 8, !dbg !77, !tbaa !27
  %104 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %101, i64 0, i32 6, !dbg !77
  %105 = load i32, i32* %104, align 4, !dbg !77, !tbaa !31
  %106 = xor i32 %105, -1, !dbg !77
  %107 = and i32 %106, %103, !dbg !77
  %108 = icmp eq i32 %107, 0, !dbg !77
  br i1 %108, label %rb_vm_check_ints.exit3, label %109, !dbg !77, !prof !21

109:                                              ; preds = %rb_vm_check_ints.exit5
  %110 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %101, i64 0, i32 8, !dbg !77
  %111 = load %struct.rb_thread_struct*, %struct.rb_thread_struct** %110, align 8, !dbg !77, !tbaa !32
  %112 = tail call i32 @rb_threadptr_execute_interrupts(%struct.rb_thread_struct* %111, i32 noundef 0) #15, !dbg !77
  br label %rb_vm_check_ints.exit3, !dbg !77

rb_vm_check_ints.exit3:                           ; preds = %rb_vm_check_ints.exit5, %109
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 18), i64** %8, align 8, !dbg !77, !tbaa !14
  %rubyId_lt343 = load i64, i64* @rubyIdPrecomputed_lt, align 8, !dbg !78
  %rawSym344 = tail call i64 @rb_id2sym(i64 %rubyId_lt343), !dbg !78
  %rubyId_normal345 = load i64, i64* @rubyIdPrecomputed_normal, align 8, !dbg !78
  %rawSym346 = tail call i64 @rb_id2sym(i64 %rubyId_normal345), !dbg !78
  %stackFrame351 = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_Object#2lt", align 8, !dbg !78
  %113 = tail call noalias nonnull i8* @ruby_xcalloc(i64 noundef 1, i64 noundef 64) #16, !dbg !78
  %114 = bitcast i8* %113 to i16*, !dbg !78
  %115 = load i16, i16* %114, align 8, !dbg !78
  %116 = and i16 %115, -384, !dbg !78
  %117 = or i16 %116, 1, !dbg !78
  store i16 %117, i16* %114, align 8, !dbg !78
  %118 = getelementptr inbounds i8, i8* %113, i64 8, !dbg !78
  %119 = bitcast i8* %118 to i32*, !dbg !78
  store i32 2, i32* %119, align 8, !dbg !78, !tbaa !72
  %120 = getelementptr inbounds i8, i8* %113, i64 12, !dbg !78
  %121 = bitcast i8* %120 to i32*, !dbg !78
  %122 = getelementptr inbounds i8, i8* %113, i64 4, !dbg !78
  %123 = bitcast i8* %122 to i32*, !dbg !78
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %120, i8 0, i64 20, i1 false), !dbg !78
  store i32 2, i32* %123, align 4, !dbg !78, !tbaa !75
  %positional_table353 = alloca i64, i32 2, align 8, !dbg !78
  %rubyId_x354 = load i64, i64* @rubyIdPrecomputed_x, align 8, !dbg !78
  store i64 %rubyId_x354, i64* %positional_table353, align 8, !dbg !78
  %rubyId_y355 = load i64, i64* @rubyIdPrecomputed_y, align 8, !dbg !78
  %124 = getelementptr i64, i64* %positional_table353, i32 1, !dbg !78
  store i64 %rubyId_y355, i64* %124, align 8, !dbg !78
  %125 = tail call noalias nonnull i8* @ruby_xmalloc2(i64 noundef 2, i64 noundef 8) #16, !dbg !78
  %126 = bitcast i64* %positional_table353 to i8*, !dbg !78
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture nonnull writeonly align 1 %125, i8* nocapture noundef nonnull readonly align 8 dereferenceable(16) %126, i64 noundef 16, i1 noundef false) #15, !dbg !78
  %127 = getelementptr inbounds i8, i8* %113, i64 32, !dbg !78
  %128 = bitcast i8* %127 to i8**, !dbg !78
  store i8* %125, i8** %128, align 8, !dbg !78, !tbaa !76
  tail call void @sorbet_vm_define_method(i64 %56, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @str_lt, i64 0, i64 0), i64 (i32, i64*, i64, %struct.rb_control_frame_struct*)* noundef @"func_Object#2lt", i8* nonnull %113, %struct.rb_iseq_struct* %stackFrame351, i1 noundef zeroext false) #15, !dbg !78
  %129 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !78, !tbaa !14
  %130 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %129, i64 0, i32 5, !dbg !78
  %131 = load i32, i32* %130, align 8, !dbg !78, !tbaa !27
  %132 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %129, i64 0, i32 6, !dbg !78
  %133 = load i32, i32* %132, align 4, !dbg !78, !tbaa !31
  %134 = xor i32 %133, -1, !dbg !78
  %135 = and i32 %134, %131, !dbg !78
  %136 = icmp eq i32 %135, 0, !dbg !78
  br i1 %136, label %rb_vm_check_ints.exit2, label %137, !dbg !78, !prof !21

137:                                              ; preds = %rb_vm_check_ints.exit3
  %138 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %129, i64 0, i32 8, !dbg !78
  %139 = load %struct.rb_thread_struct*, %struct.rb_thread_struct** %138, align 8, !dbg !78, !tbaa !32
  %140 = tail call i32 @rb_threadptr_execute_interrupts(%struct.rb_thread_struct* %139, i32 noundef 0) #15, !dbg !78
  br label %rb_vm_check_ints.exit2, !dbg !78

rb_vm_check_ints.exit2:                           ; preds = %rb_vm_check_ints.exit3, %137
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 23), i64** %8, align 8, !dbg !78, !tbaa !14
  %rubyId_lte357 = load i64, i64* @rubyIdPrecomputed_lte, align 8, !dbg !79
  %rawSym358 = tail call i64 @rb_id2sym(i64 %rubyId_lte357), !dbg !79
  %rubyId_normal359 = load i64, i64* @rubyIdPrecomputed_normal, align 8, !dbg !79
  %rawSym360 = tail call i64 @rb_id2sym(i64 %rubyId_normal359), !dbg !79
  %stackFrame365 = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_Object#3lte", align 8, !dbg !79
  %141 = tail call noalias nonnull i8* @ruby_xcalloc(i64 noundef 1, i64 noundef 64) #16, !dbg !79
  %142 = bitcast i8* %141 to i16*, !dbg !79
  %143 = load i16, i16* %142, align 8, !dbg !79
  %144 = and i16 %143, -384, !dbg !79
  %145 = or i16 %144, 1, !dbg !79
  store i16 %145, i16* %142, align 8, !dbg !79
  %146 = getelementptr inbounds i8, i8* %141, i64 8, !dbg !79
  %147 = bitcast i8* %146 to i32*, !dbg !79
  store i32 2, i32* %147, align 8, !dbg !79, !tbaa !72
  %148 = getelementptr inbounds i8, i8* %141, i64 12, !dbg !79
  %149 = bitcast i8* %148 to i32*, !dbg !79
  %150 = getelementptr inbounds i8, i8* %141, i64 4, !dbg !79
  %151 = bitcast i8* %150 to i32*, !dbg !79
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %148, i8 0, i64 20, i1 false), !dbg !79
  store i32 2, i32* %151, align 4, !dbg !79, !tbaa !75
  %positional_table367 = alloca i64, i32 2, align 8, !dbg !79
  %rubyId_x368 = load i64, i64* @rubyIdPrecomputed_x, align 8, !dbg !79
  store i64 %rubyId_x368, i64* %positional_table367, align 8, !dbg !79
  %rubyId_y369 = load i64, i64* @rubyIdPrecomputed_y, align 8, !dbg !79
  %152 = getelementptr i64, i64* %positional_table367, i32 1, !dbg !79
  store i64 %rubyId_y369, i64* %152, align 8, !dbg !79
  %153 = tail call noalias nonnull i8* @ruby_xmalloc2(i64 noundef 2, i64 noundef 8) #16, !dbg !79
  %154 = bitcast i64* %positional_table367 to i8*, !dbg !79
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture nonnull writeonly align 1 %153, i8* nocapture noundef nonnull readonly align 8 dereferenceable(16) %154, i64 noundef 16, i1 noundef false) #15, !dbg !79
  %155 = getelementptr inbounds i8, i8* %141, i64 32, !dbg !79
  %156 = bitcast i8* %155 to i8**, !dbg !79
  store i8* %153, i8** %156, align 8, !dbg !79, !tbaa !76
  tail call void @sorbet_vm_define_method(i64 %56, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @str_lte, i64 0, i64 0), i64 (i32, i64*, i64, %struct.rb_control_frame_struct*)* noundef @"func_Object#3lte", i8* nonnull %141, %struct.rb_iseq_struct* %stackFrame365, i1 noundef zeroext false) #15, !dbg !79
  %157 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !79, !tbaa !14
  %158 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %157, i64 0, i32 5, !dbg !79
  %159 = load i32, i32* %158, align 8, !dbg !79, !tbaa !27
  %160 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %157, i64 0, i32 6, !dbg !79
  %161 = load i32, i32* %160, align 4, !dbg !79, !tbaa !31
  %162 = xor i32 %161, -1, !dbg !79
  %163 = and i32 %162, %159, !dbg !79
  %164 = icmp eq i32 %163, 0, !dbg !79
  br i1 %164, label %rb_vm_check_ints.exit1, label %165, !dbg !79, !prof !21

165:                                              ; preds = %rb_vm_check_ints.exit2
  %166 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %157, i64 0, i32 8, !dbg !79
  %167 = load %struct.rb_thread_struct*, %struct.rb_thread_struct** %166, align 8, !dbg !79, !tbaa !32
  %168 = tail call i32 @rb_threadptr_execute_interrupts(%struct.rb_thread_struct* %167, i32 noundef 0) #15, !dbg !79
  br label %rb_vm_check_ints.exit1, !dbg !79

rb_vm_check_ints.exit1:                           ; preds = %rb_vm_check_ints.exit2, %165
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 27), i64** %8, align 8, !dbg !79, !tbaa !14
  %169 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !80
  %170 = load i64*, i64** %169, align 8, !dbg !80
  store i64 %selfRaw, i64* %170, align 8, !dbg !80, !tbaa !6
  %171 = getelementptr inbounds i64, i64* %170, i64 1, !dbg !80
  %172 = getelementptr inbounds i64, i64* %171, i64 1, !dbg !80
  %173 = bitcast i64* %171 to <2 x i64>*, !dbg !80
  store <2 x i64> <i64 45035996273704962, i64 54043195528445954>, <2 x i64>* %173, align 8, !dbg !80, !tbaa !6
  %174 = getelementptr inbounds i64, i64* %172, i64 1, !dbg !80
  store i64* %174, i64** %169, align 8, !dbg !80
  %send9 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_plus, i64 0), !dbg !80
  %175 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !81
  %176 = load i64*, i64** %175, align 8, !dbg !81
  store i64 %selfRaw, i64* %176, align 8, !dbg !81, !tbaa !6
  %177 = getelementptr inbounds i64, i64* %176, i64 1, !dbg !81
  store i64 %send9, i64* %177, align 8, !dbg !81, !tbaa !6
  %178 = getelementptr inbounds i64, i64* %177, i64 1, !dbg !81
  store i64* %178, i64** %175, align 8, !dbg !81
  %send11 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_p, i64 0), !dbg !81
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 28), i64** %8, align 8, !dbg !81, !tbaa !14
  %179 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !82
  %180 = load i64*, i64** %179, align 8, !dbg !82
  store i64 %selfRaw, i64* %180, align 8, !dbg !82, !tbaa !6
  %181 = getelementptr inbounds i64, i64* %180, i64 1, !dbg !82
  %182 = getelementptr inbounds i64, i64* %181, i64 1, !dbg !82
  %183 = bitcast i64* %181 to <2 x i64>*, !dbg !82
  store <2 x i64> <i64 146704757861593906, i64 194442913911721170>, <2 x i64>* %183, align 8, !dbg !82, !tbaa !6
  %184 = getelementptr inbounds i64, i64* %182, i64 1, !dbg !82
  store i64* %184, i64** %179, align 8, !dbg !82
  %send13 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_minus, i64 0), !dbg !82
  %185 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !83
  %186 = load i64*, i64** %185, align 8, !dbg !83
  store i64 %selfRaw, i64* %186, align 8, !dbg !83, !tbaa !6
  %187 = getelementptr inbounds i64, i64* %186, i64 1, !dbg !83
  store i64 %send13, i64* %187, align 8, !dbg !83, !tbaa !6
  %188 = getelementptr inbounds i64, i64* %187, i64 1, !dbg !83
  store i64* %188, i64** %185, align 8, !dbg !83
  %send15 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_p.15, i64 0), !dbg !83
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 29), i64** %8, align 8, !dbg !83, !tbaa !14
  %189 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !84
  %190 = load i64*, i64** %189, align 8, !dbg !84
  store i64 %selfRaw, i64* %190, align 8, !dbg !84, !tbaa !6
  %191 = getelementptr inbounds i64, i64* %190, i64 1, !dbg !84
  %192 = getelementptr inbounds i64, i64* %191, i64 1, !dbg !84
  %193 = bitcast i64* %191 to <2 x i64>*, !dbg !84
  store <2 x i64> <i64 193204424014194282, i64 53142475602971858>, <2 x i64>* %193, align 8, !dbg !84, !tbaa !6
  %194 = getelementptr inbounds i64, i64* %192, i64 1, !dbg !84
  store i64* %194, i64** %189, align 8, !dbg !84
  %send17 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_lt, i64 0), !dbg !84
  %195 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !85
  %196 = load i64*, i64** %195, align 8, !dbg !85
  store i64 %selfRaw, i64* %196, align 8, !dbg !85, !tbaa !6
  %197 = getelementptr inbounds i64, i64* %196, i64 1, !dbg !85
  store i64 %send17, i64* %197, align 8, !dbg !85, !tbaa !6
  %198 = getelementptr inbounds i64, i64* %197, i64 1, !dbg !85
  store i64* %198, i64** %195, align 8, !dbg !85
  %send19 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_p.16, i64 0), !dbg !85
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 30), i64** %8, align 8, !dbg !85, !tbaa !14
  %199 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !86
  %200 = load i64*, i64** %199, align 8, !dbg !86
  store i64 %selfRaw, i64* %200, align 8, !dbg !86, !tbaa !6
  %201 = getelementptr inbounds i64, i64* %200, i64 1, !dbg !86
  %202 = getelementptr inbounds i64, i64* %201, i64 1, !dbg !86
  %203 = bitcast i64* %201 to <2 x i64>*, !dbg !86
  store <2 x i64> <i64 61248954932238746, i64 133982088914272258>, <2 x i64>* %203, align 8, !dbg !86, !tbaa !6
  %204 = getelementptr inbounds i64, i64* %202, i64 1, !dbg !86
  store i64* %204, i64** %199, align 8, !dbg !86
  %send21 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_lt.17, i64 0), !dbg !86
  %205 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !87
  %206 = load i64*, i64** %205, align 8, !dbg !87
  store i64 %selfRaw, i64* %206, align 8, !dbg !87, !tbaa !6
  %207 = getelementptr inbounds i64, i64* %206, i64 1, !dbg !87
  store i64 %send21, i64* %207, align 8, !dbg !87, !tbaa !6
  %208 = getelementptr inbounds i64, i64* %207, i64 1, !dbg !87
  store i64* %208, i64** %205, align 8, !dbg !87
  %send23 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_p.18, i64 0), !dbg !87
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 31), i64** %8, align 8, !dbg !87, !tbaa !14
  %209 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !88
  %210 = load i64*, i64** %209, align 8, !dbg !88
  store i64 %selfRaw, i64* %210, align 8, !dbg !88, !tbaa !6
  %211 = getelementptr inbounds i64, i64* %210, i64 1, !dbg !88
  %212 = getelementptr inbounds i64, i64* %211, i64 1, !dbg !88
  %213 = bitcast i64* %211 to <2 x i64>*, !dbg !88
  store <2 x i64> <i64 180200280090161970, i64 155261597153597850>, <2 x i64>* %213, align 8, !dbg !88, !tbaa !6
  %214 = getelementptr inbounds i64, i64* %212, i64 1, !dbg !88
  store i64* %214, i64** %209, align 8, !dbg !88
  %send25 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_lte, i64 0), !dbg !88
  %215 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !89
  %216 = load i64*, i64** %215, align 8, !dbg !89
  store i64 %selfRaw, i64* %216, align 8, !dbg !89, !tbaa !6
  %217 = getelementptr inbounds i64, i64* %216, i64 1, !dbg !89
  store i64 %send25, i64* %217, align 8, !dbg !89, !tbaa !6
  %218 = getelementptr inbounds i64, i64* %217, i64 1, !dbg !89
  store i64* %218, i64** %215, align 8, !dbg !89
  %send27 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_p.19, i64 0), !dbg !89
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 32), i64** %8, align 8, !dbg !89, !tbaa !14
  %219 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !90
  %220 = load i64*, i64** %219, align 8, !dbg !90
  store i64 %selfRaw, i64* %220, align 8, !dbg !90, !tbaa !6
  %221 = getelementptr inbounds i64, i64* %220, i64 1, !dbg !90
  %222 = getelementptr inbounds i64, i64* %221, i64 1, !dbg !90
  %223 = bitcast i64* %221 to <2 x i64>*, !dbg !90
  store <2 x i64> <i64 57646075230342354, i64 155261597153597850>, <2 x i64>* %223, align 8, !dbg !90, !tbaa !6
  %224 = getelementptr inbounds i64, i64* %222, i64 1, !dbg !90
  store i64* %224, i64** %219, align 8, !dbg !90
  %send29 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_lte.20, i64 0), !dbg !90
  %225 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !91
  %226 = load i64*, i64** %225, align 8, !dbg !91
  store i64 %selfRaw, i64* %226, align 8, !dbg !91, !tbaa !6
  %227 = getelementptr inbounds i64, i64* %226, i64 1, !dbg !91
  store i64 %send29, i64* %227, align 8, !dbg !91, !tbaa !6
  %228 = getelementptr inbounds i64, i64* %227, i64 1, !dbg !91
  store i64* %228, i64** %225, align 8, !dbg !91
  %send31 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_p.21, i64 0), !dbg !91
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 33), i64** %8, align 8, !dbg !91, !tbaa !14
  %229 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !92
  %230 = load i64*, i64** %229, align 8, !dbg !92
  store i64 %selfRaw, i64* %230, align 8, !dbg !92, !tbaa !6
  %231 = getelementptr inbounds i64, i64* %230, i64 1, !dbg !92
  %232 = getelementptr inbounds i64, i64* %231, i64 1, !dbg !92
  %233 = bitcast i64* %231 to <2 x i64>*, !dbg !92
  store <2 x i64> <i64 75660473739824338, i64 75660473739824338>, <2 x i64>* %233, align 8, !dbg !92, !tbaa !6
  %234 = getelementptr inbounds i64, i64* %232, i64 1, !dbg !92
  store i64* %234, i64** %229, align 8, !dbg !92
  %send33 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_lte.22, i64 0), !dbg !92
  %235 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !93
  %236 = load i64*, i64** %235, align 8, !dbg !93
  store i64 %selfRaw, i64* %236, align 8, !dbg !93, !tbaa !6
  %237 = getelementptr inbounds i64, i64* %236, i64 1, !dbg !93
  store i64 %send33, i64* %237, align 8, !dbg !93, !tbaa !6
  %238 = getelementptr inbounds i64, i64* %237, i64 1, !dbg !93
  store i64* %238, i64** %235, align 8, !dbg !93
  %send35 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_p.23, i64 0), !dbg !93
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 36), i64** %8, align 8, !dbg !93, !tbaa !14
  %239 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !94
  %240 = load i64*, i64** %239, align 8, !dbg !94
  store i64 %selfRaw, i64* %240, align 8, !dbg !94, !tbaa !6
  %241 = getelementptr inbounds i64, i64* %240, i64 1, !dbg !94
  %242 = getelementptr inbounds i64, i64* %241, i64 1, !dbg !94
  %243 = bitcast i64* %241 to <2 x i64>*, !dbg !94
  store <2 x i64> <i64 45035996273704962, i64 17>, <2 x i64>* %243, align 8, !dbg !94, !tbaa !6
  %244 = getelementptr inbounds i64, i64* %242, i64 1, !dbg !94
  store i64* %244, i64** %239, align 8, !dbg !94
  %send37 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_plus.24, i64 0), !dbg !94
  %245 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !95
  %246 = load i64*, i64** %245, align 8, !dbg !95
  store i64 %selfRaw, i64* %246, align 8, !dbg !95, !tbaa !6
  %247 = getelementptr inbounds i64, i64* %246, i64 1, !dbg !95
  store i64 %send37, i64* %247, align 8, !dbg !95, !tbaa !6
  %248 = getelementptr inbounds i64, i64* %247, i64 1, !dbg !95
  store i64* %248, i64** %245, align 8, !dbg !95
  %send39 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_p.25, i64 0), !dbg !95
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 37), i64** %8, align 8, !dbg !95, !tbaa !14
  %rubyStr_8.9 = load i64, i64* @rubyStrFrozen_8.9, align 8, !dbg !96
  %249 = load i64, i64* @rb_mKernel, align 8, !dbg !96
  %250 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !96
  %251 = load i64*, i64** %250, align 8, !dbg !96
  store i64 %249, i64* %251, align 8, !dbg !96, !tbaa !6
  %252 = getelementptr inbounds i64, i64* %251, i64 1, !dbg !96
  store i64 %rubyStr_8.9, i64* %252, align 8, !dbg !96, !tbaa !6
  %253 = getelementptr inbounds i64, i64* %252, i64 1, !dbg !96
  store i64* %253, i64** %250, align 8, !dbg !96
  %send41 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_Rational, i64 0), !dbg !96
  %254 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !97
  %255 = load i64*, i64** %254, align 8, !dbg !97
  store i64 %selfRaw, i64* %255, align 8, !dbg !97, !tbaa !6
  %256 = getelementptr inbounds i64, i64* %255, i64 1, !dbg !97
  store i64 36028797018963970, i64* %256, align 8, !dbg !97, !tbaa !6
  %257 = getelementptr inbounds i64, i64* %256, i64 1, !dbg !97
  store i64 %send41, i64* %257, align 8, !dbg !97, !tbaa !6
  %258 = getelementptr inbounds i64, i64* %257, i64 1, !dbg !97
  store i64* %258, i64** %254, align 8, !dbg !97
  %send43 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_plus.26, i64 0), !dbg !97
  %259 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !98
  %260 = load i64*, i64** %259, align 8, !dbg !98
  store i64 %selfRaw, i64* %260, align 8, !dbg !98, !tbaa !6
  %261 = getelementptr inbounds i64, i64* %260, i64 1, !dbg !98
  store i64 %send43, i64* %261, align 8, !dbg !98, !tbaa !6
  %262 = getelementptr inbounds i64, i64* %261, i64 1, !dbg !98
  store i64* %262, i64** %259, align 8, !dbg !98
  %send45 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_p.27, i64 0), !dbg !98
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 38), i64** %8, align 8, !dbg !98, !tbaa !14
  %rubyStr_5 = load i64, i64* @rubyStrFrozen_5, align 8, !dbg !99
  %263 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !99
  %264 = load i64*, i64** %263, align 8, !dbg !99
  store i64 %249, i64* %264, align 8, !dbg !99, !tbaa !6
  %265 = getelementptr inbounds i64, i64* %264, i64 1, !dbg !99
  store i64 1, i64* %265, align 8, !dbg !99, !tbaa !6
  %266 = getelementptr inbounds i64, i64* %265, i64 1, !dbg !99
  store i64 %rubyStr_5, i64* %266, align 8, !dbg !99, !tbaa !6
  %267 = getelementptr inbounds i64, i64* %266, i64 1, !dbg !99
  store i64* %267, i64** %263, align 8, !dbg !99
  %send47 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_Complex, i64 0), !dbg !99
  %268 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !100
  %269 = load i64*, i64** %268, align 8, !dbg !100
  store i64 %selfRaw, i64* %269, align 8, !dbg !100, !tbaa !6
  %270 = getelementptr inbounds i64, i64* %269, i64 1, !dbg !100
  store i64 36028797018963970, i64* %270, align 8, !dbg !100, !tbaa !6
  %271 = getelementptr inbounds i64, i64* %270, i64 1, !dbg !100
  store i64 %send47, i64* %271, align 8, !dbg !100, !tbaa !6
  %272 = getelementptr inbounds i64, i64* %271, i64 1, !dbg !100
  store i64* %272, i64** %268, align 8, !dbg !100
  %send49 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_plus.28, i64 0), !dbg !100
  %273 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !101
  %274 = load i64*, i64** %273, align 8, !dbg !101
  store i64 %selfRaw, i64* %274, align 8, !dbg !101, !tbaa !6
  %275 = getelementptr inbounds i64, i64* %274, i64 1, !dbg !101
  store i64 %send49, i64* %275, align 8, !dbg !101, !tbaa !6
  %276 = getelementptr inbounds i64, i64* %275, i64 1, !dbg !101
  store i64* %276, i64** %273, align 8, !dbg !101
  %send51 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_p.29, i64 0), !dbg !101
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 40), i64** %8, align 8, !dbg !101, !tbaa !14
  %277 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !102
  %278 = load i64*, i64** %277, align 8, !dbg !102
  store i64 %selfRaw, i64* %278, align 8, !dbg !102, !tbaa !6
  %279 = getelementptr inbounds i64, i64* %278, i64 1, !dbg !102
  %280 = getelementptr inbounds i64, i64* %279, i64 1, !dbg !102
  %281 = bitcast i64* %279 to <2 x i64>*, !dbg !102
  store <2 x i64> <i64 199678348478539370, i64 7>, <2 x i64>* %281, align 8, !dbg !102, !tbaa !6
  %282 = getelementptr inbounds i64, i64* %280, i64 1, !dbg !102
  store i64* %282, i64** %277, align 8, !dbg !102
  %send53 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_minus.30, i64 0), !dbg !102
  %283 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !103
  %284 = load i64*, i64** %283, align 8, !dbg !103
  store i64 %selfRaw, i64* %284, align 8, !dbg !103, !tbaa !6
  %285 = getelementptr inbounds i64, i64* %284, i64 1, !dbg !103
  store i64 %send53, i64* %285, align 8, !dbg !103, !tbaa !6
  %286 = getelementptr inbounds i64, i64* %285, i64 1, !dbg !103
  store i64* %286, i64** %283, align 8, !dbg !103
  %send55 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_p.31, i64 0), !dbg !103
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 41), i64** %8, align 8, !dbg !103, !tbaa !14
  %rubyStr_15.4 = load i64, i64* @rubyStrFrozen_15.4, align 8, !dbg !104
  %287 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !104
  %288 = load i64*, i64** %287, align 8, !dbg !104
  store i64 %249, i64* %288, align 8, !dbg !104, !tbaa !6
  %289 = getelementptr inbounds i64, i64* %288, i64 1, !dbg !104
  store i64 %rubyStr_15.4, i64* %289, align 8, !dbg !104, !tbaa !6
  %290 = getelementptr inbounds i64, i64* %289, i64 1, !dbg !104
  store i64* %290, i64** %287, align 8, !dbg !104
  %send57 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_Rational.32, i64 0), !dbg !104
  %291 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !105
  %292 = load i64*, i64** %291, align 8, !dbg !105
  store i64 %selfRaw, i64* %292, align 8, !dbg !105, !tbaa !6
  %293 = getelementptr inbounds i64, i64* %292, i64 1, !dbg !105
  store i64 199622053483197234, i64* %293, align 8, !dbg !105, !tbaa !6
  %294 = getelementptr inbounds i64, i64* %293, i64 1, !dbg !105
  store i64 %send57, i64* %294, align 8, !dbg !105, !tbaa !6
  %295 = getelementptr inbounds i64, i64* %294, i64 1, !dbg !105
  store i64* %295, i64** %291, align 8, !dbg !105
  %send59 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_minus.33, i64 0), !dbg !105
  %296 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !106
  %297 = load i64*, i64** %296, align 8, !dbg !106
  store i64 %selfRaw, i64* %297, align 8, !dbg !106, !tbaa !6
  %298 = getelementptr inbounds i64, i64* %297, i64 1, !dbg !106
  store i64 %send59, i64* %298, align 8, !dbg !106, !tbaa !6
  %299 = getelementptr inbounds i64, i64* %298, i64 1, !dbg !106
  store i64* %299, i64** %296, align 8, !dbg !106
  %send61 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_p.34, i64 0), !dbg !106
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 42), i64** %8, align 8, !dbg !106, !tbaa !14
  %rubyStr_18 = load i64, i64* @rubyStrFrozen_18, align 8, !dbg !107
  %300 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !107
  %301 = load i64*, i64** %300, align 8, !dbg !107
  store i64 %249, i64* %301, align 8, !dbg !107, !tbaa !6
  %302 = getelementptr inbounds i64, i64* %301, i64 1, !dbg !107
  store i64 1, i64* %302, align 8, !dbg !107, !tbaa !6
  %303 = getelementptr inbounds i64, i64* %302, i64 1, !dbg !107
  store i64 %rubyStr_18, i64* %303, align 8, !dbg !107, !tbaa !6
  %304 = getelementptr inbounds i64, i64* %303, i64 1, !dbg !107
  store i64* %304, i64** %300, align 8, !dbg !107
  %send63 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_Complex.35, i64 0), !dbg !107
  %305 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !108
  %306 = load i64*, i64** %305, align 8, !dbg !108
  store i64 %selfRaw, i64* %306, align 8, !dbg !108, !tbaa !6
  %307 = getelementptr inbounds i64, i64* %306, i64 1, !dbg !108
  store i64 199565758487855106, i64* %307, align 8, !dbg !108, !tbaa !6
  %308 = getelementptr inbounds i64, i64* %307, i64 1, !dbg !108
  store i64 %send63, i64* %308, align 8, !dbg !108, !tbaa !6
  %309 = getelementptr inbounds i64, i64* %308, i64 1, !dbg !108
  store i64* %309, i64** %305, align 8, !dbg !108
  %send65 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_minus.36, i64 0), !dbg !108
  %310 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !109
  %311 = load i64*, i64** %310, align 8, !dbg !109
  store i64 %selfRaw, i64* %311, align 8, !dbg !109, !tbaa !6
  %312 = getelementptr inbounds i64, i64* %311, i64 1, !dbg !109
  store i64 %send65, i64* %312, align 8, !dbg !109, !tbaa !6
  %313 = getelementptr inbounds i64, i64* %312, i64 1, !dbg !109
  store i64* %313, i64** %310, align 8, !dbg !109
  %send67 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_p.37, i64 0), !dbg !109
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 44), i64** %8, align 8, !dbg !109, !tbaa !14
  %314 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !110
  %315 = load i64*, i64** %314, align 8, !dbg !110
  store i64 %selfRaw, i64* %315, align 8, !dbg !110, !tbaa !6
  %316 = getelementptr inbounds i64, i64* %315, i64 1, !dbg !110
  %317 = getelementptr inbounds i64, i64* %316, i64 1, !dbg !110
  %318 = bitcast i64* %316 to <2 x i64>*, !dbg !110
  store <2 x i64> <i64 113040350646999450, i64 13>, <2 x i64>* %318, align 8, !dbg !110, !tbaa !6
  %319 = getelementptr inbounds i64, i64* %317, i64 1, !dbg !110
  store i64* %319, i64** %314, align 8, !dbg !110
  %send69 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_lt.38, i64 0), !dbg !110
  %320 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !111
  %321 = load i64*, i64** %320, align 8, !dbg !111
  store i64 %selfRaw, i64* %321, align 8, !dbg !111, !tbaa !6
  %322 = getelementptr inbounds i64, i64* %321, i64 1, !dbg !111
  store i64 %send69, i64* %322, align 8, !dbg !111, !tbaa !6
  %323 = getelementptr inbounds i64, i64* %322, i64 1, !dbg !111
  store i64* %323, i64** %320, align 8, !dbg !111
  %send71 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_p.39, i64 0), !dbg !111
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 45), i64** %8, align 8, !dbg !111, !tbaa !14
  %rubyStr_25.4 = load i64, i64* @rubyStrFrozen_25.4, align 8, !dbg !112
  %324 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !112
  %325 = load i64*, i64** %324, align 8, !dbg !112
  store i64 %249, i64* %325, align 8, !dbg !112, !tbaa !6
  %326 = getelementptr inbounds i64, i64* %325, i64 1, !dbg !112
  store i64 %rubyStr_25.4, i64* %326, align 8, !dbg !112, !tbaa !6
  %327 = getelementptr inbounds i64, i64* %326, i64 1, !dbg !112
  store i64* %327, i64** %324, align 8, !dbg !112
  %send73 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_Rational.40, i64 0), !dbg !112
  %328 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !113
  %329 = load i64*, i64** %328, align 8, !dbg !113
  store i64 %selfRaw, i64* %329, align 8, !dbg !113, !tbaa !6
  %330 = getelementptr inbounds i64, i64* %329, i64 1, !dbg !113
  store i64 113040350646999450, i64* %330, align 8, !dbg !113, !tbaa !6
  %331 = getelementptr inbounds i64, i64* %330, i64 1, !dbg !113
  store i64 %send73, i64* %331, align 8, !dbg !113, !tbaa !6
  %332 = getelementptr inbounds i64, i64* %331, i64 1, !dbg !113
  store i64* %332, i64** %328, align 8, !dbg !113
  %send75 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_lt.41, i64 0), !dbg !113
  %333 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !114
  %334 = load i64*, i64** %333, align 8, !dbg !114
  store i64 %selfRaw, i64* %334, align 8, !dbg !114, !tbaa !6
  %335 = getelementptr inbounds i64, i64* %334, i64 1, !dbg !114
  store i64 %send75, i64* %335, align 8, !dbg !114, !tbaa !6
  %336 = getelementptr inbounds i64, i64* %335, i64 1, !dbg !114
  store i64* %336, i64** %333, align 8, !dbg !114
  %send77 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_p.42, i64 0), !dbg !114
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 47), i64** %8, align 8, !dbg !114, !tbaa !14
  %337 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !115
  %338 = load i64*, i64** %337, align 8, !dbg !115
  store i64 %selfRaw, i64* %338, align 8, !dbg !115, !tbaa !6
  %339 = getelementptr inbounds i64, i64* %338, i64 1, !dbg !115
  %340 = getelementptr inbounds i64, i64* %339, i64 1, !dbg !115
  %341 = bitcast i64* %339 to <2 x i64>*, !dbg !115
  store <2 x i64> <i64 113040350646999450, i64 41>, <2 x i64>* %341, align 8, !dbg !115, !tbaa !6
  %342 = getelementptr inbounds i64, i64* %340, i64 1, !dbg !115
  store i64* %342, i64** %337, align 8, !dbg !115
  %send79 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_lte.43, i64 0), !dbg !115
  %343 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !116
  %344 = load i64*, i64** %343, align 8, !dbg !116
  store i64 %selfRaw, i64* %344, align 8, !dbg !116, !tbaa !6
  %345 = getelementptr inbounds i64, i64* %344, i64 1, !dbg !116
  store i64 %send79, i64* %345, align 8, !dbg !116, !tbaa !6
  %346 = getelementptr inbounds i64, i64* %345, i64 1, !dbg !116
  store i64* %346, i64** %343, align 8, !dbg !116
  %send81 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_p.44, i64 0), !dbg !116
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 48), i64** %8, align 8, !dbg !116, !tbaa !14
  %rubyStr_5.923 = load i64, i64* @rubyStrFrozen_5.923, align 8, !dbg !117
  %347 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !117
  %348 = load i64*, i64** %347, align 8, !dbg !117
  store i64 %249, i64* %348, align 8, !dbg !117, !tbaa !6
  %349 = getelementptr inbounds i64, i64* %348, i64 1, !dbg !117
  store i64 %rubyStr_5.923, i64* %349, align 8, !dbg !117, !tbaa !6
  %350 = getelementptr inbounds i64, i64* %349, i64 1, !dbg !117
  store i64* %350, i64** %347, align 8, !dbg !117
  %send83 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_Rational.45, i64 0), !dbg !117
  %351 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !118
  %352 = load i64*, i64** %351, align 8, !dbg !118
  store i64 %selfRaw, i64* %352, align 8, !dbg !118, !tbaa !6
  %353 = getelementptr inbounds i64, i64* %352, i64 1, !dbg !118
  store i64 113040350646999450, i64* %353, align 8, !dbg !118, !tbaa !6
  %354 = getelementptr inbounds i64, i64* %353, i64 1, !dbg !118
  store i64 %send83, i64* %354, align 8, !dbg !118, !tbaa !6
  %355 = getelementptr inbounds i64, i64* %354, i64 1, !dbg !118
  store i64* %355, i64** %351, align 8, !dbg !118
  %send85 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_lte.46, i64 0), !dbg !118
  %356 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !119
  %357 = load i64*, i64** %356, align 8, !dbg !119
  store i64 %selfRaw, i64* %357, align 8, !dbg !119, !tbaa !6
  %358 = getelementptr inbounds i64, i64* %357, i64 1, !dbg !119
  store i64 %send85, i64* %358, align 8, !dbg !119, !tbaa !6
  %359 = getelementptr inbounds i64, i64* %358, i64 1, !dbg !119
  store i64* %359, i64** %356, align 8, !dbg !119
  %send87 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_p.47, i64 0), !dbg !119
  ret void

fastSymCallIntrinsic_ResolvedSig_sig305:          ; preds = %fastSymCallIntrinsic_ResolvedSig_sig286, %41
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 22), i64** %8, align 8, !dbg !65, !tbaa !14
  %rubyId_lte = load i64, i64* @rubyIdPrecomputed_lte, align 8, !dbg !66
  %rawSym299 = tail call i64 @rb_id2sym(i64 %rubyId_lte), !dbg !66
  tail call void @sorbet_vm_register_sig(i64 noundef 0, i64 %rawSym299, i64 %selfRaw, i64 noundef 8, i64 (i64, i64, i32, i64*, i64)* noundef @"func_<root>.17<static-init>$152$block_4"), !dbg !66
  %360 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !66, !tbaa !14
  %361 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %360, i64 0, i32 5, !dbg !66
  %362 = load i32, i32* %361, align 8, !dbg !66, !tbaa !27
  %363 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %360, i64 0, i32 6, !dbg !66
  %364 = load i32, i32* %363, align 4, !dbg !66, !tbaa !31
  %365 = xor i32 %364, -1, !dbg !66
  %366 = and i32 %365, %362, !dbg !66
  %367 = icmp eq i32 %366, 0, !dbg !66
  br i1 %367, label %afterSend302, label %368, !dbg !66, !prof !21

368:                                              ; preds = %fastSymCallIntrinsic_ResolvedSig_sig305
  %369 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %360, i64 0, i32 8, !dbg !66
  %370 = load %struct.rb_thread_struct*, %struct.rb_thread_struct** %369, align 8, !dbg !66, !tbaa !32
  %371 = tail call i32 @rb_threadptr_execute_interrupts(%struct.rb_thread_struct* %370, i32 noundef 0) #15, !dbg !66
  br label %afterSend302, !dbg !66
}

; Function Attrs: ssp
define internal i64 @"func_<root>.17<static-init>$152$block_1"(i64 %firstYieldArgRaw, i64 %localsOffset, i32 %argc, i64* nocapture nofree readnone %argArray, i64 %blockArg) #7 !dbg !120 {
functionEntryInitializers:
  %0 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !14
  %1 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %0, i64 0, i32 2
  %2 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %1, align 8, !tbaa !58
  %3 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 3
  %4 = load i64, i64* %3, align 8, !tbaa !121
  %stackFrame = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.17<static-init>$152$block_1", align 8
  %5 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 2
  store %struct.rb_iseq_struct* %stackFrame, %struct.rb_iseq_struct** %5, align 8, !tbaa !59
  %6 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 4
  %7 = load i64*, i64** %6, align 8, !tbaa !61
  %8 = load i64, i64* %7, align 8, !tbaa !6
  %9 = and i64 %8, -129
  store i64 %9, i64* %7, align 8, !tbaa !6
  %10 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 0
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 7), i64** %10, align 8, !tbaa !14
  %rubyId_x = load i64, i64* @rubyIdPrecomputed_x, align 8, !dbg !122
  %rawSym = tail call i64 @rb_id2sym(i64 %rubyId_x), !dbg !122
  %rubyId_y = load i64, i64* @rubyIdPrecomputed_y, align 8, !dbg !123
  %rawSym16 = tail call i64 @rb_id2sym(i64 %rubyId_y), !dbg !123
  %11 = load i64, i64* @guard_epoch_T, align 8, !dbg !124
  %12 = load i64, i64* @ruby_vm_global_constant_state, align 8, !dbg !124, !tbaa !68
  %needTakeSlowPath = icmp ne i64 %11, %12, !dbg !124
  br i1 %needTakeSlowPath, label %13, label %14, !dbg !124, !prof !70

13:                                               ; preds = %functionEntryInitializers
  tail call void @const_recompute_T(), !dbg !124
  br label %14, !dbg !124

14:                                               ; preds = %functionEntryInitializers, %13
  %15 = load i64, i64* @guarded_const_T, align 8, !dbg !124
  %16 = load i64, i64* @guard_epoch_T, align 8, !dbg !124
  %17 = load i64, i64* @ruby_vm_global_constant_state, align 8, !dbg !124, !tbaa !68
  %guardUpdated = icmp eq i64 %16, %17, !dbg !124
  tail call void @llvm.assume(i1 %guardUpdated), !dbg !124
  %18 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 1, !dbg !124
  %19 = load i64*, i64** %18, align 8, !dbg !124
  store i64 %15, i64* %19, align 8, !dbg !124, !tbaa !6
  %20 = getelementptr inbounds i64, i64* %19, i64 1, !dbg !124
  store i64* %20, i64** %18, align 8, !dbg !124
  %send = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_untyped, i64 0), !dbg !124
  %21 = load i64, i64* @rb_cFloat, align 8, !dbg !125
  %22 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 1, !dbg !125
  %23 = load i64*, i64** %22, align 8, !dbg !125
  store i64 %4, i64* %23, align 8, !dbg !125, !tbaa !6
  %24 = getelementptr inbounds i64, i64* %23, i64 1, !dbg !125
  store i64 %21, i64* %24, align 8, !dbg !125, !tbaa !6
  %25 = getelementptr inbounds i64, i64* %24, i64 1, !dbg !125
  store i64 %send, i64* %25, align 8, !dbg !125, !tbaa !6
  %26 = getelementptr inbounds i64, i64* %25, i64 1, !dbg !125
  store i64* %26, i64** %22, align 8, !dbg !125
  %send38 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_params, i64 0), !dbg !125
  %27 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 1, !dbg !126
  %28 = load i64*, i64** %27, align 8, !dbg !126
  store i64 %15, i64* %28, align 8, !dbg !126, !tbaa !6
  %29 = getelementptr inbounds i64, i64* %28, i64 1, !dbg !126
  store i64* %29, i64** %27, align 8, !dbg !126
  %send40 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_untyped.1, i64 0), !dbg !126
  %30 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 1, !dbg !125
  %31 = load i64*, i64** %30, align 8, !dbg !125
  store i64 %send38, i64* %31, align 8, !dbg !125, !tbaa !6
  %32 = getelementptr inbounds i64, i64* %31, i64 1, !dbg !125
  store i64 %send40, i64* %32, align 8, !dbg !125, !tbaa !6
  %33 = getelementptr inbounds i64, i64* %32, i64 1, !dbg !125
  store i64* %33, i64** %30, align 8, !dbg !125
  %send42 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_returns, i64 0), !dbg !125
  ret i64 %send42, !dbg !127
}

; Function Attrs: ssp
define internal i64 @"func_<root>.17<static-init>$152$block_2"(i64 %firstYieldArgRaw, i64 %localsOffset, i32 %argc, i64* nocapture nofree readnone %argArray, i64 %blockArg) #7 !dbg !128 {
functionEntryInitializers:
  %0 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !14
  %1 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %0, i64 0, i32 2
  %2 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %1, align 8, !tbaa !58
  %3 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 3
  %4 = load i64, i64* %3, align 8, !tbaa !121
  %stackFrame = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.17<static-init>$152$block_2", align 8
  %5 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 2
  store %struct.rb_iseq_struct* %stackFrame, %struct.rb_iseq_struct** %5, align 8, !tbaa !59
  %6 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 4
  %7 = load i64*, i64** %6, align 8, !tbaa !61
  %8 = load i64, i64* %7, align 8, !tbaa !6
  %9 = and i64 %8, -129
  store i64 %9, i64* %7, align 8, !tbaa !6
  %10 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 0
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 12), i64** %10, align 8, !tbaa !14
  %rubyId_x = load i64, i64* @rubyIdPrecomputed_x, align 8, !dbg !129
  %rawSym = tail call i64 @rb_id2sym(i64 %rubyId_x), !dbg !129
  %rubyId_y = load i64, i64* @rubyIdPrecomputed_y, align 8, !dbg !130
  %rawSym16 = tail call i64 @rb_id2sym(i64 %rubyId_y), !dbg !130
  %11 = load i64, i64* @guard_epoch_T, align 8, !dbg !131
  %12 = load i64, i64* @ruby_vm_global_constant_state, align 8, !dbg !131, !tbaa !68
  %needTakeSlowPath = icmp ne i64 %11, %12, !dbg !131
  br i1 %needTakeSlowPath, label %13, label %14, !dbg !131, !prof !70

13:                                               ; preds = %functionEntryInitializers
  tail call void @const_recompute_T(), !dbg !131
  br label %14, !dbg !131

14:                                               ; preds = %functionEntryInitializers, %13
  %15 = load i64, i64* @guarded_const_T, align 8, !dbg !131
  %16 = load i64, i64* @guard_epoch_T, align 8, !dbg !131
  %17 = load i64, i64* @ruby_vm_global_constant_state, align 8, !dbg !131, !tbaa !68
  %guardUpdated = icmp eq i64 %16, %17, !dbg !131
  tail call void @llvm.assume(i1 %guardUpdated), !dbg !131
  %18 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 1, !dbg !131
  %19 = load i64*, i64** %18, align 8, !dbg !131
  store i64 %15, i64* %19, align 8, !dbg !131, !tbaa !6
  %20 = getelementptr inbounds i64, i64* %19, i64 1, !dbg !131
  store i64* %20, i64** %18, align 8, !dbg !131
  %send = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_untyped.3, i64 0), !dbg !131
  %21 = load i64, i64* @rb_cFloat, align 8, !dbg !132
  %22 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 1, !dbg !132
  %23 = load i64*, i64** %22, align 8, !dbg !132
  store i64 %4, i64* %23, align 8, !dbg !132, !tbaa !6
  %24 = getelementptr inbounds i64, i64* %23, i64 1, !dbg !132
  store i64 %21, i64* %24, align 8, !dbg !132, !tbaa !6
  %25 = getelementptr inbounds i64, i64* %24, i64 1, !dbg !132
  store i64 %send, i64* %25, align 8, !dbg !132, !tbaa !6
  %26 = getelementptr inbounds i64, i64* %25, i64 1, !dbg !132
  store i64* %26, i64** %22, align 8, !dbg !132
  %send38 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_params.4, i64 0), !dbg !132
  %27 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 1, !dbg !133
  %28 = load i64*, i64** %27, align 8, !dbg !133
  store i64 %15, i64* %28, align 8, !dbg !133, !tbaa !6
  %29 = getelementptr inbounds i64, i64* %28, i64 1, !dbg !133
  store i64* %29, i64** %27, align 8, !dbg !133
  %send40 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_untyped.5, i64 0), !dbg !133
  %30 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 1, !dbg !132
  %31 = load i64*, i64** %30, align 8, !dbg !132
  store i64 %send38, i64* %31, align 8, !dbg !132, !tbaa !6
  %32 = getelementptr inbounds i64, i64* %31, i64 1, !dbg !132
  store i64 %send40, i64* %32, align 8, !dbg !132, !tbaa !6
  %33 = getelementptr inbounds i64, i64* %32, i64 1, !dbg !132
  store i64* %33, i64** %30, align 8, !dbg !132
  %send42 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_returns.6, i64 0), !dbg !132
  ret i64 %send42, !dbg !134
}

; Function Attrs: ssp
define internal i64 @"func_<root>.17<static-init>$152$block_3"(i64 %firstYieldArgRaw, i64 %localsOffset, i32 %argc, i64* nocapture nofree readnone %argArray, i64 %blockArg) #7 !dbg !135 {
functionEntryInitializers:
  %0 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !14
  %1 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %0, i64 0, i32 2
  %2 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %1, align 8, !tbaa !58
  %3 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 3
  %4 = load i64, i64* %3, align 8, !tbaa !121
  %stackFrame = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.17<static-init>$152$block_3", align 8
  %5 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 2
  store %struct.rb_iseq_struct* %stackFrame, %struct.rb_iseq_struct** %5, align 8, !tbaa !59
  %6 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 4
  %7 = load i64*, i64** %6, align 8, !tbaa !61
  %8 = load i64, i64* %7, align 8, !tbaa !6
  %9 = and i64 %8, -129
  store i64 %9, i64* %7, align 8, !tbaa !6
  %10 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 0
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 17), i64** %10, align 8, !tbaa !14
  %rubyId_x = load i64, i64* @rubyIdPrecomputed_x, align 8, !dbg !136
  %rawSym = tail call i64 @rb_id2sym(i64 %rubyId_x), !dbg !136
  %rubyId_y = load i64, i64* @rubyIdPrecomputed_y, align 8, !dbg !137
  %rawSym16 = tail call i64 @rb_id2sym(i64 %rubyId_y), !dbg !137
  %11 = load i64, i64* @guard_epoch_T, align 8, !dbg !138
  %12 = load i64, i64* @ruby_vm_global_constant_state, align 8, !dbg !138, !tbaa !68
  %needTakeSlowPath = icmp ne i64 %11, %12, !dbg !138
  br i1 %needTakeSlowPath, label %13, label %14, !dbg !138, !prof !70

13:                                               ; preds = %functionEntryInitializers
  tail call void @const_recompute_T(), !dbg !138
  br label %14, !dbg !138

14:                                               ; preds = %functionEntryInitializers, %13
  %15 = load i64, i64* @guarded_const_T, align 8, !dbg !138
  %16 = load i64, i64* @guard_epoch_T, align 8, !dbg !138
  %17 = load i64, i64* @ruby_vm_global_constant_state, align 8, !dbg !138, !tbaa !68
  %guardUpdated = icmp eq i64 %16, %17, !dbg !138
  tail call void @llvm.assume(i1 %guardUpdated), !dbg !138
  %18 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 1, !dbg !138
  %19 = load i64*, i64** %18, align 8, !dbg !138
  store i64 %15, i64* %19, align 8, !dbg !138, !tbaa !6
  %20 = getelementptr inbounds i64, i64* %19, i64 1, !dbg !138
  store i64* %20, i64** %18, align 8, !dbg !138
  %send = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_untyped.8, i64 0), !dbg !138
  %21 = load i64, i64* @rb_cFloat, align 8, !dbg !139
  %22 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 1, !dbg !139
  %23 = load i64*, i64** %22, align 8, !dbg !139
  store i64 %4, i64* %23, align 8, !dbg !139, !tbaa !6
  %24 = getelementptr inbounds i64, i64* %23, i64 1, !dbg !139
  store i64 %21, i64* %24, align 8, !dbg !139, !tbaa !6
  %25 = getelementptr inbounds i64, i64* %24, i64 1, !dbg !139
  store i64 %send, i64* %25, align 8, !dbg !139, !tbaa !6
  %26 = getelementptr inbounds i64, i64* %25, i64 1, !dbg !139
  store i64* %26, i64** %22, align 8, !dbg !139
  %send34 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_params.9, i64 0), !dbg !139
  %27 = load i64, i64* @"guard_epoch_T::Boolean", align 8, !dbg !139
  %28 = load i64, i64* @ruby_vm_global_constant_state, align 8, !dbg !139, !tbaa !68
  %needTakeSlowPath31 = icmp ne i64 %27, %28, !dbg !139
  br i1 %needTakeSlowPath31, label %29, label %30, !dbg !139, !prof !70

29:                                               ; preds = %14
  tail call void @"const_recompute_T::Boolean"(), !dbg !139
  br label %30, !dbg !139

30:                                               ; preds = %14, %29
  %31 = load i64, i64* @"guarded_const_T::Boolean", align 8, !dbg !139
  %32 = load i64, i64* @"guard_epoch_T::Boolean", align 8, !dbg !139
  %33 = load i64, i64* @ruby_vm_global_constant_state, align 8, !dbg !139, !tbaa !68
  %guardUpdated32 = icmp eq i64 %32, %33, !dbg !139
  tail call void @llvm.assume(i1 %guardUpdated32), !dbg !139
  %34 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 1, !dbg !139
  %35 = load i64*, i64** %34, align 8, !dbg !139
  store i64 %send34, i64* %35, align 8, !dbg !139, !tbaa !6
  %36 = getelementptr inbounds i64, i64* %35, i64 1, !dbg !139
  store i64 %31, i64* %36, align 8, !dbg !139, !tbaa !6
  %37 = getelementptr inbounds i64, i64* %36, i64 1, !dbg !139
  store i64* %37, i64** %34, align 8, !dbg !139
  %send36 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_returns.10, i64 0), !dbg !139
  ret i64 %send36, !dbg !140
}

; Function Attrs: ssp
define internal i64 @"func_<root>.17<static-init>$152$block_4"(i64 %firstYieldArgRaw, i64 %localsOffset, i32 %argc, i64* nocapture nofree readnone %argArray, i64 %blockArg) #7 !dbg !141 {
functionEntryInitializers:
  %0 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !14
  %1 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %0, i64 0, i32 2
  %2 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %1, align 8, !tbaa !58
  %3 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 3
  %4 = load i64, i64* %3, align 8, !tbaa !121
  %stackFrame = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.17<static-init>$152$block_4", align 8
  %5 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 2
  store %struct.rb_iseq_struct* %stackFrame, %struct.rb_iseq_struct** %5, align 8, !tbaa !59
  %6 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 4
  %7 = load i64*, i64** %6, align 8, !tbaa !61
  %8 = load i64, i64* %7, align 8, !tbaa !6
  %9 = and i64 %8, -129
  store i64 %9, i64* %7, align 8, !tbaa !6
  %10 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 0
  store i64* getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i64 0, i64 22), i64** %10, align 8, !tbaa !14
  %rubyId_x = load i64, i64* @rubyIdPrecomputed_x, align 8, !dbg !142
  %rawSym = tail call i64 @rb_id2sym(i64 %rubyId_x), !dbg !142
  %rubyId_y = load i64, i64* @rubyIdPrecomputed_y, align 8, !dbg !143
  %rawSym16 = tail call i64 @rb_id2sym(i64 %rubyId_y), !dbg !143
  %11 = load i64, i64* @guard_epoch_T, align 8, !dbg !144
  %12 = load i64, i64* @ruby_vm_global_constant_state, align 8, !dbg !144, !tbaa !68
  %needTakeSlowPath = icmp ne i64 %11, %12, !dbg !144
  br i1 %needTakeSlowPath, label %13, label %14, !dbg !144, !prof !70

13:                                               ; preds = %functionEntryInitializers
  tail call void @const_recompute_T(), !dbg !144
  br label %14, !dbg !144

14:                                               ; preds = %functionEntryInitializers, %13
  %15 = load i64, i64* @guarded_const_T, align 8, !dbg !144
  %16 = load i64, i64* @guard_epoch_T, align 8, !dbg !144
  %17 = load i64, i64* @ruby_vm_global_constant_state, align 8, !dbg !144, !tbaa !68
  %guardUpdated = icmp eq i64 %16, %17, !dbg !144
  tail call void @llvm.assume(i1 %guardUpdated), !dbg !144
  %18 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 1, !dbg !144
  %19 = load i64*, i64** %18, align 8, !dbg !144
  store i64 %15, i64* %19, align 8, !dbg !144, !tbaa !6
  %20 = getelementptr inbounds i64, i64* %19, i64 1, !dbg !144
  store i64* %20, i64** %18, align 8, !dbg !144
  %send = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_untyped.12, i64 0), !dbg !144
  %21 = load i64, i64* @rb_cFloat, align 8, !dbg !145
  %22 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 1, !dbg !145
  %23 = load i64*, i64** %22, align 8, !dbg !145
  store i64 %4, i64* %23, align 8, !dbg !145, !tbaa !6
  %24 = getelementptr inbounds i64, i64* %23, i64 1, !dbg !145
  store i64 %21, i64* %24, align 8, !dbg !145, !tbaa !6
  %25 = getelementptr inbounds i64, i64* %24, i64 1, !dbg !145
  store i64 %send, i64* %25, align 8, !dbg !145, !tbaa !6
  %26 = getelementptr inbounds i64, i64* %25, i64 1, !dbg !145
  store i64* %26, i64** %22, align 8, !dbg !145
  %send34 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_params.13, i64 0), !dbg !145
  %27 = load i64, i64* @"guard_epoch_T::Boolean", align 8, !dbg !145
  %28 = load i64, i64* @ruby_vm_global_constant_state, align 8, !dbg !145, !tbaa !68
  %needTakeSlowPath31 = icmp ne i64 %27, %28, !dbg !145
  br i1 %needTakeSlowPath31, label %29, label %30, !dbg !145, !prof !70

29:                                               ; preds = %14
  tail call void @"const_recompute_T::Boolean"(), !dbg !145
  br label %30, !dbg !145

30:                                               ; preds = %14, %29
  %31 = load i64, i64* @"guarded_const_T::Boolean", align 8, !dbg !145
  %32 = load i64, i64* @"guard_epoch_T::Boolean", align 8, !dbg !145
  %33 = load i64, i64* @ruby_vm_global_constant_state, align 8, !dbg !145, !tbaa !68
  %guardUpdated32 = icmp eq i64 %32, %33, !dbg !145
  tail call void @llvm.assume(i1 %guardUpdated32), !dbg !145
  %34 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 1, !dbg !145
  %35 = load i64*, i64** %34, align 8, !dbg !145
  store i64 %send34, i64* %35, align 8, !dbg !145, !tbaa !6
  %36 = getelementptr inbounds i64, i64* %35, i64 1, !dbg !145
  store i64 %31, i64* %36, align 8, !dbg !145, !tbaa !6
  %37 = getelementptr inbounds i64, i64* %36, i64 1, !dbg !145
  store i64* %37, i64** %34, align 8, !dbg !145
  %send36 = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_returns.14, i64 0), !dbg !145
  ret i64 %send36, !dbg !146
}

; Function Attrs: ssp
define void @Init_float-intrinsics() local_unnamed_addr #7 {
entry:
  %locals.i174.i = alloca i64, align 8
  %locals.i172.i = alloca i64, i32 0, align 8
  %locals.i170.i = alloca i64, i32 0, align 8
  %locals.i168.i = alloca i64, i32 0, align 8
  %locals.i.i = alloca i64, i32 0, align 8
  %keywords.i = alloca i64, i32 2, align 8, !dbg !125
  %keywords17.i = alloca i64, i32 2, align 8, !dbg !132
  %keywords34.i = alloca i64, i32 2, align 8, !dbg !139
  %keywords49.i = alloca i64, i32 2, align 8, !dbg !145
  %realpath = tail call i64 @sorbet_readRealpath()
  %0 = bitcast i64* %keywords.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0)
  %1 = bitcast i64* %keywords17.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1)
  %2 = bitcast i64* %keywords34.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2)
  %3 = bitcast i64* %keywords49.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3)
  %4 = tail call i64 @rb_intern2(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @str_plus, i64 0, i64 0), i64 noundef 4) #15
  store i64 %4, i64* @rubyIdPrecomputed_plus, align 8
  %5 = tail call i64 @rb_intern2(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @"str_+", i64 0, i64 0), i64 noundef 1) #15
  %6 = tail call i64 @rb_intern2(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @str_minus, i64 0, i64 0), i64 noundef 5) #15
  store i64 %6, i64* @rubyIdPrecomputed_minus, align 8
  %7 = tail call i64 @rb_intern2(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @str_-, i64 0, i64 0), i64 noundef 1) #15
  store i64 %7, i64* @rubyIdPrecomputed_-, align 8
  %8 = tail call i64 @rb_intern2(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @str_lt, i64 0, i64 0), i64 noundef 2) #15
  store i64 %8, i64* @rubyIdPrecomputed_lt, align 8
  %9 = tail call i64 @rb_intern2(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @"str_<", i64 0, i64 0), i64 noundef 1) #15
  %10 = tail call i64 @rb_intern2(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @str_lte, i64 0, i64 0), i64 noundef 3) #15
  store i64 %10, i64* @rubyIdPrecomputed_lte, align 8
  %11 = tail call i64 @rb_intern2(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @"str_<=", i64 0, i64 0), i64 noundef 2) #15
  %12 = tail call i64 @rb_intern2(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @"str_<top (required)>", i64 0, i64 0), i64 noundef 16) #15
  store i64 %12, i64* @"rubyIdPrecomputed_<top (required)>", align 8
  %13 = tail call i64 @rb_intern2(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @"str_<block-call>", i64 0, i64 0), i64 noundef 12) #15
  store i64 %13, i64* @"rubyIdPrecomputed_<block-call>", align 8
  %14 = tail call i64 @rb_intern2(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @"str_block in <top (required)>", i64 0, i64 0), i64 noundef 25) #15
  store i64 %14, i64* @"rubyIdPrecomputed_block in <top (required)>", align 8
  %15 = tail call i64 @rb_intern2(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @str_sig, i64 0, i64 0), i64 noundef 3) #15
  store i64 %15, i64* @rubyIdPrecomputed_sig, align 8
  %16 = tail call i64 @rb_intern2(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @str_x, i64 0, i64 0), i64 noundef 1) #15
  store i64 %16, i64* @rubyIdPrecomputed_x, align 8
  %17 = tail call i64 @rb_intern2(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @str_y, i64 0, i64 0), i64 noundef 1) #15
  store i64 %17, i64* @rubyIdPrecomputed_y, align 8
  %18 = tail call i64 @rb_intern2(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @str_untyped, i64 0, i64 0), i64 noundef 7) #15
  store i64 %18, i64* @rubyIdPrecomputed_untyped, align 8
  %19 = tail call i64 @rb_intern2(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @str_params, i64 0, i64 0), i64 noundef 6) #15
  store i64 %19, i64* @rubyIdPrecomputed_params, align 8
  %20 = tail call i64 @rb_intern2(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @str_returns, i64 0, i64 0), i64 noundef 7) #15
  store i64 %20, i64* @rubyIdPrecomputed_returns, align 8
  %21 = tail call i64 @rb_intern2(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @str_extend, i64 0, i64 0), i64 noundef 6) #15
  store i64 %21, i64* @rubyIdPrecomputed_extend, align 8
  %22 = tail call i64 @rb_intern2(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @str_normal, i64 0, i64 0), i64 noundef 6) #15
  store i64 %22, i64* @rubyIdPrecomputed_normal, align 8
  %23 = tail call i64 @rb_intern2(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @str_p, i64 0, i64 0), i64 noundef 1) #15
  store i64 %23, i64* @rubyIdPrecomputed_p, align 8
  %24 = tail call i64 @rb_intern2(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @str_Rational, i64 0, i64 0), i64 noundef 8) #15
  store i64 %24, i64* @rubyIdPrecomputed_Rational, align 8
  %25 = tail call i64 @rb_intern2(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @str_Complex, i64 0, i64 0), i64 noundef 7) #15
  store i64 %25, i64* @rubyIdPrecomputed_Complex, align 8
  %26 = tail call i64 @sorbet_vm_fstring_new(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @str_plus, i64 0, i64 0), i64 noundef 4) #15
  tail call void @rb_gc_register_mark_object(i64 %26) #15
  store i64 %26, i64* @rubyStrFrozen_plus, align 8
  %27 = tail call i64 @sorbet_vm_fstring_new(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @"str_test/testdata/compiler/float-intrinsics.rb", i64 0, i64 0), i64 noundef 42) #15
  tail call void @rb_gc_register_mark_object(i64 %27) #15
  store i64 %27, i64* @"rubyStrFrozen_test/testdata/compiler/float-intrinsics.rb", align 8
  tail call void @sorbet_initLineNumberInfo(%struct.SorbetLineNumberInfo* noundef @fileLineNumberInfo, i64* noundef getelementptr inbounds ([49 x i64], [49 x i64]* @iseqEncodedArray, i32 0, i32 0), i32 noundef 49)
  %rubyId_plus.i.i = load i64, i64* @rubyIdPrecomputed_plus, align 8
  %rubyStr_plus.i.i = load i64, i64* @rubyStrFrozen_plus, align 8
  %"rubyStr_test/testdata/compiler/float-intrinsics.rb.i.i" = load i64, i64* @"rubyStrFrozen_test/testdata/compiler/float-intrinsics.rb", align 8
  %28 = call %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64 %rubyStr_plus.i.i, i64 %rubyId_plus.i.i, i64 %"rubyStr_test/testdata/compiler/float-intrinsics.rb.i.i", i64 %realpath, %struct.rb_iseq_struct* noundef null, i32 noundef 1, i32 noundef 8, %struct.SorbetLineNumberInfo* noundef @fileLineNumberInfo, i64* noundef nonnull %locals.i.i, i32 noundef 0, i32 noundef 2)
  store %struct.rb_iseq_struct* %28, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_Object#4plus", align 8
  %29 = call i64 @sorbet_vm_fstring_new(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @str_minus, i64 0, i64 0), i64 noundef 5) #15
  call void @rb_gc_register_mark_object(i64 %29) #15
  %rubyId_minus.i.i = load i64, i64* @rubyIdPrecomputed_minus, align 8
  %"rubyStr_test/testdata/compiler/float-intrinsics.rb.i167.i" = load i64, i64* @"rubyStrFrozen_test/testdata/compiler/float-intrinsics.rb", align 8
  %30 = call %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64 %29, i64 %rubyId_minus.i.i, i64 %"rubyStr_test/testdata/compiler/float-intrinsics.rb.i167.i", i64 %realpath, %struct.rb_iseq_struct* noundef null, i32 noundef 1, i32 noundef 13, %struct.SorbetLineNumberInfo* noundef @fileLineNumberInfo, i64* noundef nonnull %locals.i168.i, i32 noundef 0, i32 noundef 2)
  store %struct.rb_iseq_struct* %30, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_Object#5minus", align 8
  %rubyId_-.i = load i64, i64* @rubyIdPrecomputed_-, align 8, !dbg !37
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_-, i64 %rubyId_-.i, i32 noundef 16, i32 noundef 1, i32 noundef 0, i64* noundef null), !dbg !37
  %31 = call i64 @sorbet_vm_fstring_new(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @str_lt, i64 0, i64 0), i64 noundef 2) #15
  call void @rb_gc_register_mark_object(i64 %31) #15
  %rubyId_lt.i.i = load i64, i64* @rubyIdPrecomputed_lt, align 8
  %"rubyStr_test/testdata/compiler/float-intrinsics.rb.i169.i" = load i64, i64* @"rubyStrFrozen_test/testdata/compiler/float-intrinsics.rb", align 8
  %32 = call %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64 %31, i64 %rubyId_lt.i.i, i64 %"rubyStr_test/testdata/compiler/float-intrinsics.rb.i169.i", i64 %realpath, %struct.rb_iseq_struct* noundef null, i32 noundef 1, i32 noundef 18, %struct.SorbetLineNumberInfo* noundef @fileLineNumberInfo, i64* noundef nonnull %locals.i170.i, i32 noundef 0, i32 noundef 2)
  store %struct.rb_iseq_struct* %32, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_Object#2lt", align 8
  %33 = call i64 @sorbet_vm_fstring_new(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @str_lte, i64 0, i64 0), i64 noundef 3) #15
  call void @rb_gc_register_mark_object(i64 %33) #15
  %rubyId_lte.i.i = load i64, i64* @rubyIdPrecomputed_lte, align 8
  %"rubyStr_test/testdata/compiler/float-intrinsics.rb.i171.i" = load i64, i64* @"rubyStrFrozen_test/testdata/compiler/float-intrinsics.rb", align 8
  %34 = call %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64 %33, i64 %rubyId_lte.i.i, i64 %"rubyStr_test/testdata/compiler/float-intrinsics.rb.i171.i", i64 %realpath, %struct.rb_iseq_struct* noundef null, i32 noundef 1, i32 noundef 23, %struct.SorbetLineNumberInfo* noundef @fileLineNumberInfo, i64* noundef nonnull %locals.i172.i, i32 noundef 0, i32 noundef 2)
  store %struct.rb_iseq_struct* %34, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_Object#3lte", align 8
  %35 = call i64 @sorbet_vm_fstring_new(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @"str_<top (required)>", i64 0, i64 0), i64 noundef 16) #15
  call void @rb_gc_register_mark_object(i64 %35) #15
  %36 = bitcast i64* %locals.i174.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36)
  %"rubyId_<top (required)>.i.i" = load i64, i64* @"rubyIdPrecomputed_<top (required)>", align 8
  %"rubyStr_test/testdata/compiler/float-intrinsics.rb.i173.i" = load i64, i64* @"rubyStrFrozen_test/testdata/compiler/float-intrinsics.rb", align 8
  %"rubyId_<block-call>.i.i" = load i64, i64* @"rubyIdPrecomputed_<block-call>", align 8
  store i64 %"rubyId_<block-call>.i.i", i64* %locals.i174.i, align 8
  %37 = call %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64 %35, i64 %"rubyId_<top (required)>.i.i", i64 %"rubyStr_test/testdata/compiler/float-intrinsics.rb.i173.i", i64 %realpath, %struct.rb_iseq_struct* noundef null, i32 noundef 0, i32 noundef 5, %struct.SorbetLineNumberInfo* noundef @fileLineNumberInfo, i64* noundef nonnull align 8 %locals.i174.i, i32 noundef 1, i32 noundef 4)
  store %struct.rb_iseq_struct* %37, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.17<static-init>$152", align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36)
  %38 = call i64 @sorbet_vm_fstring_new(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @"str_block in <top (required)>", i64 0, i64 0), i64 noundef 25) #15
  call void @rb_gc_register_mark_object(i64 %38) #15
  store i64 %38, i64* @"rubyStrFrozen_block in <top (required)>", align 8
  %stackFrame.i.i = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.17<static-init>$152", align 8
  %"rubyId_block in <top (required)>.i.i" = load i64, i64* @"rubyIdPrecomputed_block in <top (required)>", align 8
  %"rubyStr_test/testdata/compiler/float-intrinsics.rb.i175.i" = load i64, i64* @"rubyStrFrozen_test/testdata/compiler/float-intrinsics.rb", align 8
  %39 = call %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64 %38, i64 %"rubyId_block in <top (required)>.i.i", i64 %"rubyStr_test/testdata/compiler/float-intrinsics.rb.i175.i", i64 %realpath, %struct.rb_iseq_struct* %stackFrame.i.i, i32 noundef 2, i32 noundef 5, %struct.SorbetLineNumberInfo* noundef @fileLineNumberInfo, i64* noundef null, i32 noundef 0, i32 noundef 4)
  store %struct.rb_iseq_struct* %39, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.17<static-init>$152$block_1", align 8
  %stackFrame.i176.i = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.17<static-init>$152", align 8
  %"rubyId_block in <top (required)>.i177.i" = load i64, i64* @"rubyIdPrecomputed_block in <top (required)>", align 8
  %"rubyStr_block in <top (required)>.i178.i" = load i64, i64* @"rubyStrFrozen_block in <top (required)>", align 8
  %"rubyStr_test/testdata/compiler/float-intrinsics.rb.i179.i" = load i64, i64* @"rubyStrFrozen_test/testdata/compiler/float-intrinsics.rb", align 8
  %40 = call %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64 %"rubyStr_block in <top (required)>.i178.i", i64 %"rubyId_block in <top (required)>.i177.i", i64 %"rubyStr_test/testdata/compiler/float-intrinsics.rb.i179.i", i64 %realpath, %struct.rb_iseq_struct* %stackFrame.i176.i, i32 noundef 2, i32 noundef 5, %struct.SorbetLineNumberInfo* noundef @fileLineNumberInfo, i64* noundef null, i32 noundef 0, i32 noundef 4)
  store %struct.rb_iseq_struct* %40, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.17<static-init>$152$block_2", align 8
  %stackFrame.i180.i = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.17<static-init>$152", align 8
  %"rubyId_block in <top (required)>.i181.i" = load i64, i64* @"rubyIdPrecomputed_block in <top (required)>", align 8
  %"rubyStr_block in <top (required)>.i182.i" = load i64, i64* @"rubyStrFrozen_block in <top (required)>", align 8
  %"rubyStr_test/testdata/compiler/float-intrinsics.rb.i183.i" = load i64, i64* @"rubyStrFrozen_test/testdata/compiler/float-intrinsics.rb", align 8
  %41 = call %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64 %"rubyStr_block in <top (required)>.i182.i", i64 %"rubyId_block in <top (required)>.i181.i", i64 %"rubyStr_test/testdata/compiler/float-intrinsics.rb.i183.i", i64 %realpath, %struct.rb_iseq_struct* %stackFrame.i180.i, i32 noundef 2, i32 noundef 5, %struct.SorbetLineNumberInfo* noundef @fileLineNumberInfo, i64* noundef null, i32 noundef 0, i32 noundef 4)
  store %struct.rb_iseq_struct* %41, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.17<static-init>$152$block_3", align 8
  %stackFrame.i184.i = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.17<static-init>$152", align 8
  %"rubyId_block in <top (required)>.i185.i" = load i64, i64* @"rubyIdPrecomputed_block in <top (required)>", align 8
  %"rubyStr_block in <top (required)>.i186.i" = load i64, i64* @"rubyStrFrozen_block in <top (required)>", align 8
  %"rubyStr_test/testdata/compiler/float-intrinsics.rb.i187.i" = load i64, i64* @"rubyStrFrozen_test/testdata/compiler/float-intrinsics.rb", align 8
  %42 = call %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64 %"rubyStr_block in <top (required)>.i186.i", i64 %"rubyId_block in <top (required)>.i185.i", i64 %"rubyStr_test/testdata/compiler/float-intrinsics.rb.i187.i", i64 %realpath, %struct.rb_iseq_struct* %stackFrame.i184.i, i32 noundef 2, i32 noundef 5, %struct.SorbetLineNumberInfo* noundef @fileLineNumberInfo, i64* noundef null, i32 noundef 0, i32 noundef 4)
  store %struct.rb_iseq_struct* %42, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.17<static-init>$152$block_4", align 8
  %rubyId_sig.i = load i64, i64* @rubyIdPrecomputed_sig, align 8, !dbg !63
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_sig, i64 %rubyId_sig.i, i32 noundef 20, i32 noundef 3, i32 noundef 0, i64* noundef null), !dbg !63
  %rubyId_untyped.i = load i64, i64* @rubyIdPrecomputed_untyped, align 8, !dbg !124
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_untyped, i64 %rubyId_untyped.i, i32 noundef 16, i32 noundef 0, i32 noundef 0, i64* noundef null), !dbg !124
  %rubyId_params.i = load i64, i64* @rubyIdPrecomputed_params, align 8, !dbg !125
  %rubyId_x.i = load i64, i64* @rubyIdPrecomputed_x, align 8, !dbg !125
  %43 = call i64 @rb_id2sym(i64 %rubyId_x.i) #15, !dbg !125
  store i64 %43, i64* %keywords.i, align 8, !dbg !125
  %rubyId_y.i = load i64, i64* @rubyIdPrecomputed_y, align 8, !dbg !125
  %44 = call i64 @rb_id2sym(i64 %rubyId_y.i) #15, !dbg !125
  %45 = getelementptr i64, i64* %keywords.i, i32 1, !dbg !125
  store i64 %44, i64* %45, align 8, !dbg !125
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_params, i64 %rubyId_params.i, i32 noundef 68, i32 noundef 2, i32 noundef 2, i64* noundef nonnull %keywords.i), !dbg !125
  %rubyId_untyped8.i = load i64, i64* @rubyIdPrecomputed_untyped, align 8, !dbg !126
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_untyped.1, i64 %rubyId_untyped8.i, i32 noundef 16, i32 noundef 0, i32 noundef 0, i64* noundef null), !dbg !126
  %rubyId_returns.i = load i64, i64* @rubyIdPrecomputed_returns, align 8, !dbg !125
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_returns, i64 %rubyId_returns.i, i32 noundef 16, i32 noundef 1, i32 noundef 0, i64* noundef null), !dbg !125
  %rubyId_sig11.i = load i64, i64* @rubyIdPrecomputed_sig, align 8, !dbg !64
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_sig.2, i64 %rubyId_sig11.i, i32 noundef 20, i32 noundef 3, i32 noundef 0, i64* noundef null), !dbg !64
  %rubyId_untyped14.i = load i64, i64* @rubyIdPrecomputed_untyped, align 8, !dbg !131
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_untyped.3, i64 %rubyId_untyped14.i, i32 noundef 16, i32 noundef 0, i32 noundef 0, i64* noundef null), !dbg !131
  %rubyId_params16.i = load i64, i64* @rubyIdPrecomputed_params, align 8, !dbg !132
  %rubyId_x18.i = load i64, i64* @rubyIdPrecomputed_x, align 8, !dbg !132
  %46 = call i64 @rb_id2sym(i64 %rubyId_x18.i) #15, !dbg !132
  store i64 %46, i64* %keywords17.i, align 8, !dbg !132
  %rubyId_y20.i = load i64, i64* @rubyIdPrecomputed_y, align 8, !dbg !132
  %47 = call i64 @rb_id2sym(i64 %rubyId_y20.i) #15, !dbg !132
  %48 = getelementptr i64, i64* %keywords17.i, i32 1, !dbg !132
  store i64 %47, i64* %48, align 8, !dbg !132
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_params.4, i64 %rubyId_params16.i, i32 noundef 68, i32 noundef 2, i32 noundef 2, i64* noundef nonnull %keywords17.i), !dbg !132
  %rubyId_untyped24.i = load i64, i64* @rubyIdPrecomputed_untyped, align 8, !dbg !133
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_untyped.5, i64 %rubyId_untyped24.i, i32 noundef 16, i32 noundef 0, i32 noundef 0, i64* noundef null), !dbg !133
  %rubyId_returns26.i = load i64, i64* @rubyIdPrecomputed_returns, align 8, !dbg !132
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_returns.6, i64 %rubyId_returns26.i, i32 noundef 16, i32 noundef 1, i32 noundef 0, i64* noundef null), !dbg !132
  %rubyId_sig28.i = load i64, i64* @rubyIdPrecomputed_sig, align 8, !dbg !65
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_sig.7, i64 %rubyId_sig28.i, i32 noundef 20, i32 noundef 3, i32 noundef 0, i64* noundef null), !dbg !65
  %rubyId_untyped31.i = load i64, i64* @rubyIdPrecomputed_untyped, align 8, !dbg !138
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_untyped.8, i64 %rubyId_untyped31.i, i32 noundef 16, i32 noundef 0, i32 noundef 0, i64* noundef null), !dbg !138
  %rubyId_params33.i = load i64, i64* @rubyIdPrecomputed_params, align 8, !dbg !139
  %rubyId_x35.i = load i64, i64* @rubyIdPrecomputed_x, align 8, !dbg !139
  %49 = call i64 @rb_id2sym(i64 %rubyId_x35.i) #15, !dbg !139
  store i64 %49, i64* %keywords34.i, align 8, !dbg !139
  %rubyId_y37.i = load i64, i64* @rubyIdPrecomputed_y, align 8, !dbg !139
  %50 = call i64 @rb_id2sym(i64 %rubyId_y37.i) #15, !dbg !139
  %51 = getelementptr i64, i64* %keywords34.i, i32 1, !dbg !139
  store i64 %50, i64* %51, align 8, !dbg !139
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_params.9, i64 %rubyId_params33.i, i32 noundef 68, i32 noundef 2, i32 noundef 2, i64* noundef nonnull %keywords34.i), !dbg !139
  %rubyId_returns41.i = load i64, i64* @rubyIdPrecomputed_returns, align 8, !dbg !139
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_returns.10, i64 %rubyId_returns41.i, i32 noundef 16, i32 noundef 1, i32 noundef 0, i64* noundef null), !dbg !139
  %rubyId_sig43.i = load i64, i64* @rubyIdPrecomputed_sig, align 8, !dbg !66
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_sig.11, i64 %rubyId_sig43.i, i32 noundef 20, i32 noundef 3, i32 noundef 0, i64* noundef null), !dbg !66
  %rubyId_untyped46.i = load i64, i64* @rubyIdPrecomputed_untyped, align 8, !dbg !144
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_untyped.12, i64 %rubyId_untyped46.i, i32 noundef 16, i32 noundef 0, i32 noundef 0, i64* noundef null), !dbg !144
  %rubyId_params48.i = load i64, i64* @rubyIdPrecomputed_params, align 8, !dbg !145
  %rubyId_x50.i = load i64, i64* @rubyIdPrecomputed_x, align 8, !dbg !145
  %52 = call i64 @rb_id2sym(i64 %rubyId_x50.i) #15, !dbg !145
  store i64 %52, i64* %keywords49.i, align 8, !dbg !145
  %rubyId_y52.i = load i64, i64* @rubyIdPrecomputed_y, align 8, !dbg !145
  %53 = call i64 @rb_id2sym(i64 %rubyId_y52.i) #15, !dbg !145
  %54 = getelementptr i64, i64* %keywords49.i, i32 1, !dbg !145
  store i64 %53, i64* %54, align 8, !dbg !145
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_params.13, i64 %rubyId_params48.i, i32 noundef 68, i32 noundef 2, i32 noundef 2, i64* noundef nonnull %keywords49.i), !dbg !145
  %rubyId_returns56.i = load i64, i64* @rubyIdPrecomputed_returns, align 8, !dbg !145
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_returns.14, i64 %rubyId_returns56.i, i32 noundef 16, i32 noundef 1, i32 noundef 0, i64* noundef null), !dbg !145
  %rubyId_extend.i = load i64, i64* @rubyIdPrecomputed_extend, align 8, !dbg !67
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_extend, i64 %rubyId_extend.i, i32 noundef 20, i32 noundef 1, i32 noundef 0, i64* noundef null), !dbg !67
  %rubyId_plus.i = load i64, i64* @rubyIdPrecomputed_plus, align 8, !dbg !80
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_plus, i64 %rubyId_plus.i, i32 noundef 20, i32 noundef 2, i32 noundef 0, i64* noundef null), !dbg !80
  %rubyId_p.i = load i64, i64* @rubyIdPrecomputed_p, align 8, !dbg !81
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_p, i64 %rubyId_p.i, i32 noundef 20, i32 noundef 1, i32 noundef 0, i64* noundef null), !dbg !81
  %rubyId_minus.i = load i64, i64* @rubyIdPrecomputed_minus, align 8, !dbg !82
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_minus, i64 %rubyId_minus.i, i32 noundef 20, i32 noundef 2, i32 noundef 0, i64* noundef null), !dbg !82
  %rubyId_p66.i = load i64, i64* @rubyIdPrecomputed_p, align 8, !dbg !83
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_p.15, i64 %rubyId_p66.i, i32 noundef 20, i32 noundef 1, i32 noundef 0, i64* noundef null), !dbg !83
  %rubyId_lt.i = load i64, i64* @rubyIdPrecomputed_lt, align 8, !dbg !84
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_lt, i64 %rubyId_lt.i, i32 noundef 20, i32 noundef 2, i32 noundef 0, i64* noundef null), !dbg !84
  %rubyId_p71.i = load i64, i64* @rubyIdPrecomputed_p, align 8, !dbg !85
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_p.16, i64 %rubyId_p71.i, i32 noundef 20, i32 noundef 1, i32 noundef 0, i64* noundef null), !dbg !85
  %rubyId_lt74.i = load i64, i64* @rubyIdPrecomputed_lt, align 8, !dbg !86
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_lt.17, i64 %rubyId_lt74.i, i32 noundef 20, i32 noundef 2, i32 noundef 0, i64* noundef null), !dbg !86
  %rubyId_p77.i = load i64, i64* @rubyIdPrecomputed_p, align 8, !dbg !87
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_p.18, i64 %rubyId_p77.i, i32 noundef 20, i32 noundef 1, i32 noundef 0, i64* noundef null), !dbg !87
  %rubyId_lte.i = load i64, i64* @rubyIdPrecomputed_lte, align 8, !dbg !88
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_lte, i64 %rubyId_lte.i, i32 noundef 20, i32 noundef 2, i32 noundef 0, i64* noundef null), !dbg !88
  %rubyId_p82.i = load i64, i64* @rubyIdPrecomputed_p, align 8, !dbg !89
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_p.19, i64 %rubyId_p82.i, i32 noundef 20, i32 noundef 1, i32 noundef 0, i64* noundef null), !dbg !89
  %rubyId_lte85.i = load i64, i64* @rubyIdPrecomputed_lte, align 8, !dbg !90
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_lte.20, i64 %rubyId_lte85.i, i32 noundef 20, i32 noundef 2, i32 noundef 0, i64* noundef null), !dbg !90
  %rubyId_p88.i = load i64, i64* @rubyIdPrecomputed_p, align 8, !dbg !91
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_p.21, i64 %rubyId_p88.i, i32 noundef 20, i32 noundef 1, i32 noundef 0, i64* noundef null), !dbg !91
  %rubyId_lte91.i = load i64, i64* @rubyIdPrecomputed_lte, align 8, !dbg !92
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_lte.22, i64 %rubyId_lte91.i, i32 noundef 20, i32 noundef 2, i32 noundef 0, i64* noundef null), !dbg !92
  %rubyId_p94.i = load i64, i64* @rubyIdPrecomputed_p, align 8, !dbg !93
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_p.23, i64 %rubyId_p94.i, i32 noundef 20, i32 noundef 1, i32 noundef 0, i64* noundef null), !dbg !93
  %rubyId_plus97.i = load i64, i64* @rubyIdPrecomputed_plus, align 8, !dbg !94
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_plus.24, i64 %rubyId_plus97.i, i32 noundef 20, i32 noundef 2, i32 noundef 0, i64* noundef null), !dbg !94
  %rubyId_p100.i = load i64, i64* @rubyIdPrecomputed_p, align 8, !dbg !95
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_p.25, i64 %rubyId_p100.i, i32 noundef 20, i32 noundef 1, i32 noundef 0, i64* noundef null), !dbg !95
  %55 = call i64 @sorbet_vm_fstring_new(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @str_8.9, i64 0, i64 0), i64 noundef 3) #15
  call void @rb_gc_register_mark_object(i64 %55) #15
  store i64 %55, i64* @rubyStrFrozen_8.9, align 8
  %rubyId_Rational.i = load i64, i64* @rubyIdPrecomputed_Rational, align 8, !dbg !96
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_Rational, i64 %rubyId_Rational.i, i32 noundef 16, i32 noundef 1, i32 noundef 0, i64* noundef null), !dbg !96
  %rubyId_plus104.i = load i64, i64* @rubyIdPrecomputed_plus, align 8, !dbg !97
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_plus.26, i64 %rubyId_plus104.i, i32 noundef 20, i32 noundef 2, i32 noundef 0, i64* noundef null), !dbg !97
  %rubyId_p107.i = load i64, i64* @rubyIdPrecomputed_p, align 8, !dbg !98
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_p.27, i64 %rubyId_p107.i, i32 noundef 20, i32 noundef 1, i32 noundef 0, i64* noundef null), !dbg !98
  %56 = call i64 @sorbet_vm_fstring_new(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @str_5, i64 0, i64 0), i64 noundef 1) #15
  call void @rb_gc_register_mark_object(i64 %56) #15
  store i64 %56, i64* @rubyStrFrozen_5, align 8
  %rubyId_Complex.i = load i64, i64* @rubyIdPrecomputed_Complex, align 8, !dbg !99
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_Complex, i64 %rubyId_Complex.i, i32 noundef 16, i32 noundef 2, i32 noundef 0, i64* noundef null), !dbg !99
  %rubyId_plus111.i = load i64, i64* @rubyIdPrecomputed_plus, align 8, !dbg !100
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_plus.28, i64 %rubyId_plus111.i, i32 noundef 20, i32 noundef 2, i32 noundef 0, i64* noundef null), !dbg !100
  %rubyId_p114.i = load i64, i64* @rubyIdPrecomputed_p, align 8, !dbg !101
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_p.29, i64 %rubyId_p114.i, i32 noundef 20, i32 noundef 1, i32 noundef 0, i64* noundef null), !dbg !101
  %rubyId_minus117.i = load i64, i64* @rubyIdPrecomputed_minus, align 8, !dbg !102
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_minus.30, i64 %rubyId_minus117.i, i32 noundef 20, i32 noundef 2, i32 noundef 0, i64* noundef null), !dbg !102
  %rubyId_p120.i = load i64, i64* @rubyIdPrecomputed_p, align 8, !dbg !103
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_p.31, i64 %rubyId_p120.i, i32 noundef 20, i32 noundef 1, i32 noundef 0, i64* noundef null), !dbg !103
  %57 = call i64 @sorbet_vm_fstring_new(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @str_15.4, i64 0, i64 0), i64 noundef 4) #15
  call void @rb_gc_register_mark_object(i64 %57) #15
  store i64 %57, i64* @rubyStrFrozen_15.4, align 8
  %rubyId_Rational123.i = load i64, i64* @rubyIdPrecomputed_Rational, align 8, !dbg !104
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_Rational.32, i64 %rubyId_Rational123.i, i32 noundef 16, i32 noundef 1, i32 noundef 0, i64* noundef null), !dbg !104
  %rubyId_minus125.i = load i64, i64* @rubyIdPrecomputed_minus, align 8, !dbg !105
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_minus.33, i64 %rubyId_minus125.i, i32 noundef 20, i32 noundef 2, i32 noundef 0, i64* noundef null), !dbg !105
  %rubyId_p128.i = load i64, i64* @rubyIdPrecomputed_p, align 8, !dbg !106
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_p.34, i64 %rubyId_p128.i, i32 noundef 20, i32 noundef 1, i32 noundef 0, i64* noundef null), !dbg !106
  %58 = call i64 @sorbet_vm_fstring_new(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @str_18, i64 0, i64 0), i64 noundef 2) #15
  call void @rb_gc_register_mark_object(i64 %58) #15
  store i64 %58, i64* @rubyStrFrozen_18, align 8
  %rubyId_Complex131.i = load i64, i64* @rubyIdPrecomputed_Complex, align 8, !dbg !107
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_Complex.35, i64 %rubyId_Complex131.i, i32 noundef 16, i32 noundef 2, i32 noundef 0, i64* noundef null), !dbg !107
  %rubyId_minus133.i = load i64, i64* @rubyIdPrecomputed_minus, align 8, !dbg !108
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_minus.36, i64 %rubyId_minus133.i, i32 noundef 20, i32 noundef 2, i32 noundef 0, i64* noundef null), !dbg !108
  %rubyId_p136.i = load i64, i64* @rubyIdPrecomputed_p, align 8, !dbg !109
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_p.37, i64 %rubyId_p136.i, i32 noundef 20, i32 noundef 1, i32 noundef 0, i64* noundef null), !dbg !109
  %rubyId_lt139.i = load i64, i64* @rubyIdPrecomputed_lt, align 8, !dbg !110
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_lt.38, i64 %rubyId_lt139.i, i32 noundef 20, i32 noundef 2, i32 noundef 0, i64* noundef null), !dbg !110
  %rubyId_p142.i = load i64, i64* @rubyIdPrecomputed_p, align 8, !dbg !111
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_p.39, i64 %rubyId_p142.i, i32 noundef 20, i32 noundef 1, i32 noundef 0, i64* noundef null), !dbg !111
  %59 = call i64 @sorbet_vm_fstring_new(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @str_25.4, i64 0, i64 0), i64 noundef 4) #15
  call void @rb_gc_register_mark_object(i64 %59) #15
  store i64 %59, i64* @rubyStrFrozen_25.4, align 8
  %rubyId_Rational145.i = load i64, i64* @rubyIdPrecomputed_Rational, align 8, !dbg !112
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_Rational.40, i64 %rubyId_Rational145.i, i32 noundef 16, i32 noundef 1, i32 noundef 0, i64* noundef null), !dbg !112
  %rubyId_lt147.i = load i64, i64* @rubyIdPrecomputed_lt, align 8, !dbg !113
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_lt.41, i64 %rubyId_lt147.i, i32 noundef 20, i32 noundef 2, i32 noundef 0, i64* noundef null), !dbg !113
  %rubyId_p150.i = load i64, i64* @rubyIdPrecomputed_p, align 8, !dbg !114
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_p.42, i64 %rubyId_p150.i, i32 noundef 20, i32 noundef 1, i32 noundef 0, i64* noundef null), !dbg !114
  %rubyId_lte153.i = load i64, i64* @rubyIdPrecomputed_lte, align 8, !dbg !115
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_lte.43, i64 %rubyId_lte153.i, i32 noundef 20, i32 noundef 2, i32 noundef 0, i64* noundef null), !dbg !115
  %rubyId_p156.i = load i64, i64* @rubyIdPrecomputed_p, align 8, !dbg !116
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_p.44, i64 %rubyId_p156.i, i32 noundef 20, i32 noundef 1, i32 noundef 0, i64* noundef null), !dbg !116
  %60 = call i64 @sorbet_vm_fstring_new(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @str_5.923, i64 0, i64 0), i64 noundef 5) #15
  call void @rb_gc_register_mark_object(i64 %60) #15
  store i64 %60, i64* @rubyStrFrozen_5.923, align 8
  %rubyId_Rational159.i = load i64, i64* @rubyIdPrecomputed_Rational, align 8, !dbg !117
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_Rational.45, i64 %rubyId_Rational159.i, i32 noundef 16, i32 noundef 1, i32 noundef 0, i64* noundef null), !dbg !117
  %rubyId_lte161.i = load i64, i64* @rubyIdPrecomputed_lte, align 8, !dbg !118
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_lte.46, i64 %rubyId_lte161.i, i32 noundef 20, i32 noundef 2, i32 noundef 0, i64* noundef null), !dbg !118
  %rubyId_p164.i = load i64, i64* @rubyIdPrecomputed_p, align 8, !dbg !119
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_p.47, i64 %rubyId_p164.i, i32 noundef 20, i32 noundef 1, i32 noundef 0, i64* noundef null), !dbg !119
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3)
  %61 = load %struct.rb_vm_struct*, %struct.rb_vm_struct** @ruby_current_vm_ptr, align 8, !tbaa !14
  %62 = getelementptr inbounds %struct.rb_vm_struct, %struct.rb_vm_struct* %61, i64 0, i32 18
  %63 = load i64, i64* %62, align 8, !tbaa !147
  %64 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !14
  %65 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %64, i64 0, i32 2
  %66 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %65, align 8, !tbaa !58
  call fastcc void @"func_<root>.17<static-init>$152"(i64 %63, %struct.rb_control_frame_struct* %66) #15
  ret void
}

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #8

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nofree nosync nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #9

; Function Attrs: cold minsize noreturn nounwind sspreq uwtable
define internal fastcc void @"func_Object#2lt.cold.1"(i64 %0) unnamed_addr #10 !dbg !155 {
newFuncRoot:
  tail call void @sorbet_cast_failure(i64 %0, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @"str_Return value", i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @"str_T::Boolean", i64 0, i64 0)) #13
  unreachable
}

; Function Attrs: cold minsize noreturn nounwind sspreq uwtable
define internal fastcc void @"func_Object#2lt.cold.3"(i64 %rawArg_x) unnamed_addr #10 !dbg !157 {
newFuncRoot:
  tail call void @sorbet_cast_failure(i64 %rawArg_x, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @str_sig, i64 0, i64 0), i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @str_Float, i64 0, i64 0)) #13, !dbg !158
  unreachable, !dbg !158
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.assume(i1 noundef) #11

; Function Attrs: ssp
define linkonce void @"const_recompute_T::Sig"() local_unnamed_addr #7 {
  %1 = tail call i64 @sorbet_getConstant(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"str_T::Sig", i64 0, i64 0), i64 6)
  store i64 %1, i64* @"guarded_const_T::Sig", align 8
  %2 = load i64, i64* @ruby_vm_global_constant_state, align 8, !tbaa !68
  store i64 %2, i64* @"guard_epoch_T::Sig", align 8
  ret void
}

; Function Attrs: ssp
define linkonce void @const_recompute_T() local_unnamed_addr #7 {
  %1 = tail call i64 @sorbet_getConstant(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str_T, i64 0, i64 0), i64 1)
  store i64 %1, i64* @guarded_const_T, align 8
  %2 = load i64, i64* @ruby_vm_global_constant_state, align 8, !tbaa !68
  store i64 %2, i64* @guard_epoch_T, align 8
  ret void
}

; Function Attrs: ssp
define linkonce void @"const_recompute_T::Boolean"() local_unnamed_addr #7 {
  %1 = tail call i64 @sorbet_getConstant(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"str_T::Boolean", i64 0, i64 0), i64 10)
  store i64 %1, i64* @"guarded_const_T::Boolean", align 8
  %2 = load i64, i64* @ruby_vm_global_constant_state, align 8, !tbaa !68
  store i64 %2, i64* @"guard_epoch_T::Boolean", align 8
  ret void
}

attributes #0 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { cold noreturn "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { allocsize(0,1) "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nosync nounwind willreturn }
attributes #5 = { nounwind ssp uwtable "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind sspreq uwtable }
attributes #7 = { ssp }
attributes #8 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #9 = { argmemonly nofree nosync nounwind willreturn writeonly }
attributes #10 = { cold minsize noreturn nounwind sspreq uwtable }
attributes #11 = { nofree nosync nounwind willreturn }
attributes #12 = { noreturn nounwind }
attributes #13 = { noreturn }
attributes #14 = { noinline }
attributes #15 = { nounwind }
attributes #16 = { nounwind allocsize(0,1) }

!llvm.module.flags = !{!0, !1, !2}
!llvm.dbg.cu = !{!3}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"cf-protection-return", i32 1}
!2 = !{i32 4, !"cf-protection-branch", i32 1}
!3 = distinct !DICompileUnit(language: DW_LANG_C, file: !4, producer: "Sorbet LLVM", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !5)
!4 = !DIFile(filename: "test/testdata/compiler/float-intrinsics.rb", directory: ".")
!5 = !{}
!6 = !{!7, !7, i64 0}
!7 = !{!"long", !8, i64 0}
!8 = !{!"omnipotent char", !9, i64 0}
!9 = !{!"Simple C/C++ TBAA"}
!10 = distinct !DISubprogram(name: "Object#plus", linkageName: "func_Object#4plus", scope: null, file: !4, line: 8, type: !11, scopeLine: 8, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3, retainedNodes: !5)
!11 = !DISubroutineType(types: !12)
!12 = !{!13}
!13 = !DIBasicType(name: "VALUE", size: 64, encoding: DW_ATE_signed)
!14 = !{!15, !15, i64 0}
!15 = !{!"any pointer", !8, i64 0}
!16 = !DILocation(line: 8, column: 1, scope: !10)
!17 = !{!"branch_weights", i32 4001, i32 4000000}
!18 = !DILocation(line: 8, column: 10, scope: !10)
!19 = !{!20, !7, i64 0}
!20 = !{!"RBasic", !7, i64 0, !7, i64 8}
!21 = !{!"branch_weights", i32 2000, i32 1}
!22 = !DILocation(line: 8, column: 13, scope: !10)
!23 = !DILocation(line: 9, column: 3, scope: !10)
!24 = !{!25}
!25 = distinct !{!25, !26, !"sorbet_int_rb_float_plus: argument 0"}
!26 = distinct !{!26, !"sorbet_int_rb_float_plus"}
!27 = !{!28, !29, i64 40}
!28 = !{!"rb_execution_context_struct", !15, i64 0, !7, i64 8, !15, i64 16, !15, i64 24, !15, i64 32, !29, i64 40, !29, i64 44, !15, i64 48, !15, i64 56, !15, i64 64, !7, i64 72, !7, i64 80, !15, i64 88, !7, i64 96, !15, i64 104, !15, i64 112, !7, i64 120, !7, i64 128, !8, i64 136, !8, i64 137, !7, i64 144, !30, i64 152}
!29 = !{!"int", !8, i64 0}
!30 = !{!"", !15, i64 0, !15, i64 8, !7, i64 16, !8, i64 24}
!31 = !{!28, !29, i64 44}
!32 = !{!28, !15, i64 56}
!33 = distinct !DISubprogram(name: "Object#minus", linkageName: "func_Object#5minus", scope: null, file: !4, line: 13, type: !11, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3, retainedNodes: !5)
!34 = !DILocation(line: 13, column: 1, scope: !33)
!35 = !DILocation(line: 13, column: 11, scope: !33)
!36 = !DILocation(line: 13, column: 14, scope: !33)
!37 = !DILocation(line: 14, column: 3, scope: !33)
!38 = distinct !DISubprogram(name: "Object#lt", linkageName: "func_Object#2lt", scope: null, file: !4, line: 18, type: !11, scopeLine: 18, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3, retainedNodes: !5)
!39 = !DILocation(line: 18, column: 1, scope: !38)
!40 = !DILocation(line: 18, column: 8, scope: !38)
!41 = !DILocation(line: 18, column: 11, scope: !38)
!42 = !DILocation(line: 19, column: 3, scope: !38)
!43 = !{!44}
!44 = distinct !{!44, !45, !"sorbet_int_flo_lt: argument 0"}
!45 = distinct !{!45, !"sorbet_int_flo_lt"}
!46 = !{!"branch_weights", i32 1, i32 2001, i32 2000}
!47 = !DILocation(line: 0, scope: !38)
!48 = distinct !DISubprogram(name: "Object#lte", linkageName: "func_Object#3lte", scope: null, file: !4, line: 23, type: !11, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3, retainedNodes: !5)
!49 = !DILocation(line: 23, column: 1, scope: !48)
!50 = !DILocation(line: 23, column: 9, scope: !48)
!51 = !DILocation(line: 23, column: 12, scope: !48)
!52 = !DILocation(line: 24, column: 3, scope: !48)
!53 = !{!54}
!54 = distinct !{!54, !55, !"sorbet_int_flo_le: argument 0"}
!55 = distinct !{!55, !"sorbet_int_flo_le"}
!56 = !DILocation(line: 0, scope: !48)
!57 = distinct !DISubprogram(name: "<root>.<static-init>", linkageName: "func_<root>.17<static-init>$152", scope: null, file: !4, line: 5, type: !11, scopeLine: 5, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3, retainedNodes: !5)
!58 = !{!28, !15, i64 16}
!59 = !{!60, !15, i64 16}
!60 = !{!"rb_control_frame_struct", !15, i64 0, !15, i64 8, !15, i64 16, !7, i64 24, !15, i64 32, !15, i64 40, !15, i64 48}
!61 = !{!60, !15, i64 32}
!62 = !DILocation(line: 0, scope: !57)
!63 = !DILocation(line: 7, column: 1, scope: !57)
!64 = !DILocation(line: 12, column: 1, scope: !57)
!65 = !DILocation(line: 17, column: 1, scope: !57)
!66 = !DILocation(line: 22, column: 1, scope: !57)
!67 = !DILocation(line: 5, column: 1, scope: !57)
!68 = !{!69, !69, i64 0}
!69 = !{!"long long", !8, i64 0}
!70 = !{!"branch_weights", i32 1, i32 10000}
!71 = !DILocation(line: 8, column: 1, scope: !57)
!72 = !{!73, !29, i64 8}
!73 = !{!"rb_sorbet_param_struct", !74, i64 0, !29, i64 4, !29, i64 8, !29, i64 12, !29, i64 16, !29, i64 20, !29, i64 24, !29, i64 28, !15, i64 32, !29, i64 40, !29, i64 44, !29, i64 48, !29, i64 52, !15, i64 56}
!74 = !{!"", !29, i64 0, !29, i64 0, !29, i64 0, !29, i64 0, !29, i64 0, !29, i64 0, !29, i64 0, !29, i64 0, !29, i64 1, !29, i64 1}
!75 = !{!73, !29, i64 4}
!76 = !{!73, !15, i64 32}
!77 = !DILocation(line: 13, column: 1, scope: !57)
!78 = !DILocation(line: 18, column: 1, scope: !57)
!79 = !DILocation(line: 23, column: 1, scope: !57)
!80 = !DILocation(line: 27, column: 3, scope: !57)
!81 = !DILocation(line: 27, column: 1, scope: !57)
!82 = !DILocation(line: 28, column: 3, scope: !57)
!83 = !DILocation(line: 28, column: 1, scope: !57)
!84 = !DILocation(line: 29, column: 3, scope: !57)
!85 = !DILocation(line: 29, column: 1, scope: !57)
!86 = !DILocation(line: 30, column: 3, scope: !57)
!87 = !DILocation(line: 30, column: 1, scope: !57)
!88 = !DILocation(line: 31, column: 3, scope: !57)
!89 = !DILocation(line: 31, column: 1, scope: !57)
!90 = !DILocation(line: 32, column: 3, scope: !57)
!91 = !DILocation(line: 32, column: 1, scope: !57)
!92 = !DILocation(line: 33, column: 3, scope: !57)
!93 = !DILocation(line: 33, column: 1, scope: !57)
!94 = !DILocation(line: 36, column: 3, scope: !57)
!95 = !DILocation(line: 36, column: 1, scope: !57)
!96 = !DILocation(line: 37, column: 13, scope: !57)
!97 = !DILocation(line: 37, column: 3, scope: !57)
!98 = !DILocation(line: 37, column: 1, scope: !57)
!99 = !DILocation(line: 38, column: 13, scope: !57)
!100 = !DILocation(line: 38, column: 3, scope: !57)
!101 = !DILocation(line: 38, column: 1, scope: !57)
!102 = !DILocation(line: 40, column: 3, scope: !57)
!103 = !DILocation(line: 40, column: 1, scope: !57)
!104 = !DILocation(line: 41, column: 15, scope: !57)
!105 = !DILocation(line: 41, column: 3, scope: !57)
!106 = !DILocation(line: 41, column: 1, scope: !57)
!107 = !DILocation(line: 42, column: 15, scope: !57)
!108 = !DILocation(line: 42, column: 3, scope: !57)
!109 = !DILocation(line: 42, column: 1, scope: !57)
!110 = !DILocation(line: 44, column: 3, scope: !57)
!111 = !DILocation(line: 44, column: 1, scope: !57)
!112 = !DILocation(line: 45, column: 12, scope: !57)
!113 = !DILocation(line: 45, column: 3, scope: !57)
!114 = !DILocation(line: 45, column: 1, scope: !57)
!115 = !DILocation(line: 47, column: 3, scope: !57)
!116 = !DILocation(line: 47, column: 1, scope: !57)
!117 = !DILocation(line: 48, column: 13, scope: !57)
!118 = !DILocation(line: 48, column: 3, scope: !57)
!119 = !DILocation(line: 48, column: 1, scope: !57)
!120 = distinct !DISubprogram(name: "<root>.<static-init>", linkageName: "func_<root>.17<static-init>$152$block_1", scope: !57, file: !4, line: 5, type: !11, scopeLine: 5, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3, retainedNodes: !5)
!121 = !{!60, !7, i64 24}
!122 = !DILocation(line: 7, column: 13, scope: !120)
!123 = !DILocation(line: 7, column: 23, scope: !120)
!124 = !DILocation(line: 7, column: 26, scope: !120)
!125 = !DILocation(line: 7, column: 6, scope: !120)
!126 = !DILocation(line: 7, column: 45, scope: !120)
!127 = !DILocation(line: 7, column: 1, scope: !120)
!128 = distinct !DISubprogram(name: "<root>.<static-init>", linkageName: "func_<root>.17<static-init>$152$block_2", scope: !57, file: !4, line: 5, type: !11, scopeLine: 5, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3, retainedNodes: !5)
!129 = !DILocation(line: 12, column: 13, scope: !128)
!130 = !DILocation(line: 12, column: 23, scope: !128)
!131 = !DILocation(line: 12, column: 26, scope: !128)
!132 = !DILocation(line: 12, column: 6, scope: !128)
!133 = !DILocation(line: 12, column: 45, scope: !128)
!134 = !DILocation(line: 12, column: 1, scope: !128)
!135 = distinct !DISubprogram(name: "<root>.<static-init>", linkageName: "func_<root>.17<static-init>$152$block_3", scope: !57, file: !4, line: 5, type: !11, scopeLine: 5, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3, retainedNodes: !5)
!136 = !DILocation(line: 17, column: 13, scope: !135)
!137 = !DILocation(line: 17, column: 23, scope: !135)
!138 = !DILocation(line: 17, column: 26, scope: !135)
!139 = !DILocation(line: 17, column: 6, scope: !135)
!140 = !DILocation(line: 17, column: 1, scope: !135)
!141 = distinct !DISubprogram(name: "<root>.<static-init>", linkageName: "func_<root>.17<static-init>$152$block_4", scope: !57, file: !4, line: 5, type: !11, scopeLine: 5, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3, retainedNodes: !5)
!142 = !DILocation(line: 22, column: 13, scope: !141)
!143 = !DILocation(line: 22, column: 23, scope: !141)
!144 = !DILocation(line: 22, column: 26, scope: !141)
!145 = !DILocation(line: 22, column: 6, scope: !141)
!146 = !DILocation(line: 22, column: 1, scope: !141)
!147 = !{!148, !7, i64 400}
!148 = !{!"rb_vm_struct", !7, i64 0, !149, i64 8, !15, i64 192, !15, i64 200, !15, i64 208, !69, i64 216, !8, i64 224, !150, i64 264, !150, i64 280, !150, i64 296, !150, i64 312, !7, i64 328, !29, i64 336, !29, i64 340, !29, i64 344, !29, i64 344, !29, i64 344, !29, i64 344, !29, i64 348, !7, i64 352, !8, i64 360, !7, i64 400, !7, i64 408, !7, i64 416, !7, i64 424, !7, i64 432, !7, i64 440, !7, i64 448, !15, i64 456, !15, i64 464, !152, i64 472, !153, i64 992, !15, i64 1016, !15, i64 1024, !29, i64 1032, !29, i64 1036, !150, i64 1040, !8, i64 1056, !7, i64 1096, !7, i64 1104, !7, i64 1112, !7, i64 1120, !7, i64 1128, !29, i64 1136, !15, i64 1144, !15, i64 1152, !15, i64 1160, !15, i64 1168, !15, i64 1176, !15, i64 1184, !29, i64 1192, !154, i64 1200, !8, i64 1232}
!149 = !{!"rb_global_vm_lock_struct", !15, i64 0, !8, i64 8, !150, i64 48, !15, i64 64, !29, i64 72, !8, i64 80, !8, i64 128, !29, i64 176, !29, i64 180}
!150 = !{!"list_head", !151, i64 0}
!151 = !{!"list_node", !15, i64 0, !15, i64 8}
!152 = !{!"", !8, i64 0}
!153 = !{!"rb_hook_list_struct", !15, i64 0, !29, i64 8, !29, i64 12, !29, i64 16}
!154 = !{!"", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24}
!155 = distinct !DISubprogram(name: "func_Object#2lt.cold.1", linkageName: "func_Object#2lt.cold.1", scope: null, file: !4, type: !156, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3, retainedNodes: !5)
!156 = !DISubroutineType(types: !5)
!157 = distinct !DISubprogram(name: "func_Object#2lt.cold.3", linkageName: "func_Object#2lt.cold.3", scope: null, file: !4, type: !156, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3, retainedNodes: !5)
!158 = !DILocation(line: 18, column: 8, scope: !157)
