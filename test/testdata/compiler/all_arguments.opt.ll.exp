; ModuleID = 'payload'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

%struct.rb_vm_struct = type { i64, %struct.rb_global_vm_lock_struct, %struct.rb_thread_struct*, %struct.rb_thread_struct*, i8*, i64, %union.pthread_mutex_t, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i64, i32, i32, i8, i32, i64, [5 x i64], i64, i64, i64, i64, i64, i64, i64, %struct.st_table*, %struct.st_table*, %struct.anon.3, %struct.rb_hook_list_struct, %struct.st_table*, %struct.rb_postponed_job_struct*, i32, i32, %struct.list_head, %union.pthread_mutex_t, i64, i64, i64, i64, i64, i32, %struct.st_table*, %struct.rb_objspace*, %struct.rb_at_exit_list*, i64*, %struct.st_table*, %struct.rb_builtin_function*, i32, %struct.anon.4, [29 x i16] }
%struct.rb_global_vm_lock_struct = type { %struct.rb_thread_struct*, %union.pthread_mutex_t, %struct.list_head, %struct.rb_thread_struct*, i32, %union.pthread_cond_t, %union.pthread_cond_t, i32, i32 }
%union.pthread_cond_t = type { %struct.anon.2 }
%struct.anon.2 = type { i32, i32, i64, i64, i64, i8*, i32, i32 }
%struct.rb_thread_struct = type { %struct.list_node, i64, %struct.rb_vm_struct*, %struct.rb_execution_context_struct*, i64, %struct.rb_calling_info*, i64, i64, i64, i8, i8, i32, %struct.native_thread_data_struct, i8*, i64, i64, i64, i64, %union.pthread_mutex_t, %struct.rb_unblock_callback, i64, %struct.rb_mutex_struct*, %struct.rb_thread_list_struct*, %union.anon.7, i32, i64, %struct.rb_fiber_struct*, [5 x i8*], i64 }
%struct.list_node = type { %struct.list_node*, %struct.list_node* }
%struct.rb_execution_context_struct = type { i64*, i64, %struct.rb_control_frame_struct*, %struct.rb_vm_tag*, %struct.rb_vm_protect_tag*, i32, i32, %struct.rb_fiber_struct*, %struct.rb_thread_struct*, %struct.st_table*, i64, i64, i64*, i64, %struct.rb_ensure_list*, %struct.rb_trace_arg_struct*, i64, i64, i8, i8, i64, %struct.anon.5 }
%struct.rb_control_frame_struct = type { i64*, i64*, %struct.rb_iseq_struct*, i64, i64*, i8*, i64* }
%struct.rb_iseq_struct = type { i64, i64, %struct.rb_iseq_constant_body*, %union.anon.14 }
%struct.rb_iseq_constant_body = type { i32, i32, i64*, %struct.anon, %struct.rb_iseq_location_struct, %struct.iseq_insn_info, i64*, %struct.iseq_catch_table*, %struct.rb_iseq_struct*, %struct.rb_iseq_struct*, %union.iseq_inline_storage_entry*, %struct.rb_call_data*, %struct.anon.13, i32, i32, i32, i32, i32, i8, i64 }
%struct.anon = type { %struct.anon.0, i32, i32, i32, i32, i32, i32, i32, i64*, %struct.rb_iseq_param_keyword* }
%struct.anon.0 = type { i16, [2 x i8] }
%struct.rb_iseq_param_keyword = type { i32, i32, i32, i32, i64*, i64* }
%struct.rb_iseq_location_struct = type { i64, i64, i64, i64, i32, %struct.rb_code_location_struct }
%struct.rb_code_location_struct = type { %struct.rb_code_position_struct, %struct.rb_code_position_struct }
%struct.rb_code_position_struct = type { i32, i32 }
%struct.iseq_insn_info = type { %struct.iseq_insn_info_entry*, i32*, i32, %struct.succ_index_table* }
%struct.iseq_insn_info_entry = type opaque
%struct.succ_index_table = type opaque
%struct.iseq_catch_table = type opaque
%union.iseq_inline_storage_entry = type { %struct.iseq_inline_cache_entry }
%struct.iseq_inline_cache_entry = type { i64, %struct.rb_cref_struct*, i64 }
%struct.rb_cref_struct = type { i64, i64, i64, %struct.rb_cref_struct*, %struct.rb_scope_visi_struct }
%struct.rb_scope_visi_struct = type { i8, [3 x i8] }
%struct.rb_call_data = type { %struct.rb_call_cache, %struct.rb_call_info }
%struct.rb_call_cache = type { i64, [3 x i64], %struct.rb_callable_method_entry_struct*, i64, i64 (%struct.rb_execution_context_struct*, %struct.rb_control_frame_struct*, %struct.rb_calling_info*, %struct.rb_call_data*)*, %union.anon.12 }
%struct.rb_callable_method_entry_struct = type { i64, i64, %struct.rb_method_definition_struct*, i64, i64 }
%struct.rb_method_definition_struct = type { i64, %union.anon.10, i64, i64 }
%union.anon.10 = type { %struct.rb_method_cfunc_struct }
%struct.rb_method_cfunc_struct = type { i64 (...)*, i64 (i64, i32, i64*, i64 (...)*)*, i32 }
%union.anon.12 = type { i32 }
%struct.rb_call_info = type { i64, i32, i32 }
%struct.anon.13 = type { i64, i64, i64, i64* }
%union.anon.14 = type { %struct.anon.15 }
%struct.anon.15 = type { i64, i32 }
%struct.rb_vm_tag = type { i64, i64, [5 x i8*], %struct.rb_vm_tag*, i32 }
%struct.rb_vm_protect_tag = type { %struct.rb_vm_protect_tag* }
%struct.rb_ensure_list = type { %struct.rb_ensure_list*, %struct.rb_ensure_entry }
%struct.rb_ensure_entry = type { i64, i64 (i64)*, i64 }
%struct.rb_trace_arg_struct = type { i32, %struct.rb_execution_context_struct*, %struct.rb_control_frame_struct*, i64, i64, i64, i64, i64, i32, i32, i64 }
%struct.anon.5 = type { i64*, i64*, i64, [1 x %struct.__jmp_buf_tag] }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.rb_calling_info = type { i64, i64, i32, i32 }
%struct.native_thread_data_struct = type { %struct.list_head, %union.anon.6 }
%union.anon.6 = type { %union.pthread_cond_t }
%struct.rb_unblock_callback = type { void (i8*)*, i8* }
%struct.rb_mutex_struct = type opaque
%struct.rb_thread_list_struct = type { %struct.rb_thread_list_struct*, %struct.rb_thread_struct* }
%union.anon.7 = type { %struct.anon.8 }
%struct.anon.8 = type { i64, i64, i32 }
%struct.rb_fiber_struct = type opaque
%struct.anon.3 = type { [65 x i64] }
%struct.rb_hook_list_struct = type { %struct.rb_event_hook_struct*, i32, i32, i32 }
%struct.rb_event_hook_struct = type opaque
%struct.rb_postponed_job_struct = type opaque
%struct.list_head = type { %struct.list_node }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.rb_objspace = type opaque
%struct.rb_at_exit_list = type { void (%struct.rb_vm_struct*)*, %struct.rb_at_exit_list* }
%struct.st_table = type { i8, i8, i8, i32, %struct.st_hash_type*, i64, i64*, i64, i64, %struct.st_table_entry* }
%struct.st_hash_type = type { i32 (i64, i64)*, i64 (i64)* }
%struct.st_table_entry = type opaque
%struct.rb_builtin_function = type opaque
%struct.anon.4 = type { i64, i64, i64, i64 }
%struct.SorbetLineNumberInfo = type { i32, %struct.iseq_insn_info_entry*, i64* }
%struct.FunctionInlineCache = type { %struct.rb_kwarg_call_data }
%struct.rb_kwarg_call_data = type { %struct.rb_call_cache, %struct.rb_call_info_with_kwarg }
%struct.rb_call_info_with_kwarg = type { %struct.rb_call_info, %struct.rb_call_info_kw_arg* }
%struct.rb_call_info_kw_arg = type { i32, [1 x i64] }
%struct.iseq_inline_iv_cache_entry = type { i64, i64 }

@ruby_current_vm_ptr = external local_unnamed_addr global %struct.rb_vm_struct*, align 8
@ruby_current_execution_context_ptr = external local_unnamed_addr global %struct.rb_execution_context_struct*, align 8
@rb_eRuntimeError = external local_unnamed_addr global i64, align 8
@.str.9 = private unnamed_addr constant [95 x i8] c"sorbet_getBuildSCMRevision: Shared objects compiled by sorbet_llvm must be run by sorbet_ruby.\00", align 1
@.str.10 = private unnamed_addr constant [93 x i8] c"sorbet_getIsReleaseBuild: Shared objects compiled by sorbet_llvm must be run by sorbet_ruby.\00", align 1
@"stackFramePrecomputed_func_Object#14take_arguments" = internal unnamed_addr global %struct.rb_iseq_struct* null, align 8
@iseqEncodedArray = internal global [32 x i64] zeroinitializer
@fileLineNumberInfo = internal global %struct.SorbetLineNumberInfo zeroinitializer
@ic_inspect = internal global %struct.FunctionInlineCache zeroinitializer
@ic_puts = internal global %struct.FunctionInlineCache zeroinitializer
@"stackFramePrecomputed_func_<root>.17<static-init>$153" = internal unnamed_addr global %struct.rb_iseq_struct* null, align 8
@ic_take_arguments = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.1 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.2 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.3 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.4 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.5 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.6 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.7 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.8 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.9 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.10 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.11 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.12 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.13 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.14 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.15 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.16 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.17 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.18 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.19 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_take_arguments.20 = internal global %struct.FunctionInlineCache zeroinitializer
@sorbet_moduleStringTable = internal unnamed_addr constant [138 x i8] c"take_arguments\00test/testdata/compiler/all_arguments.rb\00g\00d\00e\00<build-array>\00inspect\00puts\00<top (required)>\00normal\00Object\00a\00b\00c\00f\00baz\00master\00", align 1
@sorbet_moduleIDTable = internal unnamed_addr global [14 x i64] zeroinitializer, align 8
@sorbet_moduleIDDescriptors = internal unnamed_addr constant [14 x %struct.rb_code_position_struct] [%struct.rb_code_position_struct { i32 0, i32 14 }, %struct.rb_code_position_struct { i32 55, i32 1 }, %struct.rb_code_position_struct { i32 57, i32 1 }, %struct.rb_code_position_struct { i32 59, i32 1 }, %struct.rb_code_position_struct { i32 61, i32 13 }, %struct.rb_code_position_struct { i32 75, i32 7 }, %struct.rb_code_position_struct { i32 83, i32 4 }, %struct.rb_code_position_struct { i32 88, i32 16 }, %struct.rb_code_position_struct { i32 105, i32 6 }, %struct.rb_code_position_struct { i32 119, i32 1 }, %struct.rb_code_position_struct { i32 121, i32 1 }, %struct.rb_code_position_struct { i32 123, i32 1 }, %struct.rb_code_position_struct { i32 125, i32 1 }, %struct.rb_code_position_struct { i32 127, i32 3 }], align 8
@sorbet_moduleRubyStringTable = internal unnamed_addr global [3 x i64] zeroinitializer, align 8
@sorbet_moduleRubyStringDescriptors = internal unnamed_addr constant [3 x %struct.rb_code_position_struct] [%struct.rb_code_position_struct { i32 0, i32 14 }, %struct.rb_code_position_struct { i32 15, i32 39 }, %struct.rb_code_position_struct { i32 88, i32 16 }], align 8
@rb_cObject = external local_unnamed_addr constant i64

; Function Attrs: nounwind readnone willreturn
declare i64 @rb_id2sym(i64) local_unnamed_addr #0

; Function Attrs: noreturn
declare void @sorbet_raiseArity(i32, i32, i32) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @sorbet_raiseMissingKeywords(i64) local_unnamed_addr #1

declare i64 @sorbet_addMissingKWArg(i64, i64) local_unnamed_addr #2

declare %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64, i64, i64, i64, %struct.rb_iseq_struct*, i32, i32, %struct.SorbetLineNumberInfo*, i64*, i32, i32) local_unnamed_addr #2

declare void @sorbet_initLineNumberInfo(%struct.SorbetLineNumberInfo*, i64*, i32) local_unnamed_addr #2

declare i64 @sorbet_readRealpath() local_unnamed_addr #2

declare void @sorbet_vm_env_write_slowpath(i64*, i32, i64) local_unnamed_addr #2

declare void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache*, i64, i32, i32, i32, i64*) local_unnamed_addr #2

declare i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache*, i64) local_unnamed_addr #2

declare void @sorbet_setMethodStackFrame(%struct.rb_execution_context_struct*, %struct.rb_control_frame_struct*, %struct.rb_iseq_struct*) local_unnamed_addr #2

declare void @sorbet_vm_define_method(i64, i8*, i64 (i32, i64*, i64, %struct.rb_control_frame_struct*, i8*, i8*)*, i8*, %struct.rb_iseq_struct*, i1 zeroext) local_unnamed_addr #2

declare void @sorbet_vm_intern_ids(i64*, %struct.rb_code_position_struct*, i32, i8*) local_unnamed_addr #2

declare void @sorbet_vm_init_string_table(i64*, %struct.rb_code_position_struct*, i32, i8*) local_unnamed_addr #2

declare i32 @rb_block_given_p() local_unnamed_addr #2

declare i64 @rb_block_proc() local_unnamed_addr #2

declare i64 @rb_ary_new_from_values(i64, i64*) local_unnamed_addr #2

declare i64 @rb_hash_new() local_unnamed_addr #2

declare i64 @rb_hash_dup(i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @rb_raise(i64, i8*, ...) local_unnamed_addr #1

declare i64 @rb_hash_delete_entry(i64, i64) local_unnamed_addr #2

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #3

declare i64 @rb_ary_new() local_unnamed_addr #2

; Function Attrs: allocsize(0,1)
declare noalias nonnull i8* @ruby_xcalloc(i64, i64) local_unnamed_addr #4

; Function Attrs: allocsize(0,1)
declare noalias nonnull i8* @ruby_xmalloc2(i64, i64) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define weak i32 @sorbet_getIsReleaseBuild() local_unnamed_addr #6 {
  %1 = load i64, i64* @rb_eRuntimeError, align 8, !tbaa !6
  tail call void (i64, i8*, ...) @rb_raise(i64 %1, i8* noundef getelementptr inbounds ([93 x i8], [93 x i8]* @.str.10, i64 0, i64 0)) #9
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define weak i8* @sorbet_getBuildSCMRevision() local_unnamed_addr #6 {
  %1 = load i64, i64* @rb_eRuntimeError, align 8, !tbaa !6
  tail call void (i64, i8*, ...) @rb_raise(i64 %1, i8* noundef getelementptr inbounds ([95 x i8], [95 x i8]* @.str.9, i64 0, i64 0)) #9
  unreachable
}

; Function Attrs: nounwind sspreq uwtable
define internal i64 @"func_Object#14take_arguments"(i32 %argc, i64* %argArray, i64 %selfRaw, %struct.rb_control_frame_struct* nonnull align 8 dereferenceable(8) %cfp, i8* nocapture nofree readnone %calling, i8* nocapture nofree readnone %callData) #7 !dbg !10 {
functionEntryInitializers:
  %callArgs = alloca [8 x i64], align 8
  %0 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 0
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 4), i64** %0, align 8, !tbaa !14
  %1 = icmp slt i32 1, %argc, !dbg !16
  br i1 %1, label %2, label %sorbet_determineKwSplatArg.exit, !dbg !16

2:                                                ; preds = %functionEntryInitializers
  %3 = add nsw i32 %argc, -1, !dbg !16
  %4 = zext i32 %3 to i64
  %5 = getelementptr inbounds i64, i64* %argArray, i64 %4, !dbg !16
  %6 = load i64, i64* %5, align 8, !dbg !16, !tbaa !6
  %7 = and i64 %6, 7, !dbg !16
  %8 = icmp ne i64 %7, 0, !dbg !16
  %9 = and i64 %6, -9, !dbg !16
  %10 = icmp eq i64 %9, 0, !dbg !16
  %11 = or i1 %8, %10, !dbg !16
  br i1 %11, label %sorbet_determineKwSplatArg.exit.thread77, label %sorbet_isa_Hash.exit, !dbg !16

sorbet_isa_Hash.exit:                             ; preds = %2
  %12 = inttoptr i64 %6 to %struct.iseq_inline_iv_cache_entry*, !dbg !16
  %13 = getelementptr inbounds %struct.iseq_inline_iv_cache_entry, %struct.iseq_inline_iv_cache_entry* %12, i64 0, i32 0, !dbg !16
  %14 = load i64, i64* %13, align 8, !dbg !16, !tbaa !17
  %15 = and i64 %14, 31, !dbg !16
  %16 = icmp eq i64 %15, 8, !dbg !16
  br i1 %16, label %fillRequiredArgs, label %sorbet_determineKwSplatArg.exit.thread77, !dbg !16

sorbet_determineKwSplatArg.exit.thread77:         ; preds = %sorbet_isa_Hash.exit, %2
  br label %fillRequiredArgs, !dbg !16

sorbet_determineKwSplatArg.exit:                  ; preds = %functionEntryInitializers
  %tooFewArgs = icmp ult i32 %argc, 1, !dbg !16
  br i1 %tooFewArgs, label %argCountFailBlock, label %fillRequiredArgs, !dbg !16, !prof !19

argCountFailBlock:                                ; preds = %sorbet_determineKwSplatArg.exit
  tail call void @sorbet_raiseArity(i32 noundef 0, i32 noundef 1, i32 noundef -1) #10, !dbg !16
  unreachable, !dbg !16

fillFromDefaultBlockDone1:                        ; preds = %sorbet_writeLocal.exit
  %17 = getelementptr i64, i64* %argArray, i32 1, !dbg !16
  %rawArg_b = load i64, i64* %17, align 8, !dbg !16
  %18 = icmp sgt i32 %30, 2, !dbg !16
  br i1 %18, label %20, label %fillFromDefaultBlockDone1.thread, !dbg !16

fillFromDefaultBlockDone1.thread:                 ; preds = %sorbet_writeLocal.exit, %fillFromDefaultBlockDone1
  %"<argPresent>.sroa.0.084" = phi i64 [ 20, %fillFromDefaultBlockDone1 ], [ 0, %sorbet_writeLocal.exit ]
  %b.sroa.0.182 = phi i64 [ %rawArg_b, %fillFromDefaultBlockDone1 ], [ 8, %sorbet_writeLocal.exit ]
  %19 = tail call i64 @rb_ary_new() #11, !dbg !16
  br label %sorbet_readRestArgs.exit, !dbg !16

20:                                               ; preds = %fillFromDefaultBlockDone1
  %21 = sub nuw nsw i32 %30, 2, !dbg !16
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds i64, i64* %argArray, i64 2, !dbg !16
  %24 = tail call i64 @rb_ary_new_from_values(i64 %22, i64* nonnull %23) #11, !dbg !16
  br label %sorbet_readRestArgs.exit, !dbg !16

sorbet_readRestArgs.exit:                         ; preds = %fillFromDefaultBlockDone1.thread, %20
  %"<argPresent>.sroa.0.083" = phi i64 [ %"<argPresent>.sroa.0.084", %fillFromDefaultBlockDone1.thread ], [ 20, %20 ]
  %b.sroa.0.181 = phi i64 [ %b.sroa.0.182, %fillFromDefaultBlockDone1.thread ], [ %rawArg_b, %20 ]
  %25 = phi i64 [ %19, %fillFromDefaultBlockDone1.thread ], [ %24, %20 ], !dbg !16
  %rubyId_d = load i64, i64* getelementptr inbounds ([14 x i64], [14 x i64]* @sorbet_moduleIDTable, i64 0, i64 2), align 8, !dbg !16, !invariant.load !5
  %rawSym = tail call i64 @rb_id2sym(i64 %rubyId_d), !dbg !16
  %26 = icmp eq i64 %29, 52, !dbg !16
  br i1 %26, label %kwArgContinue, label %sorbet_removeKWArg.exit74, !dbg !16

sorbet_removeKWArg.exit74:                        ; preds = %sorbet_readRestArgs.exit
  %27 = tail call i64 @rb_hash_delete_entry(i64 %29, i64 %rawSym) #11, !dbg !16
  %28 = icmp eq i64 %27, 52, !dbg !16
  br i1 %28, label %kwArgContinue, label %kwArgContinue.thread, !dbg !16

kwArgContinue.thread:                             ; preds = %sorbet_removeKWArg.exit74
  %rubyId_e87 = load i64, i64* getelementptr inbounds ([14 x i64], [14 x i64]* @sorbet_moduleIDTable, i64 0, i64 3), align 8, !dbg !16, !invariant.load !5
  %rawSym2088 = tail call i64 @rb_id2sym(i64 %rubyId_e87), !dbg !16
  br label %sorbet_removeKWArg.exit.thread, !dbg !16

fillRequiredArgs:                                 ; preds = %sorbet_isa_Hash.exit, %sorbet_determineKwSplatArg.exit.thread77, %sorbet_determineKwSplatArg.exit
  %29 = phi i64 [ 52, %sorbet_determineKwSplatArg.exit ], [ 52, %sorbet_determineKwSplatArg.exit.thread77 ], [ %6, %sorbet_isa_Hash.exit ]
  %30 = phi i32 [ %argc, %sorbet_determineKwSplatArg.exit ], [ %argc, %sorbet_determineKwSplatArg.exit.thread77 ], [ %3, %sorbet_isa_Hash.exit ]
  %rawArg_a = load i64, i64* %argArray, align 8, !dbg !16
  %31 = tail call i32 @rb_block_given_p() #11, !dbg !16
  %32 = icmp eq i32 %31, 0, !dbg !16
  br i1 %32, label %sorbet_getMethodBlockAsProc.exit, label %33, !dbg !16

33:                                               ; preds = %fillRequiredArgs
  %34 = tail call i64 @rb_block_proc() #11, !dbg !16
  br label %sorbet_getMethodBlockAsProc.exit, !dbg !16

sorbet_getMethodBlockAsProc.exit:                 ; preds = %fillRequiredArgs, %33
  %35 = phi i64 [ %34, %33 ], [ 8, %fillRequiredArgs ], !dbg !16
  %36 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 4, !dbg !16
  %37 = load i64*, i64** %36, align 8, !dbg !16, !tbaa !20
  tail call void @llvm.experimental.noalias.scope.decl(metadata !22), !dbg !16
  %38 = load i64, i64* %37, align 8, !dbg !16, !tbaa !6
  %39 = and i64 %38, 8, !dbg !16
  %40 = icmp eq i64 %39, 0, !dbg !16
  br i1 %40, label %41, label %43, !dbg !16, !prof !25

41:                                               ; preds = %sorbet_getMethodBlockAsProc.exit
  %42 = getelementptr inbounds i64, i64* %37, i64 -3, !dbg !16
  store i64 %35, i64* %42, align 8, !dbg !16, !tbaa !6
  br label %sorbet_writeLocal.exit, !dbg !16

43:                                               ; preds = %sorbet_getMethodBlockAsProc.exit
  tail call void @sorbet_vm_env_write_slowpath(i64* nonnull align 8 dereferenceable(8) %37, i32 noundef -3, i64 %35) #11, !dbg !16
  br label %sorbet_writeLocal.exit, !dbg !16

sorbet_writeLocal.exit:                           ; preds = %41, %43
  %default0 = icmp eq i32 %30, 1, !dbg !16
  br i1 %default0, label %fillFromDefaultBlockDone1.thread, label %fillFromDefaultBlockDone1, !dbg !16, !prof !19

kwArgContinue:                                    ; preds = %sorbet_readRestArgs.exit, %sorbet_removeKWArg.exit74
  %44 = tail call i64 @sorbet_addMissingKWArg(i64 noundef 52, i64 %rawSym), !dbg !16
  %rubyId_e = load i64, i64* getelementptr inbounds ([14 x i64], [14 x i64]* @sorbet_moduleIDTable, i64 0, i64 3), align 8, !dbg !16, !invariant.load !5
  %rawSym20 = tail call i64 @rb_id2sym(i64 %rubyId_e), !dbg !16
  br i1 %26, label %sorbet_removeKWArg.exit, label %sorbet_removeKWArg.exit.thread, !dbg !16

sorbet_removeKWArg.exit:                          ; preds = %kwArgContinue
  %45 = icmp eq i64 %44, 52, !dbg !16
  br i1 %45, label %sorbet_readKWRestArgs.exit.thread, label %49, !dbg !16, !prof !25

sorbet_removeKWArg.exit.thread:                   ; preds = %kwArgContinue, %kwArgContinue.thread
  %rawSym2093 = phi i64 [ %rawSym2088, %kwArgContinue.thread ], [ %rawSym20, %kwArgContinue ]
  %missingArgsPhi91 = phi i64 [ 52, %kwArgContinue.thread ], [ %44, %kwArgContinue ]
  %d.sroa.0.089 = phi i64 [ %27, %kwArgContinue.thread ], [ 8, %kwArgContinue ]
  %46 = tail call i64 @rb_hash_delete_entry(i64 %29, i64 %rawSym2093) #11, !dbg !16
  %47 = icmp eq i64 %46, 52, !dbg !16
  %e.sroa.0.196 = select i1 %47, i64 8, i64 %46, !dbg !16
  %"<argPresent>9.sroa.0.097" = select i1 %47, i64 0, i64 20, !dbg !16
  %48 = icmp eq i64 %missingArgsPhi91, 52, !dbg !16
  br i1 %48, label %sorbet_readKWRestArgs.exit, label %49, !dbg !16, !prof !25

49:                                               ; preds = %sorbet_removeKWArg.exit.thread, %sorbet_removeKWArg.exit
  %missingArgsPhi9298 = phi i64 [ %missingArgsPhi91, %sorbet_removeKWArg.exit.thread ], [ %44, %sorbet_removeKWArg.exit ]
  tail call void @sorbet_raiseMissingKeywords(i64 %missingArgsPhi9298) #9, !dbg !16
  unreachable, !dbg !16

sorbet_readKWRestArgs.exit.thread:                ; preds = %sorbet_removeKWArg.exit
  %50 = tail call i64 @rb_hash_new() #11, !dbg !16
  %51 = and i64 %"<argPresent>.sroa.0.083", -9, !dbg !26
  %52 = icmp ne i64 %51, 0, !dbg !26
  %b.sroa.0.0125 = select i1 %52, i64 %b.sroa.0.181, i64 3, !dbg !26
  br label %58, !dbg !27

sorbet_readKWRestArgs.exit:                       ; preds = %sorbet_removeKWArg.exit.thread
  %53 = tail call i64 @rb_hash_dup(i64 %29) #11, !dbg !16
  %54 = and i64 %"<argPresent>.sroa.0.083", -9, !dbg !26
  %55 = icmp ne i64 %54, 0, !dbg !26
  %b.sroa.0.0 = select i1 %55, i64 %b.sroa.0.181, i64 3, !dbg !26
  %56 = icmp ne i64 %"<argPresent>9.sroa.0.097", 0, !dbg !27
  br i1 %56, label %57, label %58, !dbg !27

57:                                               ; preds = %sorbet_readKWRestArgs.exit
  br label %58, !dbg !27

58:                                               ; preds = %sorbet_readKWRestArgs.exit.thread, %sorbet_readKWRestArgs.exit, %57
  %b.sroa.0.0127 = phi i64 [ %b.sroa.0.0, %57 ], [ %b.sroa.0.0, %sorbet_readKWRestArgs.exit ], [ %b.sroa.0.0125, %sorbet_readKWRestArgs.exit.thread ]
  %59 = phi i64 [ %53, %57 ], [ %53, %sorbet_readKWRestArgs.exit ], [ %50, %sorbet_readKWRestArgs.exit.thread ]
  %d.sroa.0.09099109126 = phi i64 [ %d.sroa.0.089, %57 ], [ %d.sroa.0.089, %sorbet_readKWRestArgs.exit ], [ 8, %sorbet_readKWRestArgs.exit.thread ]
  %60 = phi i64 [ %e.sroa.0.196, %57 ], [ 5, %sorbet_readKWRestArgs.exit ], [ 5, %sorbet_readKWRestArgs.exit.thread ]
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 5), i64** %0, align 8, !dbg !28, !tbaa !14
  %callArgs0Addr = getelementptr [8 x i64], [8 x i64]* %callArgs, i64 0, i64 0, !dbg !29
  store i64 %rawArg_a, i64* %callArgs0Addr, align 8, !dbg !29
  %callArgs1Addr = getelementptr [8 x i64], [8 x i64]* %callArgs, i64 0, i64 1, !dbg !29
  store i64 %b.sroa.0.0127, i64* %callArgs1Addr, align 8, !dbg !29
  %callArgs2Addr = getelementptr [8 x i64], [8 x i64]* %callArgs, i64 0, i64 2, !dbg !29
  store i64 %25, i64* %callArgs2Addr, align 8, !dbg !29
  %callArgs3Addr = getelementptr [8 x i64], [8 x i64]* %callArgs, i64 0, i64 3, !dbg !29
  store i64 %d.sroa.0.09099109126, i64* %callArgs3Addr, align 8, !dbg !29
  %callArgs4Addr = getelementptr [8 x i64], [8 x i64]* %callArgs, i64 0, i64 4, !dbg !29
  store i64 %60, i64* %callArgs4Addr, align 8, !dbg !29
  %callArgs5Addr = getelementptr [8 x i64], [8 x i64]* %callArgs, i64 0, i64 5, !dbg !29
  store i64 %59, i64* %callArgs5Addr, align 8, !dbg !29
  %61 = load i64*, i64** %36, align 8, !dbg !29, !tbaa !20
  tail call void @llvm.experimental.noalias.scope.decl(metadata !30), !dbg !29
  %62 = getelementptr inbounds i64, i64* %61, i64 -3, !dbg !29
  %63 = load i64, i64* %62, align 8, !dbg !29, !tbaa !6
  %callArgs6Addr = getelementptr [8 x i64], [8 x i64]* %callArgs, i64 0, i64 6, !dbg !29
  store i64 %63, i64* %callArgs6Addr, align 8, !dbg !29
  tail call void @llvm.experimental.noalias.scope.decl(metadata !33) #12, !dbg !29
  %64 = call i64 @rb_ary_new_from_values(i64 noundef 7, i64* noundef nonnull %callArgs0Addr) #11, !dbg !29
  %65 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !29
  %66 = load i64*, i64** %65, align 8, !dbg !29
  store i64 %64, i64* %66, align 8, !dbg !29, !tbaa !6
  %67 = getelementptr inbounds i64, i64* %66, i64 1, !dbg !29
  store i64* %67, i64** %65, align 8, !dbg !29
  %send = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_inspect, i64 0), !dbg !29
  %68 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %cfp, i64 0, i32 1, !dbg !36
  %69 = load i64*, i64** %68, align 8, !dbg !36
  store i64 %selfRaw, i64* %69, align 8, !dbg !36, !tbaa !6
  %70 = getelementptr inbounds i64, i64* %69, i64 1, !dbg !36
  store i64 %send, i64* %70, align 8, !dbg !36, !tbaa !6
  %71 = getelementptr inbounds i64, i64* %70, i64 1, !dbg !36
  store i64* %71, i64** %68, align 8, !dbg !36
  %send121 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_puts, i64 0), !dbg !36
  ret i64 %send121
}

; Function Attrs: sspreq
define void @Init_all_arguments() local_unnamed_addr #8 {
entry:
  %positional_table.i = alloca i64, i32 4, align 8, !dbg !37
  %keyword_table.i = alloca i64, i32 3, align 8, !dbg !37
  %locals.i164.i = alloca i64, i32 0, align 8
  %locals.i.i = alloca i64, align 8
  %keywords.i = alloca i64, align 8, !dbg !39
  %keywords4.i = alloca i64, align 8, !dbg !40
  %keywords10.i = alloca i64, align 8, !dbg !41
  %keywords16.i = alloca i64, align 8, !dbg !42
  %keywords22.i = alloca i64, align 8, !dbg !43
  %keywords28.i = alloca i64, align 8, !dbg !44
  %keywords34.i = alloca i64, align 8, !dbg !45
  %keywords40.i = alloca i64, i32 2, align 8, !dbg !46
  %keywords47.i = alloca i64, i32 2, align 8, !dbg !47
  %keywords55.i = alloca i64, i32 2, align 8, !dbg !48
  %keywords63.i = alloca i64, i32 2, align 8, !dbg !49
  %keywords71.i = alloca i64, i32 2, align 8, !dbg !50
  %keywords79.i = alloca i64, i32 2, align 8, !dbg !51
  %keywords87.i = alloca i64, i32 2, align 8, !dbg !52
  %keywords95.i = alloca i64, i32 3, align 8, !dbg !53
  %keywords104.i = alloca i64, i32 3, align 8, !dbg !54
  %keywords114.i = alloca i64, i32 3, align 8, !dbg !55
  %keywords124.i = alloca i64, i32 3, align 8, !dbg !56
  %keywords134.i = alloca i64, i32 3, align 8, !dbg !57
  %keywords144.i = alloca i64, i32 3, align 8, !dbg !58
  %keywords154.i = alloca i64, i32 3, align 8, !dbg !59
  %realpath = tail call i64 @sorbet_readRealpath()
  %0 = bitcast i64* %keywords.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0)
  %1 = bitcast i64* %keywords4.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1)
  %2 = bitcast i64* %keywords10.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2)
  %3 = bitcast i64* %keywords16.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3)
  %4 = bitcast i64* %keywords22.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4)
  %5 = bitcast i64* %keywords28.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5)
  %6 = bitcast i64* %keywords34.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6)
  %7 = bitcast i64* %keywords40.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7)
  %8 = bitcast i64* %keywords47.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8)
  %9 = bitcast i64* %keywords55.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9)
  %10 = bitcast i64* %keywords63.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10)
  %11 = bitcast i64* %keywords71.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11)
  %12 = bitcast i64* %keywords79.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12)
  %13 = bitcast i64* %keywords87.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13)
  %14 = bitcast i64* %keywords95.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14)
  %15 = bitcast i64* %keywords104.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15)
  %16 = bitcast i64* %keywords114.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16)
  %17 = bitcast i64* %keywords124.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17)
  %18 = bitcast i64* %keywords134.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18)
  %19 = bitcast i64* %keywords144.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19)
  %20 = bitcast i64* %keywords154.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20)
  tail call void @sorbet_vm_intern_ids(i64* noundef getelementptr inbounds ([14 x i64], [14 x i64]* @sorbet_moduleIDTable, i32 0, i32 0), %struct.rb_code_position_struct* noundef getelementptr inbounds ([14 x %struct.rb_code_position_struct], [14 x %struct.rb_code_position_struct]* @sorbet_moduleIDDescriptors, i32 0, i32 0), i32 noundef 14, i8* noundef getelementptr inbounds ([138 x i8], [138 x i8]* @sorbet_moduleStringTable, i32 0, i32 0))
  tail call void @sorbet_vm_init_string_table(i64* noundef getelementptr inbounds ([3 x i64], [3 x i64]* @sorbet_moduleRubyStringTable, i32 0, i32 0), %struct.rb_code_position_struct* noundef getelementptr inbounds ([3 x %struct.rb_code_position_struct], [3 x %struct.rb_code_position_struct]* @sorbet_moduleRubyStringDescriptors, i32 0, i32 0), i32 noundef 3, i8* noundef getelementptr inbounds ([138 x i8], [138 x i8]* @sorbet_moduleStringTable, i32 0, i32 0))
  tail call void @sorbet_initLineNumberInfo(%struct.SorbetLineNumberInfo* noundef @fileLineNumberInfo, i64* noundef getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i32 0, i32 0), i32 noundef 32)
  %21 = bitcast i64* %locals.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %rubyId_take_arguments.i.i = load i64, i64* getelementptr inbounds ([14 x i64], [14 x i64]* @sorbet_moduleIDTable, i64 0, i64 0), align 8, !invariant.load !5
  %rubyStr_take_arguments.i.i = load i64, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @sorbet_moduleRubyStringTable, i64 0, i64 0), align 8, !invariant.load !5
  %"rubyStr_test/testdata/compiler/all_arguments.rb.i.i" = load i64, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @sorbet_moduleRubyStringTable, i64 0, i64 1), align 8, !invariant.load !5
  %rubyId_g.i.i = load i64, i64* getelementptr inbounds ([14 x i64], [14 x i64]* @sorbet_moduleIDTable, i64 0, i64 1), align 8, !invariant.load !5
  store i64 %rubyId_g.i.i, i64* %locals.i.i, align 8
  %22 = call %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64 %rubyStr_take_arguments.i.i, i64 %rubyId_take_arguments.i.i, i64 %"rubyStr_test/testdata/compiler/all_arguments.rb.i.i", i64 %realpath, %struct.rb_iseq_struct* noundef null, i32 noundef 1, i32 noundef 4, %struct.SorbetLineNumberInfo* noundef @fileLineNumberInfo, i64* noundef nonnull align 8 %locals.i.i, i32 noundef 1, i32 noundef 8)
  store %struct.rb_iseq_struct* %22, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_Object#14take_arguments", align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  %rubyId_inspect.i = load i64, i64* getelementptr inbounds ([14 x i64], [14 x i64]* @sorbet_moduleIDTable, i64 0, i64 5), align 8, !dbg !29, !invariant.load !5
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_inspect, i64 %rubyId_inspect.i, i32 noundef 16, i32 noundef 0, i32 noundef 0, i64* noundef null), !dbg !29
  %rubyId_puts.i = load i64, i64* getelementptr inbounds ([14 x i64], [14 x i64]* @sorbet_moduleIDTable, i64 0, i64 6), align 8, !dbg !36, !invariant.load !5
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_puts, i64 %rubyId_puts.i, i32 noundef 20, i32 noundef 1, i32 noundef 0, i64* noundef null), !dbg !36
  %"rubyId_<top (required)>.i.i" = load i64, i64* getelementptr inbounds ([14 x i64], [14 x i64]* @sorbet_moduleIDTable, i64 0, i64 7), align 8, !invariant.load !5
  %"rubyStr_<top (required)>.i.i" = load i64, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @sorbet_moduleRubyStringTable, i64 0, i64 2), align 8, !invariant.load !5
  %23 = call %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64 %"rubyStr_<top (required)>.i.i", i64 %"rubyId_<top (required)>.i.i", i64 %"rubyStr_test/testdata/compiler/all_arguments.rb.i.i", i64 %realpath, %struct.rb_iseq_struct* noundef null, i32 noundef 0, i32 noundef 4, %struct.SorbetLineNumberInfo* noundef @fileLineNumberInfo, i64* noundef nonnull %locals.i164.i, i32 noundef 0, i32 noundef 11)
  store %struct.rb_iseq_struct* %23, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.17<static-init>$153", align 8
  %rubyId_d.i = load i64, i64* getelementptr inbounds ([14 x i64], [14 x i64]* @sorbet_moduleIDTable, i64 0, i64 2), align 8, !dbg !39, !invariant.load !5
  %24 = call i64 @rb_id2sym(i64 %rubyId_d.i) #13, !dbg !39
  store i64 %24, i64* %keywords.i, align 8, !dbg !39
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments, i64 %rubyId_take_arguments.i.i, i32 noundef 68, i32 noundef 8, i32 noundef 1, i64* noundef nonnull align 8 %keywords.i), !dbg !39
  store i64 %24, i64* %keywords4.i, align 8, !dbg !40
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.1, i64 %rubyId_take_arguments.i.i, i32 noundef 68, i32 noundef 7, i32 noundef 1, i64* noundef nonnull align 8 %keywords4.i), !dbg !40
  store i64 %24, i64* %keywords10.i, align 8, !dbg !41
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.2, i64 %rubyId_take_arguments.i.i, i32 noundef 68, i32 noundef 6, i32 noundef 1, i64* noundef nonnull align 8 %keywords10.i), !dbg !41
  store i64 %24, i64* %keywords16.i, align 8, !dbg !42
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.3, i64 %rubyId_take_arguments.i.i, i32 noundef 68, i32 noundef 5, i32 noundef 1, i64* noundef nonnull align 8 %keywords16.i), !dbg !42
  store i64 %24, i64* %keywords22.i, align 8, !dbg !43
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.4, i64 %rubyId_take_arguments.i.i, i32 noundef 68, i32 noundef 4, i32 noundef 1, i64* noundef nonnull align 8 %keywords22.i), !dbg !43
  store i64 %24, i64* %keywords28.i, align 8, !dbg !44
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.5, i64 %rubyId_take_arguments.i.i, i32 noundef 68, i32 noundef 3, i32 noundef 1, i64* noundef nonnull align 8 %keywords28.i), !dbg !44
  store i64 %24, i64* %keywords34.i, align 8, !dbg !45
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.6, i64 %rubyId_take_arguments.i.i, i32 noundef 68, i32 noundef 2, i32 noundef 1, i64* noundef nonnull align 8 %keywords34.i), !dbg !45
  store i64 %24, i64* %keywords40.i, align 8, !dbg !46
  %rubyId_e.i = load i64, i64* getelementptr inbounds ([14 x i64], [14 x i64]* @sorbet_moduleIDTable, i64 0, i64 3), align 8, !dbg !46, !invariant.load !5
  %25 = call i64 @rb_id2sym(i64 %rubyId_e.i) #13, !dbg !46
  %26 = getelementptr i64, i64* %keywords40.i, i32 1, !dbg !46
  store i64 %25, i64* %26, align 8, !dbg !46
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.7, i64 %rubyId_take_arguments.i.i, i32 noundef 68, i32 noundef 9, i32 noundef 2, i64* noundef nonnull align 8 %keywords40.i), !dbg !46
  store i64 %24, i64* %keywords47.i, align 8, !dbg !47
  %27 = getelementptr i64, i64* %keywords47.i, i32 1, !dbg !47
  store i64 %25, i64* %27, align 8, !dbg !47
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.8, i64 %rubyId_take_arguments.i.i, i32 noundef 68, i32 noundef 8, i32 noundef 2, i64* noundef nonnull align 8 %keywords47.i), !dbg !47
  store i64 %24, i64* %keywords55.i, align 8, !dbg !48
  %28 = getelementptr i64, i64* %keywords55.i, i32 1, !dbg !48
  store i64 %25, i64* %28, align 8, !dbg !48
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.9, i64 %rubyId_take_arguments.i.i, i32 noundef 68, i32 noundef 7, i32 noundef 2, i64* noundef nonnull align 8 %keywords55.i), !dbg !48
  store i64 %24, i64* %keywords63.i, align 8, !dbg !49
  %29 = getelementptr i64, i64* %keywords63.i, i32 1, !dbg !49
  store i64 %25, i64* %29, align 8, !dbg !49
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.10, i64 %rubyId_take_arguments.i.i, i32 noundef 68, i32 noundef 6, i32 noundef 2, i64* noundef nonnull align 8 %keywords63.i), !dbg !49
  store i64 %24, i64* %keywords71.i, align 8, !dbg !50
  %30 = getelementptr i64, i64* %keywords71.i, i32 1, !dbg !50
  store i64 %25, i64* %30, align 8, !dbg !50
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.11, i64 %rubyId_take_arguments.i.i, i32 noundef 68, i32 noundef 5, i32 noundef 2, i64* noundef nonnull align 8 %keywords71.i), !dbg !50
  store i64 %24, i64* %keywords79.i, align 8, !dbg !51
  %31 = getelementptr i64, i64* %keywords79.i, i32 1, !dbg !51
  store i64 %25, i64* %31, align 8, !dbg !51
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.12, i64 %rubyId_take_arguments.i.i, i32 noundef 68, i32 noundef 4, i32 noundef 2, i64* noundef nonnull align 8 %keywords79.i), !dbg !51
  store i64 %24, i64* %keywords87.i, align 8, !dbg !52
  %32 = getelementptr i64, i64* %keywords87.i, i32 1, !dbg !52
  store i64 %25, i64* %32, align 8, !dbg !52
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.13, i64 %rubyId_take_arguments.i.i, i32 noundef 68, i32 noundef 3, i32 noundef 2, i64* noundef nonnull align 8 %keywords87.i), !dbg !52
  store i64 %24, i64* %keywords95.i, align 8, !dbg !53
  %33 = getelementptr i64, i64* %keywords95.i, i32 1, !dbg !53
  store i64 %25, i64* %33, align 8, !dbg !53
  %rubyId_baz.i = load i64, i64* getelementptr inbounds ([14 x i64], [14 x i64]* @sorbet_moduleIDTable, i64 0, i64 13), align 8, !dbg !53, !invariant.load !5
  %34 = call i64 @rb_id2sym(i64 %rubyId_baz.i) #13, !dbg !53
  %35 = getelementptr i64, i64* %keywords95.i, i32 2, !dbg !53
  store i64 %34, i64* %35, align 8, !dbg !53
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.14, i64 %rubyId_take_arguments.i.i, i32 noundef 68, i32 noundef 10, i32 noundef 3, i64* noundef nonnull align 8 %keywords95.i), !dbg !53
  store i64 %24, i64* %keywords104.i, align 8, !dbg !54
  %36 = getelementptr i64, i64* %keywords104.i, i32 1, !dbg !54
  store i64 %25, i64* %36, align 8, !dbg !54
  %37 = getelementptr i64, i64* %keywords104.i, i32 2, !dbg !54
  store i64 %34, i64* %37, align 8, !dbg !54
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.15, i64 %rubyId_take_arguments.i.i, i32 noundef 68, i32 noundef 9, i32 noundef 3, i64* noundef nonnull align 8 %keywords104.i), !dbg !54
  store i64 %24, i64* %keywords114.i, align 8, !dbg !55
  %38 = getelementptr i64, i64* %keywords114.i, i32 1, !dbg !55
  store i64 %25, i64* %38, align 8, !dbg !55
  %39 = getelementptr i64, i64* %keywords114.i, i32 2, !dbg !55
  store i64 %34, i64* %39, align 8, !dbg !55
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.16, i64 %rubyId_take_arguments.i.i, i32 noundef 68, i32 noundef 8, i32 noundef 3, i64* noundef nonnull align 8 %keywords114.i), !dbg !55
  store i64 %24, i64* %keywords124.i, align 8, !dbg !56
  %40 = getelementptr i64, i64* %keywords124.i, i32 1, !dbg !56
  store i64 %25, i64* %40, align 8, !dbg !56
  %41 = getelementptr i64, i64* %keywords124.i, i32 2, !dbg !56
  store i64 %34, i64* %41, align 8, !dbg !56
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.17, i64 %rubyId_take_arguments.i.i, i32 noundef 68, i32 noundef 7, i32 noundef 3, i64* noundef nonnull align 8 %keywords124.i), !dbg !56
  store i64 %24, i64* %keywords134.i, align 8, !dbg !57
  %42 = getelementptr i64, i64* %keywords134.i, i32 1, !dbg !57
  store i64 %25, i64* %42, align 8, !dbg !57
  %43 = getelementptr i64, i64* %keywords134.i, i32 2, !dbg !57
  store i64 %34, i64* %43, align 8, !dbg !57
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.18, i64 %rubyId_take_arguments.i.i, i32 noundef 68, i32 noundef 6, i32 noundef 3, i64* noundef nonnull align 8 %keywords134.i), !dbg !57
  store i64 %24, i64* %keywords144.i, align 8, !dbg !58
  %44 = getelementptr i64, i64* %keywords144.i, i32 1, !dbg !58
  store i64 %25, i64* %44, align 8, !dbg !58
  %45 = getelementptr i64, i64* %keywords144.i, i32 2, !dbg !58
  store i64 %34, i64* %45, align 8, !dbg !58
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.19, i64 %rubyId_take_arguments.i.i, i32 noundef 68, i32 noundef 5, i32 noundef 3, i64* noundef nonnull align 8 %keywords144.i), !dbg !58
  store i64 %24, i64* %keywords154.i, align 8, !dbg !59
  %46 = getelementptr i64, i64* %keywords154.i, i32 1, !dbg !59
  store i64 %25, i64* %46, align 8, !dbg !59
  %47 = getelementptr i64, i64* %keywords154.i, i32 2, !dbg !59
  store i64 %34, i64* %47, align 8, !dbg !59
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* noundef @ic_take_arguments.20, i64 %rubyId_take_arguments.i.i, i32 noundef 68, i32 noundef 4, i32 noundef 3, i64* noundef nonnull align 8 %keywords154.i), !dbg !59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20)
  %48 = load %struct.rb_vm_struct*, %struct.rb_vm_struct** @ruby_current_vm_ptr, align 8, !tbaa !14
  %49 = getelementptr inbounds %struct.rb_vm_struct, %struct.rb_vm_struct* %48, i64 0, i32 18
  %50 = load i64, i64* %49, align 8, !tbaa !60
  %51 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !14
  %52 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %51, i64 0, i32 2
  %53 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %52, align 8, !tbaa !70
  %54 = bitcast i64* %positional_table.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %54)
  %55 = bitcast i64* %keyword_table.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55)
  %stackFrame.i = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.17<static-init>$153", align 8
  %56 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %53, i64 0, i32 2
  store %struct.rb_iseq_struct* %stackFrame.i, %struct.rb_iseq_struct** %56, align 8, !tbaa !73
  %57 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %53, i64 0, i32 4
  %58 = load i64*, i64** %57, align 8, !tbaa !20
  %59 = load i64, i64* %58, align 8, !tbaa !6
  %60 = and i64 %59, -33
  store i64 %60, i64* %58, align 8, !tbaa !6
  call void @sorbet_setMethodStackFrame(%struct.rb_execution_context_struct* %51, %struct.rb_control_frame_struct* %53, %struct.rb_iseq_struct* %stackFrame.i) #11
  %61 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %53, i64 0, i32 0
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 4), i64** %61, align 8, !dbg !74, !tbaa !14
  %62 = load i64, i64* @rb_cObject, align 8, !dbg !37
  %stackFrame386.i = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_Object#14take_arguments", align 8, !dbg !37
  %63 = call noalias nonnull i8* @ruby_xcalloc(i64 noundef 1, i64 noundef 64) #14, !dbg !37
  %64 = bitcast i8* %63 to i16*, !dbg !37
  %65 = load i16, i16* %64, align 8, !dbg !37
  %66 = and i16 %65, -384, !dbg !37
  %67 = or i16 %66, 119, !dbg !37
  store i16 %67, i16* %64, align 8, !dbg !37
  %68 = getelementptr inbounds i8, i8* %63, i64 8, !dbg !37
  %69 = bitcast i8* %68 to i32*, !dbg !37
  %70 = getelementptr inbounds i8, i8* %63, i64 12, !dbg !37
  %71 = bitcast i8* %70 to i32*, !dbg !37
  %72 = getelementptr inbounds i8, i8* %63, i64 16, !dbg !37
  %73 = getelementptr inbounds i8, i8* %63, i64 20, !dbg !37
  %74 = bitcast i8* %73 to i32*, !dbg !37
  store i32 0, i32* %74, align 4, !dbg !37, !tbaa !75
  %75 = getelementptr inbounds i8, i8* %63, i64 24, !dbg !37
  %76 = bitcast i8* %75 to i32*, !dbg !37
  store i32 0, i32* %76, align 8, !dbg !37, !tbaa !78
  %77 = getelementptr inbounds i8, i8* %63, i64 28, !dbg !37
  %78 = bitcast i8* %77 to i32*, !dbg !37
  store i32 3, i32* %78, align 4, !dbg !37, !tbaa !79
  %79 = getelementptr inbounds i8, i8* %63, i64 4, !dbg !37
  %80 = bitcast i8* %79 to i32*, !dbg !37
  %81 = bitcast i32* %80 to <4 x i32>*, !dbg !37
  store <4 x i32> <i32 7, i32 1, i32 1, i32 2>, <4 x i32>* %81, align 4, !dbg !37, !tbaa !80
  %82 = load <2 x i64>, <2 x i64>* bitcast (i64* getelementptr inbounds ([14 x i64], [14 x i64]* @sorbet_moduleIDTable, i64 0, i64 9) to <2 x i64>*), align 8, !dbg !37, !invariant.load !5
  %83 = bitcast i64* %positional_table.i to <2 x i64>*, !dbg !37
  store <2 x i64> %82, <2 x i64>* %83, align 8, !dbg !37
  %rubyId_c.i = load i64, i64* getelementptr inbounds ([14 x i64], [14 x i64]* @sorbet_moduleIDTable, i64 0, i64 11), align 8, !dbg !37, !invariant.load !5
  %84 = getelementptr i64, i64* %positional_table.i, i32 2, !dbg !37
  store i64 %rubyId_c.i, i64* %84, align 8, !dbg !37
  %85 = getelementptr i64, i64* %positional_table.i, i32 3, !dbg !37
  store i64 %rubyId_g.i.i, i64* %85, align 8, !dbg !37
  %86 = call noalias nonnull i8* @ruby_xmalloc2(i64 noundef 4, i64 noundef 8) #14, !dbg !37
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture nonnull writeonly align 1 %86, i8* nocapture noundef nonnull readonly align 8 dereferenceable(24) %54, i64 noundef 32, i1 noundef false) #11, !dbg !37
  %87 = getelementptr inbounds i8, i8* %63, i64 32, !dbg !37
  %88 = bitcast i8* %87 to i8**, !dbg !37
  store i8* %86, i8** %88, align 8, !dbg !37, !tbaa !81
  store i64 %rubyId_d.i, i64* %keyword_table.i, align 8, !dbg !37
  %89 = getelementptr i64, i64* %keyword_table.i, i32 1, !dbg !37
  store i64 %rubyId_e.i, i64* %89, align 8, !dbg !37
  %rubyId_f.i = load i64, i64* getelementptr inbounds ([14 x i64], [14 x i64]* @sorbet_moduleIDTable, i64 0, i64 12), align 8, !dbg !37, !invariant.load !5
  %90 = getelementptr i64, i64* %keyword_table.i, i32 2, !dbg !37
  store i64 %rubyId_f.i, i64* %90, align 8, !dbg !37
  %91 = getelementptr inbounds i8, i8* %63, i64 40, !dbg !37
  %92 = bitcast i8* %91 to i32*, !dbg !37
  store i32 2, i32* %92, align 8, !dbg !37, !tbaa !82
  %93 = getelementptr inbounds i8, i8* %63, i64 44, !dbg !37
  %94 = bitcast i8* %93 to i32*, !dbg !37
  store i32 1, i32* %94, align 4, !dbg !37, !tbaa !83
  %95 = load i32, i32* %69, align 8, !dbg !37, !tbaa !84
  %96 = load i32, i32* %71, align 4, !dbg !37, !tbaa !85
  %97 = add i32 %95, 2, !dbg !37
  %98 = add i32 %97, %96, !dbg !37
  %99 = getelementptr inbounds i8, i8* %63, i64 48, !dbg !37
  %100 = bitcast i8* %99 to i32*, !dbg !37
  store i32 %98, i32* %100, align 8, !dbg !37, !tbaa !86
  %101 = load i16, i16* %64, align 8, !dbg !37
  %102 = and i16 %101, 32, !dbg !37
  %103 = icmp eq i16 %102, 0, !dbg !37
  br i1 %103, label %"func_<root>.17<static-init>$153.exit", label %104, !dbg !37

104:                                              ; preds = %entry
  %105 = add nsw i32 %98, 1, !dbg !37
  %106 = getelementptr inbounds i8, i8* %63, i64 52, !dbg !37
  %107 = bitcast i8* %106 to i32*, !dbg !37
  store i32 %105, i32* %107, align 4, !dbg !37, !tbaa !87
  br label %"func_<root>.17<static-init>$153.exit", !dbg !37

"func_<root>.17<static-init>$153.exit":           ; preds = %entry, %104
  %108 = call noalias nonnull i8* @ruby_xmalloc2(i64 noundef 3, i64 noundef 8) #14, !dbg !37
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture nonnull writeonly align 1 %108, i8* nocapture noundef nonnull readonly align 8 dereferenceable(24) %55, i64 noundef 24, i1 noundef false) #11, !dbg !37
  %109 = getelementptr inbounds i8, i8* %63, i64 56, !dbg !37
  %110 = bitcast i8* %109 to i8**, !dbg !37
  store i8* %108, i8** %110, align 8, !dbg !37, !tbaa !88
  call void @sorbet_vm_define_method(i64 %62, i8* noundef getelementptr inbounds ([138 x i8], [138 x i8]* @sorbet_moduleStringTable, i64 0, i64 0), i64 (i32, i64*, i64, %struct.rb_control_frame_struct*, i8*, i8*)* noundef @"func_Object#14take_arguments", i8* nonnull %63, %struct.rb_iseq_struct* %stackFrame386.i, i1 noundef zeroext false) #11, !dbg !37
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 8), i64** %61, align 8, !dbg !37, !tbaa !14
  %111 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %53, i64 0, i32 1, !dbg !39
  %112 = load i64*, i64** %111, align 8, !dbg !39
  store i64 %50, i64* %112, align 8, !dbg !39, !tbaa !6
  %113 = getelementptr inbounds i64, i64* %112, i64 1, !dbg !39
  %114 = getelementptr inbounds i64, i64* %113, i64 1, !dbg !39
  %115 = getelementptr inbounds i64, i64* %114, i64 1, !dbg !39
  %116 = getelementptr inbounds i64, i64* %115, i64 1, !dbg !39
  %117 = bitcast i64* %113 to <4 x i64>*, !dbg !39
  store <4 x i64> <i64 -1, i64 -3, i64 -5, i64 -7>, <4 x i64>* %117, align 8, !dbg !39, !tbaa !6
  %118 = getelementptr inbounds i64, i64* %116, i64 1, !dbg !39
  %119 = getelementptr inbounds i64, i64* %118, i64 1, !dbg !39
  %120 = bitcast i64* %118 to <2 x i64>*, !dbg !39
  store <2 x i64> <i64 -9, i64 -11>, <2 x i64>* %120, align 8, !dbg !39, !tbaa !6
  %121 = getelementptr inbounds i64, i64* %119, i64 1, !dbg !39
  store i64 -13, i64* %121, align 8, !dbg !39, !tbaa !6
  %122 = getelementptr inbounds i64, i64* %121, i64 1, !dbg !39
  store i64 -15, i64* %122, align 8, !dbg !39, !tbaa !6
  %123 = getelementptr inbounds i64, i64* %122, i64 1, !dbg !39
  store i64* %123, i64** %111, align 8, !dbg !39
  %send = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments, i64 0), !dbg !39
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 9), i64** %61, align 8, !dbg !39, !tbaa !14
  %124 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %53, i64 0, i32 1, !dbg !40
  %125 = load i64*, i64** %124, align 8, !dbg !40
  store i64 %50, i64* %125, align 8, !dbg !40, !tbaa !6
  %126 = getelementptr inbounds i64, i64* %125, i64 1, !dbg !40
  %127 = getelementptr inbounds i64, i64* %126, i64 1, !dbg !40
  %128 = getelementptr inbounds i64, i64* %127, i64 1, !dbg !40
  %129 = getelementptr inbounds i64, i64* %128, i64 1, !dbg !40
  %130 = bitcast i64* %126 to <4 x i64>*, !dbg !40
  store <4 x i64> <i64 -1, i64 -3, i64 -5, i64 -7>, <4 x i64>* %130, align 8, !dbg !40, !tbaa !6
  %131 = getelementptr inbounds i64, i64* %129, i64 1, !dbg !40
  %132 = getelementptr inbounds i64, i64* %131, i64 1, !dbg !40
  %133 = bitcast i64* %131 to <2 x i64>*, !dbg !40
  store <2 x i64> <i64 -9, i64 -11>, <2 x i64>* %133, align 8, !dbg !40, !tbaa !6
  %134 = getelementptr inbounds i64, i64* %132, i64 1, !dbg !40
  store i64 -15, i64* %134, align 8, !dbg !40, !tbaa !6
  %135 = getelementptr inbounds i64, i64* %134, i64 1, !dbg !40
  store i64* %135, i64** %124, align 8, !dbg !40
  %send4 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.1, i64 0), !dbg !40
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 10), i64** %61, align 8, !dbg !40, !tbaa !14
  %136 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %53, i64 0, i32 1, !dbg !41
  %137 = load i64*, i64** %136, align 8, !dbg !41
  store i64 %50, i64* %137, align 8, !dbg !41, !tbaa !6
  %138 = getelementptr inbounds i64, i64* %137, i64 1, !dbg !41
  %139 = getelementptr inbounds i64, i64* %138, i64 1, !dbg !41
  %140 = getelementptr inbounds i64, i64* %139, i64 1, !dbg !41
  %141 = getelementptr inbounds i64, i64* %140, i64 1, !dbg !41
  %142 = bitcast i64* %138 to <4 x i64>*, !dbg !41
  store <4 x i64> <i64 -1, i64 -3, i64 -5, i64 -7>, <4 x i64>* %142, align 8, !dbg !41, !tbaa !6
  %143 = getelementptr inbounds i64, i64* %141, i64 1, !dbg !41
  %144 = getelementptr inbounds i64, i64* %143, i64 1, !dbg !41
  %145 = bitcast i64* %143 to <2 x i64>*, !dbg !41
  store <2 x i64> <i64 -9, i64 -15>, <2 x i64>* %145, align 8, !dbg !41, !tbaa !6
  %146 = getelementptr inbounds i64, i64* %144, i64 1, !dbg !41
  store i64* %146, i64** %136, align 8, !dbg !41
  %send6 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.2, i64 0), !dbg !41
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 11), i64** %61, align 8, !dbg !41, !tbaa !14
  %147 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %53, i64 0, i32 1, !dbg !42
  %148 = load i64*, i64** %147, align 8, !dbg !42
  store i64 %50, i64* %148, align 8, !dbg !42, !tbaa !6
  %149 = getelementptr inbounds i64, i64* %148, i64 1, !dbg !42
  %150 = getelementptr inbounds i64, i64* %149, i64 1, !dbg !42
  %151 = getelementptr inbounds i64, i64* %150, i64 1, !dbg !42
  %152 = getelementptr inbounds i64, i64* %151, i64 1, !dbg !42
  %153 = bitcast i64* %149 to <4 x i64>*, !dbg !42
  store <4 x i64> <i64 -1, i64 -3, i64 -5, i64 -7>, <4 x i64>* %153, align 8, !dbg !42, !tbaa !6
  %154 = getelementptr inbounds i64, i64* %152, i64 1, !dbg !42
  store i64 -15, i64* %154, align 8, !dbg !42, !tbaa !6
  %155 = getelementptr inbounds i64, i64* %154, i64 1, !dbg !42
  store i64* %155, i64** %147, align 8, !dbg !42
  %send8 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.3, i64 0), !dbg !42
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 12), i64** %61, align 8, !dbg !42, !tbaa !14
  %156 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %53, i64 0, i32 1, !dbg !43
  %157 = load i64*, i64** %156, align 8, !dbg !43
  store i64 %50, i64* %157, align 8, !dbg !43, !tbaa !6
  %158 = getelementptr inbounds i64, i64* %157, i64 1, !dbg !43
  %159 = getelementptr inbounds i64, i64* %158, i64 1, !dbg !43
  %160 = getelementptr inbounds i64, i64* %159, i64 1, !dbg !43
  %161 = getelementptr inbounds i64, i64* %160, i64 1, !dbg !43
  %162 = bitcast i64* %158 to <4 x i64>*, !dbg !43
  store <4 x i64> <i64 -1, i64 -3, i64 -5, i64 -15>, <4 x i64>* %162, align 8, !dbg !43, !tbaa !6
  %163 = getelementptr inbounds i64, i64* %161, i64 1, !dbg !43
  store i64* %163, i64** %156, align 8, !dbg !43
  %send10 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.4, i64 0), !dbg !43
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 13), i64** %61, align 8, !dbg !43, !tbaa !14
  %164 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %53, i64 0, i32 1, !dbg !44
  %165 = load i64*, i64** %164, align 8, !dbg !44
  store i64 %50, i64* %165, align 8, !dbg !44, !tbaa !6
  %166 = getelementptr inbounds i64, i64* %165, i64 1, !dbg !44
  %167 = getelementptr inbounds i64, i64* %166, i64 1, !dbg !44
  %168 = bitcast i64* %166 to <2 x i64>*, !dbg !44
  store <2 x i64> <i64 -1, i64 -3>, <2 x i64>* %168, align 8, !dbg !44, !tbaa !6
  %169 = getelementptr inbounds i64, i64* %167, i64 1, !dbg !44
  store i64 -15, i64* %169, align 8, !dbg !44, !tbaa !6
  %170 = getelementptr inbounds i64, i64* %169, i64 1, !dbg !44
  store i64* %170, i64** %164, align 8, !dbg !44
  %send12 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.5, i64 0), !dbg !44
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 14), i64** %61, align 8, !dbg !44, !tbaa !14
  %171 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %53, i64 0, i32 1, !dbg !45
  %172 = load i64*, i64** %171, align 8, !dbg !45
  store i64 %50, i64* %172, align 8, !dbg !45, !tbaa !6
  %173 = getelementptr inbounds i64, i64* %172, i64 1, !dbg !45
  %174 = getelementptr inbounds i64, i64* %173, i64 1, !dbg !45
  %175 = bitcast i64* %173 to <2 x i64>*, !dbg !45
  store <2 x i64> <i64 -1, i64 -15>, <2 x i64>* %175, align 8, !dbg !45, !tbaa !6
  %176 = getelementptr inbounds i64, i64* %174, i64 1, !dbg !45
  store i64* %176, i64** %171, align 8, !dbg !45
  %send14 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.6, i64 0), !dbg !45
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 16), i64** %61, align 8, !dbg !45, !tbaa !14
  %177 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %53, i64 0, i32 1, !dbg !46
  %178 = load i64*, i64** %177, align 8, !dbg !46
  store i64 %50, i64* %178, align 8, !dbg !46, !tbaa !6
  %179 = getelementptr inbounds i64, i64* %178, i64 1, !dbg !46
  %180 = getelementptr inbounds i64, i64* %179, i64 1, !dbg !46
  %181 = getelementptr inbounds i64, i64* %180, i64 1, !dbg !46
  %182 = getelementptr inbounds i64, i64* %181, i64 1, !dbg !46
  %183 = bitcast i64* %179 to <4 x i64>*, !dbg !46
  store <4 x i64> <i64 -1, i64 -3, i64 -5, i64 -7>, <4 x i64>* %183, align 8, !dbg !46, !tbaa !6
  %184 = getelementptr inbounds i64, i64* %182, i64 1, !dbg !46
  %185 = getelementptr inbounds i64, i64* %184, i64 1, !dbg !46
  %186 = bitcast i64* %184 to <2 x i64>*, !dbg !46
  store <2 x i64> <i64 -9, i64 -11>, <2 x i64>* %186, align 8, !dbg !46, !tbaa !6
  %187 = getelementptr inbounds i64, i64* %185, i64 1, !dbg !46
  store i64 -13, i64* %187, align 8, !dbg !46, !tbaa !6
  %188 = getelementptr inbounds i64, i64* %187, i64 1, !dbg !46
  store i64 -15, i64* %188, align 8, !dbg !46, !tbaa !6
  %189 = getelementptr inbounds i64, i64* %188, i64 1, !dbg !46
  store i64 -17, i64* %189, align 8, !dbg !46, !tbaa !6
  %190 = getelementptr inbounds i64, i64* %189, i64 1, !dbg !46
  store i64* %190, i64** %177, align 8, !dbg !46
  %send16 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.7, i64 0), !dbg !46
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 17), i64** %61, align 8, !dbg !46, !tbaa !14
  %191 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %53, i64 0, i32 1, !dbg !47
  %192 = load i64*, i64** %191, align 8, !dbg !47
  store i64 %50, i64* %192, align 8, !dbg !47, !tbaa !6
  %193 = getelementptr inbounds i64, i64* %192, i64 1, !dbg !47
  %194 = getelementptr inbounds i64, i64* %193, i64 1, !dbg !47
  %195 = getelementptr inbounds i64, i64* %194, i64 1, !dbg !47
  %196 = getelementptr inbounds i64, i64* %195, i64 1, !dbg !47
  %197 = bitcast i64* %193 to <4 x i64>*, !dbg !47
  store <4 x i64> <i64 -1, i64 -3, i64 -5, i64 -7>, <4 x i64>* %197, align 8, !dbg !47, !tbaa !6
  %198 = getelementptr inbounds i64, i64* %196, i64 1, !dbg !47
  %199 = getelementptr inbounds i64, i64* %198, i64 1, !dbg !47
  %200 = bitcast i64* %198 to <2 x i64>*, !dbg !47
  store <2 x i64> <i64 -9, i64 -11>, <2 x i64>* %200, align 8, !dbg !47, !tbaa !6
  %201 = getelementptr inbounds i64, i64* %199, i64 1, !dbg !47
  store i64 -15, i64* %201, align 8, !dbg !47, !tbaa !6
  %202 = getelementptr inbounds i64, i64* %201, i64 1, !dbg !47
  store i64 -17, i64* %202, align 8, !dbg !47, !tbaa !6
  %203 = getelementptr inbounds i64, i64* %202, i64 1, !dbg !47
  store i64* %203, i64** %191, align 8, !dbg !47
  %send18 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.8, i64 0), !dbg !47
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 18), i64** %61, align 8, !dbg !47, !tbaa !14
  %204 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %53, i64 0, i32 1, !dbg !48
  %205 = load i64*, i64** %204, align 8, !dbg !48
  store i64 %50, i64* %205, align 8, !dbg !48, !tbaa !6
  %206 = getelementptr inbounds i64, i64* %205, i64 1, !dbg !48
  %207 = getelementptr inbounds i64, i64* %206, i64 1, !dbg !48
  %208 = getelementptr inbounds i64, i64* %207, i64 1, !dbg !48
  %209 = getelementptr inbounds i64, i64* %208, i64 1, !dbg !48
  %210 = bitcast i64* %206 to <4 x i64>*, !dbg !48
  store <4 x i64> <i64 -1, i64 -3, i64 -5, i64 -7>, <4 x i64>* %210, align 8, !dbg !48, !tbaa !6
  %211 = getelementptr inbounds i64, i64* %209, i64 1, !dbg !48
  %212 = getelementptr inbounds i64, i64* %211, i64 1, !dbg !48
  %213 = bitcast i64* %211 to <2 x i64>*, !dbg !48
  store <2 x i64> <i64 -9, i64 -15>, <2 x i64>* %213, align 8, !dbg !48, !tbaa !6
  %214 = getelementptr inbounds i64, i64* %212, i64 1, !dbg !48
  store i64 -17, i64* %214, align 8, !dbg !48, !tbaa !6
  %215 = getelementptr inbounds i64, i64* %214, i64 1, !dbg !48
  store i64* %215, i64** %204, align 8, !dbg !48
  %send20 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.9, i64 0), !dbg !48
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 19), i64** %61, align 8, !dbg !48, !tbaa !14
  %216 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %53, i64 0, i32 1, !dbg !49
  %217 = load i64*, i64** %216, align 8, !dbg !49
  store i64 %50, i64* %217, align 8, !dbg !49, !tbaa !6
  %218 = getelementptr inbounds i64, i64* %217, i64 1, !dbg !49
  %219 = getelementptr inbounds i64, i64* %218, i64 1, !dbg !49
  %220 = getelementptr inbounds i64, i64* %219, i64 1, !dbg !49
  %221 = getelementptr inbounds i64, i64* %220, i64 1, !dbg !49
  %222 = bitcast i64* %218 to <4 x i64>*, !dbg !49
  store <4 x i64> <i64 -1, i64 -3, i64 -5, i64 -7>, <4 x i64>* %222, align 8, !dbg !49, !tbaa !6
  %223 = getelementptr inbounds i64, i64* %221, i64 1, !dbg !49
  %224 = getelementptr inbounds i64, i64* %223, i64 1, !dbg !49
  %225 = bitcast i64* %223 to <2 x i64>*, !dbg !49
  store <2 x i64> <i64 -15, i64 -17>, <2 x i64>* %225, align 8, !dbg !49, !tbaa !6
  %226 = getelementptr inbounds i64, i64* %224, i64 1, !dbg !49
  store i64* %226, i64** %216, align 8, !dbg !49
  %send22 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.10, i64 0), !dbg !49
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 20), i64** %61, align 8, !dbg !49, !tbaa !14
  %227 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %53, i64 0, i32 1, !dbg !50
  %228 = load i64*, i64** %227, align 8, !dbg !50
  store i64 %50, i64* %228, align 8, !dbg !50, !tbaa !6
  %229 = getelementptr inbounds i64, i64* %228, i64 1, !dbg !50
  %230 = getelementptr inbounds i64, i64* %229, i64 1, !dbg !50
  %231 = getelementptr inbounds i64, i64* %230, i64 1, !dbg !50
  %232 = getelementptr inbounds i64, i64* %231, i64 1, !dbg !50
  %233 = bitcast i64* %229 to <4 x i64>*, !dbg !50
  store <4 x i64> <i64 -1, i64 -3, i64 -5, i64 -15>, <4 x i64>* %233, align 8, !dbg !50, !tbaa !6
  %234 = getelementptr inbounds i64, i64* %232, i64 1, !dbg !50
  store i64 -17, i64* %234, align 8, !dbg !50, !tbaa !6
  %235 = getelementptr inbounds i64, i64* %234, i64 1, !dbg !50
  store i64* %235, i64** %227, align 8, !dbg !50
  %send24 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.11, i64 0), !dbg !50
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 21), i64** %61, align 8, !dbg !50, !tbaa !14
  %236 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %53, i64 0, i32 1, !dbg !51
  %237 = load i64*, i64** %236, align 8, !dbg !51
  store i64 %50, i64* %237, align 8, !dbg !51, !tbaa !6
  %238 = getelementptr inbounds i64, i64* %237, i64 1, !dbg !51
  %239 = getelementptr inbounds i64, i64* %238, i64 1, !dbg !51
  %240 = getelementptr inbounds i64, i64* %239, i64 1, !dbg !51
  %241 = getelementptr inbounds i64, i64* %240, i64 1, !dbg !51
  %242 = bitcast i64* %238 to <4 x i64>*, !dbg !51
  store <4 x i64> <i64 -1, i64 -3, i64 -15, i64 -17>, <4 x i64>* %242, align 8, !dbg !51, !tbaa !6
  %243 = getelementptr inbounds i64, i64* %241, i64 1, !dbg !51
  store i64* %243, i64** %236, align 8, !dbg !51
  %send26 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.12, i64 0), !dbg !51
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 22), i64** %61, align 8, !dbg !51, !tbaa !14
  %244 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %53, i64 0, i32 1, !dbg !52
  %245 = load i64*, i64** %244, align 8, !dbg !52
  store i64 %50, i64* %245, align 8, !dbg !52, !tbaa !6
  %246 = getelementptr inbounds i64, i64* %245, i64 1, !dbg !52
  %247 = getelementptr inbounds i64, i64* %246, i64 1, !dbg !52
  %248 = bitcast i64* %246 to <2 x i64>*, !dbg !52
  store <2 x i64> <i64 -1, i64 -15>, <2 x i64>* %248, align 8, !dbg !52, !tbaa !6
  %249 = getelementptr inbounds i64, i64* %247, i64 1, !dbg !52
  store i64 -17, i64* %249, align 8, !dbg !52, !tbaa !6
  %250 = getelementptr inbounds i64, i64* %249, i64 1, !dbg !52
  store i64* %250, i64** %244, align 8, !dbg !52
  %send28 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.13, i64 0), !dbg !52
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 24), i64** %61, align 8, !dbg !52, !tbaa !14
  %251 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %53, i64 0, i32 1, !dbg !53
  %252 = load i64*, i64** %251, align 8, !dbg !53
  store i64 %50, i64* %252, align 8, !dbg !53, !tbaa !6
  %253 = getelementptr inbounds i64, i64* %252, i64 1, !dbg !53
  %254 = getelementptr inbounds i64, i64* %253, i64 1, !dbg !53
  %255 = getelementptr inbounds i64, i64* %254, i64 1, !dbg !53
  %256 = getelementptr inbounds i64, i64* %255, i64 1, !dbg !53
  %257 = bitcast i64* %253 to <4 x i64>*, !dbg !53
  store <4 x i64> <i64 -1, i64 -3, i64 -5, i64 -7>, <4 x i64>* %257, align 8, !dbg !53, !tbaa !6
  %258 = getelementptr inbounds i64, i64* %256, i64 1, !dbg !53
  %259 = getelementptr inbounds i64, i64* %258, i64 1, !dbg !53
  %260 = bitcast i64* %258 to <2 x i64>*, !dbg !53
  store <2 x i64> <i64 -9, i64 -11>, <2 x i64>* %260, align 8, !dbg !53, !tbaa !6
  %261 = getelementptr inbounds i64, i64* %259, i64 1, !dbg !53
  store i64 -13, i64* %261, align 8, !dbg !53, !tbaa !6
  %262 = getelementptr inbounds i64, i64* %261, i64 1, !dbg !53
  store i64 -15, i64* %262, align 8, !dbg !53, !tbaa !6
  %263 = getelementptr inbounds i64, i64* %262, i64 1, !dbg !53
  store i64 -17, i64* %263, align 8, !dbg !53, !tbaa !6
  %264 = getelementptr inbounds i64, i64* %263, i64 1, !dbg !53
  store i64 -19, i64* %264, align 8, !dbg !53, !tbaa !6
  %265 = getelementptr inbounds i64, i64* %264, i64 1, !dbg !53
  store i64* %265, i64** %251, align 8, !dbg !53
  %send30 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.14, i64 0), !dbg !53
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 25), i64** %61, align 8, !dbg !53, !tbaa !14
  %266 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %53, i64 0, i32 1, !dbg !54
  %267 = load i64*, i64** %266, align 8, !dbg !54
  store i64 %50, i64* %267, align 8, !dbg !54, !tbaa !6
  %268 = getelementptr inbounds i64, i64* %267, i64 1, !dbg !54
  %269 = getelementptr inbounds i64, i64* %268, i64 1, !dbg !54
  %270 = getelementptr inbounds i64, i64* %269, i64 1, !dbg !54
  %271 = getelementptr inbounds i64, i64* %270, i64 1, !dbg !54
  %272 = bitcast i64* %268 to <4 x i64>*, !dbg !54
  store <4 x i64> <i64 -1, i64 -3, i64 -5, i64 -7>, <4 x i64>* %272, align 8, !dbg !54, !tbaa !6
  %273 = getelementptr inbounds i64, i64* %271, i64 1, !dbg !54
  %274 = getelementptr inbounds i64, i64* %273, i64 1, !dbg !54
  %275 = bitcast i64* %273 to <2 x i64>*, !dbg !54
  store <2 x i64> <i64 -9, i64 -11>, <2 x i64>* %275, align 8, !dbg !54, !tbaa !6
  %276 = getelementptr inbounds i64, i64* %274, i64 1, !dbg !54
  store i64 -15, i64* %276, align 8, !dbg !54, !tbaa !6
  %277 = getelementptr inbounds i64, i64* %276, i64 1, !dbg !54
  store i64 -17, i64* %277, align 8, !dbg !54, !tbaa !6
  %278 = getelementptr inbounds i64, i64* %277, i64 1, !dbg !54
  store i64 -19, i64* %278, align 8, !dbg !54, !tbaa !6
  %279 = getelementptr inbounds i64, i64* %278, i64 1, !dbg !54
  store i64* %279, i64** %266, align 8, !dbg !54
  %send32 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.15, i64 0), !dbg !54
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 26), i64** %61, align 8, !dbg !54, !tbaa !14
  %280 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %53, i64 0, i32 1, !dbg !55
  %281 = load i64*, i64** %280, align 8, !dbg !55
  store i64 %50, i64* %281, align 8, !dbg !55, !tbaa !6
  %282 = getelementptr inbounds i64, i64* %281, i64 1, !dbg !55
  %283 = getelementptr inbounds i64, i64* %282, i64 1, !dbg !55
  %284 = getelementptr inbounds i64, i64* %283, i64 1, !dbg !55
  %285 = getelementptr inbounds i64, i64* %284, i64 1, !dbg !55
  %286 = bitcast i64* %282 to <4 x i64>*, !dbg !55
  store <4 x i64> <i64 -1, i64 -3, i64 -5, i64 -7>, <4 x i64>* %286, align 8, !dbg !55, !tbaa !6
  %287 = getelementptr inbounds i64, i64* %285, i64 1, !dbg !55
  %288 = getelementptr inbounds i64, i64* %287, i64 1, !dbg !55
  %289 = bitcast i64* %287 to <2 x i64>*, !dbg !55
  store <2 x i64> <i64 -9, i64 -15>, <2 x i64>* %289, align 8, !dbg !55, !tbaa !6
  %290 = getelementptr inbounds i64, i64* %288, i64 1, !dbg !55
  store i64 -17, i64* %290, align 8, !dbg !55, !tbaa !6
  %291 = getelementptr inbounds i64, i64* %290, i64 1, !dbg !55
  store i64 -19, i64* %291, align 8, !dbg !55, !tbaa !6
  %292 = getelementptr inbounds i64, i64* %291, i64 1, !dbg !55
  store i64* %292, i64** %280, align 8, !dbg !55
  %send34 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.16, i64 0), !dbg !55
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 27), i64** %61, align 8, !dbg !55, !tbaa !14
  %293 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %53, i64 0, i32 1, !dbg !56
  %294 = load i64*, i64** %293, align 8, !dbg !56
  store i64 %50, i64* %294, align 8, !dbg !56, !tbaa !6
  %295 = getelementptr inbounds i64, i64* %294, i64 1, !dbg !56
  %296 = getelementptr inbounds i64, i64* %295, i64 1, !dbg !56
  %297 = getelementptr inbounds i64, i64* %296, i64 1, !dbg !56
  %298 = getelementptr inbounds i64, i64* %297, i64 1, !dbg !56
  %299 = bitcast i64* %295 to <4 x i64>*, !dbg !56
  store <4 x i64> <i64 -1, i64 -3, i64 -5, i64 -7>, <4 x i64>* %299, align 8, !dbg !56, !tbaa !6
  %300 = getelementptr inbounds i64, i64* %298, i64 1, !dbg !56
  %301 = getelementptr inbounds i64, i64* %300, i64 1, !dbg !56
  %302 = bitcast i64* %300 to <2 x i64>*, !dbg !56
  store <2 x i64> <i64 -15, i64 -17>, <2 x i64>* %302, align 8, !dbg !56, !tbaa !6
  %303 = getelementptr inbounds i64, i64* %301, i64 1, !dbg !56
  store i64 -19, i64* %303, align 8, !dbg !56, !tbaa !6
  %304 = getelementptr inbounds i64, i64* %303, i64 1, !dbg !56
  store i64* %304, i64** %293, align 8, !dbg !56
  %send36 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.17, i64 0), !dbg !56
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 28), i64** %61, align 8, !dbg !56, !tbaa !14
  %305 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %53, i64 0, i32 1, !dbg !57
  %306 = load i64*, i64** %305, align 8, !dbg !57
  store i64 %50, i64* %306, align 8, !dbg !57, !tbaa !6
  %307 = getelementptr inbounds i64, i64* %306, i64 1, !dbg !57
  %308 = getelementptr inbounds i64, i64* %307, i64 1, !dbg !57
  %309 = getelementptr inbounds i64, i64* %308, i64 1, !dbg !57
  %310 = getelementptr inbounds i64, i64* %309, i64 1, !dbg !57
  %311 = bitcast i64* %307 to <4 x i64>*, !dbg !57
  store <4 x i64> <i64 -1, i64 -3, i64 -5, i64 -15>, <4 x i64>* %311, align 8, !dbg !57, !tbaa !6
  %312 = getelementptr inbounds i64, i64* %310, i64 1, !dbg !57
  %313 = getelementptr inbounds i64, i64* %312, i64 1, !dbg !57
  %314 = bitcast i64* %312 to <2 x i64>*, !dbg !57
  store <2 x i64> <i64 -17, i64 -19>, <2 x i64>* %314, align 8, !dbg !57, !tbaa !6
  %315 = getelementptr inbounds i64, i64* %313, i64 1, !dbg !57
  store i64* %315, i64** %305, align 8, !dbg !57
  %send38 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.18, i64 0), !dbg !57
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 29), i64** %61, align 8, !dbg !57, !tbaa !14
  %316 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %53, i64 0, i32 1, !dbg !58
  %317 = load i64*, i64** %316, align 8, !dbg !58
  store i64 %50, i64* %317, align 8, !dbg !58, !tbaa !6
  %318 = getelementptr inbounds i64, i64* %317, i64 1, !dbg !58
  %319 = getelementptr inbounds i64, i64* %318, i64 1, !dbg !58
  %320 = getelementptr inbounds i64, i64* %319, i64 1, !dbg !58
  %321 = getelementptr inbounds i64, i64* %320, i64 1, !dbg !58
  %322 = bitcast i64* %318 to <4 x i64>*, !dbg !58
  store <4 x i64> <i64 -1, i64 -3, i64 -15, i64 -17>, <4 x i64>* %322, align 8, !dbg !58, !tbaa !6
  %323 = getelementptr inbounds i64, i64* %321, i64 1, !dbg !58
  store i64 -19, i64* %323, align 8, !dbg !58, !tbaa !6
  %324 = getelementptr inbounds i64, i64* %323, i64 1, !dbg !58
  store i64* %324, i64** %316, align 8, !dbg !58
  %send40 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.19, i64 0), !dbg !58
  store i64* getelementptr inbounds ([32 x i64], [32 x i64]* @iseqEncodedArray, i64 0, i64 30), i64** %61, align 8, !dbg !58, !tbaa !14
  %325 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %53, i64 0, i32 1, !dbg !59
  %326 = load i64*, i64** %325, align 8, !dbg !59
  store i64 %50, i64* %326, align 8, !dbg !59, !tbaa !6
  %327 = getelementptr inbounds i64, i64* %326, i64 1, !dbg !59
  %328 = getelementptr inbounds i64, i64* %327, i64 1, !dbg !59
  %329 = getelementptr inbounds i64, i64* %328, i64 1, !dbg !59
  %330 = getelementptr inbounds i64, i64* %329, i64 1, !dbg !59
  %331 = bitcast i64* %327 to <4 x i64>*, !dbg !59
  store <4 x i64> <i64 -1, i64 -15, i64 -17, i64 -19>, <4 x i64>* %331, align 8, !dbg !59, !tbaa !6
  %332 = getelementptr inbounds i64, i64* %330, i64 1, !dbg !59
  store i64* %332, i64** %325, align 8, !dbg !59
  %send42 = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* @ic_take_arguments.20, i64 0), !dbg !59
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %54)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55)
  ret void
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

attributes #0 = { nounwind readnone willreturn "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #4 = { allocsize(0,1) "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nosync nounwind willreturn }
attributes #6 = { nounwind ssp uwtable "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind sspreq uwtable }
attributes #8 = { sspreq }
attributes #9 = { noreturn nounwind }
attributes #10 = { noreturn }
attributes #11 = { nounwind }
attributes #12 = { willreturn }
attributes #13 = { nounwind readnone willreturn }
attributes #14 = { nounwind allocsize(0,1) }

!llvm.module.flags = !{!0, !1, !2}
!llvm.dbg.cu = !{!3}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"cf-protection-return", i32 1}
!2 = !{i32 4, !"cf-protection-branch", i32 1}
!3 = distinct !DICompileUnit(language: DW_LANG_C, file: !4, producer: "Sorbet LLVM", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !5)
!4 = !DIFile(filename: "test/testdata/compiler/all_arguments.rb", directory: ".")
!5 = !{}
!6 = !{!7, !7, i64 0}
!7 = !{!"long", !8, i64 0}
!8 = !{!"omnipotent char", !9, i64 0}
!9 = !{!"Simple C/C++ TBAA"}
!10 = distinct !DISubprogram(name: "Object#take_arguments", linkageName: "func_Object#14take_arguments", scope: null, file: !4, line: 4, type: !11, scopeLine: 4, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3, retainedNodes: !5)
!11 = !DISubroutineType(types: !12)
!12 = !{!13}
!13 = !DIBasicType(name: "VALUE", size: 64, encoding: DW_ATE_signed)
!14 = !{!15, !15, i64 0}
!15 = !{!"any pointer", !8, i64 0}
!16 = !DILocation(line: 4, column: 1, scope: !10)
!17 = !{!18, !7, i64 0}
!18 = !{!"RBasic", !7, i64 0, !7, i64 8}
!19 = !{!"branch_weights", i32 1, i32 2000}
!20 = !{!21, !15, i64 32}
!21 = !{!"rb_control_frame_struct", !15, i64 0, !15, i64 8, !15, i64 16, !7, i64 24, !15, i64 32, !15, i64 40, !15, i64 48}
!22 = !{!23}
!23 = distinct !{!23, !24, !"vm_get_ep: argument 0"}
!24 = distinct !{!24, !"vm_get_ep"}
!25 = !{!"branch_weights", i32 2000, i32 1}
!26 = !DILocation(line: 4, column: 23, scope: !10)
!27 = !DILocation(line: 4, column: 36, scope: !10)
!28 = !DILocation(line: 0, scope: !10)
!29 = !DILocation(line: 5, column: 10, scope: !10)
!30 = !{!31}
!31 = distinct !{!31, !32, !"vm_get_ep: argument 0"}
!32 = distinct !{!32, !"vm_get_ep"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"sorbet_buildArrayIntrinsic: argument 0"}
!35 = distinct !{!35, !"sorbet_buildArrayIntrinsic"}
!36 = !DILocation(line: 5, column: 5, scope: !10)
!37 = !DILocation(line: 4, column: 1, scope: !38)
!38 = distinct !DISubprogram(name: "<root>.<static-init>", linkageName: "func_<root>.17<static-init>$153", scope: null, file: !4, line: 4, type: !11, scopeLine: 4, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3, retainedNodes: !5)
!39 = !DILocation(line: 8, column: 1, scope: !38)
!40 = !DILocation(line: 9, column: 1, scope: !38)
!41 = !DILocation(line: 10, column: 1, scope: !38)
!42 = !DILocation(line: 11, column: 1, scope: !38)
!43 = !DILocation(line: 12, column: 1, scope: !38)
!44 = !DILocation(line: 13, column: 1, scope: !38)
!45 = !DILocation(line: 14, column: 1, scope: !38)
!46 = !DILocation(line: 16, column: 1, scope: !38)
!47 = !DILocation(line: 17, column: 1, scope: !38)
!48 = !DILocation(line: 18, column: 1, scope: !38)
!49 = !DILocation(line: 19, column: 1, scope: !38)
!50 = !DILocation(line: 20, column: 1, scope: !38)
!51 = !DILocation(line: 21, column: 1, scope: !38)
!52 = !DILocation(line: 22, column: 1, scope: !38)
!53 = !DILocation(line: 24, column: 1, scope: !38)
!54 = !DILocation(line: 25, column: 1, scope: !38)
!55 = !DILocation(line: 26, column: 1, scope: !38)
!56 = !DILocation(line: 27, column: 1, scope: !38)
!57 = !DILocation(line: 28, column: 1, scope: !38)
!58 = !DILocation(line: 29, column: 1, scope: !38)
!59 = !DILocation(line: 30, column: 1, scope: !38)
!60 = !{!61, !7, i64 400}
!61 = !{!"rb_vm_struct", !7, i64 0, !62, i64 8, !15, i64 192, !15, i64 200, !15, i64 208, !66, i64 216, !8, i64 224, !63, i64 264, !63, i64 280, !63, i64 296, !63, i64 312, !7, i64 328, !65, i64 336, !65, i64 340, !65, i64 344, !65, i64 344, !65, i64 344, !65, i64 344, !65, i64 348, !7, i64 352, !8, i64 360, !7, i64 400, !7, i64 408, !7, i64 416, !7, i64 424, !7, i64 432, !7, i64 440, !7, i64 448, !15, i64 456, !15, i64 464, !67, i64 472, !68, i64 992, !15, i64 1016, !15, i64 1024, !65, i64 1032, !65, i64 1036, !63, i64 1040, !8, i64 1056, !7, i64 1096, !7, i64 1104, !7, i64 1112, !7, i64 1120, !7, i64 1128, !65, i64 1136, !15, i64 1144, !15, i64 1152, !15, i64 1160, !15, i64 1168, !15, i64 1176, !15, i64 1184, !65, i64 1192, !69, i64 1200, !8, i64 1232}
!62 = !{!"rb_global_vm_lock_struct", !15, i64 0, !8, i64 8, !63, i64 48, !15, i64 64, !65, i64 72, !8, i64 80, !8, i64 128, !65, i64 176, !65, i64 180}
!63 = !{!"list_head", !64, i64 0}
!64 = !{!"list_node", !15, i64 0, !15, i64 8}
!65 = !{!"int", !8, i64 0}
!66 = !{!"long long", !8, i64 0}
!67 = !{!"", !8, i64 0}
!68 = !{!"rb_hook_list_struct", !15, i64 0, !65, i64 8, !65, i64 12, !65, i64 16}
!69 = !{!"", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24}
!70 = !{!71, !15, i64 16}
!71 = !{!"rb_execution_context_struct", !15, i64 0, !7, i64 8, !15, i64 16, !15, i64 24, !15, i64 32, !65, i64 40, !65, i64 44, !15, i64 48, !15, i64 56, !15, i64 64, !7, i64 72, !7, i64 80, !15, i64 88, !7, i64 96, !15, i64 104, !15, i64 112, !7, i64 120, !7, i64 128, !8, i64 136, !8, i64 137, !7, i64 144, !72, i64 152}
!72 = !{!"", !15, i64 0, !15, i64 8, !7, i64 16, !8, i64 24}
!73 = !{!21, !15, i64 16}
!74 = !DILocation(line: 0, scope: !38)
!75 = !{!76, !65, i64 20}
!76 = !{!"rb_sorbet_param_struct", !77, i64 0, !65, i64 4, !65, i64 8, !65, i64 12, !65, i64 16, !65, i64 20, !65, i64 24, !65, i64 28, !15, i64 32, !65, i64 40, !65, i64 44, !65, i64 48, !65, i64 52, !15, i64 56}
!77 = !{!"", !65, i64 0, !65, i64 0, !65, i64 0, !65, i64 0, !65, i64 0, !65, i64 0, !65, i64 0, !65, i64 0, !65, i64 1, !65, i64 1}
!78 = !{!76, !65, i64 24}
!79 = !{!76, !65, i64 28}
!80 = !{!65, !65, i64 0}
!81 = !{!76, !15, i64 32}
!82 = !{!76, !65, i64 40}
!83 = !{!76, !65, i64 44}
!84 = !{!76, !65, i64 8}
!85 = !{!76, !65, i64 12}
!86 = !{!76, !65, i64 48}
!87 = !{!76, !65, i64 52}
!88 = !{!76, !15, i64 56}
