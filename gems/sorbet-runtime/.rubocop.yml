inherit_from: .rubocop_todo.yml
require: rubocop-performance

AllCops:
  NewCops: disable

# Stripe in-house styles that are prevalent in the codebase already.
#
# Generally, prefer not to add things here; unless there's a specific reason
# to disable a cop (like those with their own comments below), we'd rather stick
# to the community defaults.
Style/RaiseArgs:
  EnforcedStyle: compact
Layout/SpaceAroundEqualsInParameterDefault:
  EnforcedStyle: no_space
Layout/SpaceInsideHashLiteralBraces:
  EnforcedStyle: no_space
Layout/SpaceInsideBlockBraces:
  EnforcedStyle: no_space
  SpaceBeforeBlockParameters: false
Layout/EndAlignment:
  EnforcedStyleAlignWith: start_of_line
Style/TrailingCommaInHashLiteral:
  EnforcedStyleForMultiline: comma
Style/TrailingCommaInArrayLiteral:
  EnforcedStyleForMultiline: comma
Style/TrivialAccessors:
  IgnoreClassMethods: true
Style/EmptyElse:
  EnforcedStyle: empty
Layout/FirstArrayElementIndentation:
  EnforcedStyle: consistent

# This doesn't play very well with implementations of Sorbet abstract methods
Lint/UnusedMethodArgument:
  Enabled: false

# Prone to false positives when we care about which class owns a method
Lint/UselessMethodDefinition:
  Enabled: false

Metrics/ClassLength:
  Enabled: false

# This can be bad for performance
Style/MultipleComparison:
  Enabled: false

Naming/FileName:
  Exclude:
    # Filename deliberately matches gem name
    - 'lib/sorbet-runtime.rb'

Lint/MissingSuper:
  Exclude:
    # Don't force type definitions to call `super` in initialize
    - 'lib/types/types/**/*'
    - 'lib/types/private/types/**/*'

Performance/CollectionLiteralInLoop:
  Exclude:
    # Ok to prioritize brevity over perf in tests
    - 'test/**/*'

# We frequently care about the exact type of values, not just truthiness
Style/DoubleNegation:
  Enabled: false

# We don't want to needlessly break older Rubies
Style/SlicingWithRange:
  Enabled: false

Layout/EmptyLines:
  Exclude:
    # We deliberately add extra lines here to aid Pry debugging
    - 'lib/types/private/methods/call_validation.rb'
    - 'lib/types/private/methods/call_validation_2_6.rb'
    - 'lib/types/private/methods/call_validation_2_7.rb'

Layout/ArgumentAlignment:
  Exclude:
    # This is generated code where the readability of the generator
    # matters more than the readability of the result
    - 'lib/types/private/methods/call_validation_2_6.rb'
    - 'lib/types/private/methods/call_validation_2_7.rb'
