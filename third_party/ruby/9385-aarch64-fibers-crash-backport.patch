commit 7f97e3540ce448b501bcbee15afac5f94bb22dd9
Author: Yuta Saito <kateinoigakukun@gmail.com>
Date:   Mon Feb 5 23:50:20 2024 +0900

    [Backport 3.3] [Bug #20085] Use consistent default options for `-mbranch-protection` (#9385)
    
    [Bug #20085] Use consistent default options for `-mbranch-protection`
    
    We need to use the same options for both C compiler and assembler
    when `-mbranch-protection` is guessed by configure. Otherwise,
    `coroutine/arm64/Context.{h,S}` will use incompatible PAC strategies.

diff --git a/configure.ac b/configure.ac
index 9286946fc1..18b4247991 100644
--- a/configure.ac
+++ b/configure.ac
@@ -830,7 +830,10 @@ AS_IF([test "$GCC" = yes], [
 	AS_FOR(option, opt, [-mbranch-protection=pac-ret -msign-return-address=all], [
             RUBY_TRY_CFLAGS(option, [branch_protection=yes], [branch_protection=no])
             AS_IF([test "x$branch_protection" = xyes], [
+                # C compiler and assembler must be consistent for -mbranch-protection
+                # since they both check `__ARM_FEATURE_PAC_DEFAULT` definition.
                 RUBY_APPEND_OPTION(XCFLAGS, option)
+                RUBY_APPEND_OPTION(ASFLAGS, option)
                 break
             ])
         ])
--- a/configure	2024-04-16 14:03:03.035215032 +0000
+++ b/configure	2024-04-16 16:43:00.603560413 +0000
@@ -10964,9 +9969,10 @@
 
 fi
 
-            if test "x$branch_protection" = xyes
-then :
+            if test "x$branch_protection" = xyes; then :
 
+                # C compiler and assembler must be consistent for -mbranch-protection
+                # since they both check `__ARM_FEATURE_PAC_DEFAULT` definition.
                 # RUBY_APPEND_OPTION(XCFLAGS)
 	case " ${XCFLAGS-} " in #(
   *" $opt "*) :
@@ -10976,6 +10005,15 @@
   *) :
      XCFLAGS="$XCFLAGS $opt" ;;
 esac
+                # RUBY_APPEND_OPTION(ASFLAGS)
+	case " ${ASFLAGS-} " in #(
+  *" $opt "*) :
+     ;; #(
+  '  ') :
+     ASFLAGS="$opt" ;; #(
+  *) :
+     ASFLAGS="$ASFLAGS $opt" ;;
+esac
                 break
 
 fi
