diff --git gc.c gc.c
index 67a709ff79..2825466788 100644
--- gc.c
+++ gc.c
@@ -8738,7 +8738,7 @@ gc_count(rb_execution_context_t *ec, VALUE self)
 static VALUE
 gc_info_decode(rb_objspace_t *objspace, const VALUE hash_or_key, const int orig_flags)
 {
-    static VALUE sym_major_by = Qnil, sym_gc_by, sym_immediate_sweep, sym_have_finalizer, sym_state;
+    static VALUE sym_major_by = Qnil, sym_gc_by, sym_immediate_sweep, sym_have_finalizer, sym_state, sym_need_major_by;
     static VALUE sym_nofree, sym_oldgen, sym_shady, sym_force, sym_stress;
 #if RGENGC_ESTIMATE_OLDMALLOC
     static VALUE sym_oldmalloc;
@@ -8746,8 +8746,9 @@ gc_info_decode(rb_objspace_t *objspace, const VALUE hash_or_key, const int orig_
     static VALUE sym_newobj, sym_malloc, sym_method, sym_capi;
     static VALUE sym_none, sym_marking, sym_sweeping;
     VALUE hash = Qnil, key = Qnil;
-    VALUE major_by;
+    VALUE major_by, need_major_by;
     VALUE flags = orig_flags ? orig_flags : objspace->profile.latest_gc_info;
+    unsigned int need_major_flags = objspace->rgengc.need_major_gc;
 
     if (SYMBOL_P(hash_or_key)) {
         key = hash_or_key;
@@ -8766,6 +8767,7 @@ gc_info_decode(rb_objspace_t *objspace, const VALUE hash_or_key, const int orig_
         S(immediate_sweep);
         S(have_finalizer);
         S(state);
+        S(need_major_by);
 
         S(stress);
         S(nofree);
@@ -8803,6 +8805,19 @@ gc_info_decode(rb_objspace_t *objspace, const VALUE hash_or_key, const int orig_
       Qnil;
     SET(major_by, major_by);
 
+    if (orig_flags == 0) { /* set need_major_by only if flags not set explicitly */
+        need_major_by =
+            (need_major_flags & GPR_FLAG_MAJOR_BY_NOFREE) ? sym_nofree :
+            (need_major_flags & GPR_FLAG_MAJOR_BY_OLDGEN) ? sym_oldgen :
+            (need_major_flags & GPR_FLAG_MAJOR_BY_SHADY)  ? sym_shady :
+            (need_major_flags & GPR_FLAG_MAJOR_BY_FORCE)  ? sym_force :
+#if RGENGC_ESTIMATE_OLDMALLOC
+            (need_major_flags & GPR_FLAG_MAJOR_BY_OLDMALLOC) ? sym_oldmalloc :
+#endif
+            Qnil;
+        SET(need_major_by, need_major_by);
+    }
+
     SET(gc_by,
         (flags & GPR_FLAG_NEWOBJ) ? sym_newobj :
         (flags & GPR_FLAG_MALLOC) ? sym_malloc :
